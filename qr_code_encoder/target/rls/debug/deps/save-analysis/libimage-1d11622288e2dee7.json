{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0","program":"C:\\Users\\Jamison\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","image","C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"default\"","--cfg","feature=\"dxt\"","--cfg","feature=\"gif\"","--cfg","feature=\"gif_codec\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg-decoder\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"png\"","--cfg","feature=\"png_codec\"","--cfg","feature=\"pnm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=1d11622288e2dee7","-C","extra-filename=-1d11622288e2dee7","--out-dir","c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps","--extern","byteorder=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libbyteorder-1b176784949dc7ed.rmeta","--extern","gif=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libgif-30a6878ad29c3f68.rmeta","--extern","jpeg_decoder=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libjpeg_decoder-fbeab54a2202059e.rmeta","--extern","lzw=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\liblzw-42df19149c090995.rmeta","--extern","num_derive=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\num_derive-5baad46eda89cb80.dll","--extern","num_iter=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libnum_iter-254c1f9ff63196e9.rmeta","--extern","num_rational=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libnum_rational-4fe6f9aa8db1f754.rmeta","--extern","num_traits=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libnum_traits-0ff99ffd695be5cc.rmeta","--extern","png=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libpng-dbf99d04767151e4.rmeta","--extern","scoped_threadpool=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libscoped_threadpool-add4fccc64acb337.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Jamison\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libimage-1d11622288e2dee7.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[12610608367035108583,11994404750283047279]},"crate_root":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src","external_crates":[{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":13,"id":{"name":"byteorder","disambiguator":[14017159674203571698,6368851971258358934]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":14,"id":{"name":"num_iter","disambiguator":[4275207641917423135,9882223391826164968]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":15,"id":{"name":"num_integer","disambiguator":[14814270028788137393,13875721128492910534]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":16,"id":{"name":"num_traits","disambiguator":[4993267418457121021,12381701421445213156]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":17,"id":{"name":"num_rational","disambiguator":[4220739232100616957,2364681625279268365]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":18,"id":{"name":"lzw","disambiguator":[16937952572275214937,8984561127474180115]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","num":19,"id":{"name":"num_derive","disambiguator":[9916267874341402445,5377124750404090210]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","num":20,"id":{"name":"png","disambiguator":[15711276751271564082,17834630199186728015]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","num":21,"id":{"name":"bitflags","disambiguator":[5710033096448610905,11540835774118402762]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","num":22,"id":{"name":"inflate","disambiguator":[3173084448952873208,7457742264310177239]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","num":23,"id":{"name":"adler32","disambiguator":[5664971475563171165,1749485914846394955]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","num":24,"id":{"name":"deflate","disambiguator":[2297884365750258262,13332457396628246813]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":25,"id":{"name":"jpeg_decoder","disambiguator":[7970296436548162331,3571226119283212571]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":26,"id":{"name":"rayon","disambiguator":[16513322538026779094,11801168641105093997]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":27,"id":{"name":"either","disambiguator":[4926871542712679437,11777597642654868815]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":28,"id":{"name":"rayon_core","disambiguator":[3217629325730123576,5417067783944648560]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":29,"id":{"name":"crossbeam_channel","disambiguator":[2956449328913573331,18068975129897325229]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":30,"id":{"name":"cfg_if","disambiguator":[5645197522646515231,12829599349970567115]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":31,"id":{"name":"crossbeam_utils","disambiguator":[15817631178772822294,6736719387789155103]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":32,"id":{"name":"lazy_static","disambiguator":[10336935334542864265,8017296924341794806]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":33,"id":{"name":"crossbeam_deque","disambiguator":[12583441330635860881,5863646986712684575]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":34,"id":{"name":"crossbeam_epoch","disambiguator":[4571157764881056637,15976608447111096558]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":35,"id":{"name":"scopeguard","disambiguator":[429372990002042441,15390206183276144831]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":36,"id":{"name":"memoffset","disambiguator":[3970154280437347038,15246041295084614295]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","num":37,"id":{"name":"num_cpus","disambiguator":[14864963375272620296,8147215962498545620]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","num":38,"id":{"name":"gif","disambiguator":[2730006147643818615,2351086956886665985]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","num":39,"id":{"name":"color_quant","disambiguator":[15476471970387349106,2697579332012082017]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","num":40,"id":{"name":"scoped_threadpool","disambiguator":[17345774330985584260,5977804670916618321]}}],"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":0,"byte_end":2541,"line_start":1,"line_end":159,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3247},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":595,"byte_end":604,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3248},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":622,"byte_end":626,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"alias_span":null,"name":"Gray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3249},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":622,"byte_end":626,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"alias_span":null,"name":"Gray","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":3251},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":632,"byte_end":635,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"alias_span":null,"name":"RGB","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3252},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":632,"byte_end":635,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"alias_span":null,"name":"RGB","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":641,"byte_end":648,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3255},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":641,"byte_end":648,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":654,"byte_end":659,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"alias_span":null,"name":"GrayA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3258},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":654,"byte_end":659,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"alias_span":null,"name":"GrayA","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":3260},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":665,"byte_end":669,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3261},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":665,"byte_end":669,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"alias_span":null,"name":"RGBA","value":"","parent":{"krate":0,"index":16}},{"kind":"Use","ref_id":{"krate":0,"index":3478},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":695,"byte_end":699,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":695,"byte_end":699,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":3534},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":705,"byte_end":710,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3407},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":705,"byte_end":710,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":19}},{"kind":"Use","ref_id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":716,"byte_end":719,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":716,"byte_end":719,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":725,"byte_end":729,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3364},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":725,"byte_end":729,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":21}},{"kind":"Use","ref_id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":755,"byte_end":767,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3141},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":773,"byte_end":783,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1909},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":789,"byte_end":800,"line_start":45,"line_end":45,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":806,"byte_end":820,"line_start":46,"line_end":46,"column_start":5,"column_end":19},"alias_span":null,"name":"DecodingResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":826,"byte_end":834,"line_start":47,"line_end":47,"column_start":5,"column_end":13},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":840,"byte_end":852,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":875,"byte_end":881,"line_start":50,"line_end":50,"column_start":5,"column_end":11},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":887,"byte_end":896,"line_start":51,"line_end":51,"column_start":5,"column_end":14},"alias_span":null,"name":"MutPixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2480},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":919,"byte_end":929,"line_start":54,"line_end":54,"column_start":19,"column_end":29},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2483},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":947,"byte_end":955,"line_start":56,"line_end":56,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2484},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":947,"byte_end":955,"line_start":56,"line_end":56,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":33}},{"kind":"Use","ref_id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":961,"byte_end":968,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2482},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":961,"byte_end":968,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":34}},{"kind":"Use","ref_id":{"krate":0,"index":2485},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":974,"byte_end":984,"line_start":58,"line_end":58,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2486},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":974,"byte_end":984,"line_start":58,"line_end":58,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":990,"byte_end":998,"line_start":59,"line_end":59,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2488},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":990,"byte_end":998,"line_start":59,"line_end":59,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":2489},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1004,"byte_end":1012,"line_start":60,"line_end":60,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2490},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1004,"byte_end":1012,"line_start":60,"line_end":60,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":37}},{"kind":"Use","ref_id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1032,"byte_end":1043,"line_start":63,"line_end":63,"column_start":16,"column_end":27},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3172},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1061,"byte_end":1064,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"alias_span":null,"name":"PNG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1061,"byte_end":1064,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"alias_span":null,"name":"PNG","value":"","parent":{"krate":0,"index":40}},{"kind":"Use","ref_id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1070,"byte_end":1074,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"alias_span":null,"name":"JPEG","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3175},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1070,"byte_end":1074,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"alias_span":null,"name":"JPEG","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1080,"byte_end":1083,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"alias_span":null,"name":"GIF","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3177},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1080,"byte_end":1083,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"alias_span":null,"name":"GIF","value":"","parent":{"krate":0,"index":42}},{"kind":"Use","ref_id":{"krate":0,"index":3178},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1089,"byte_end":1093,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"alias_span":null,"name":"WEBP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3179},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1089,"byte_end":1093,"line_start":68,"line_end":68,"column_start":5,"column_end":9},"alias_span":null,"name":"WEBP","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":3186},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1099,"byte_end":1102,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"alias_span":null,"name":"BMP","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3187},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1099,"byte_end":1102,"line_start":69,"line_end":69,"column_start":5,"column_end":8},"alias_span":null,"name":"BMP","value":"","parent":{"krate":0,"index":44}},{"kind":"Use","ref_id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1108,"byte_end":1111,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"alias_span":null,"name":"ICO","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3189},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1108,"byte_end":1111,"line_start":70,"line_end":70,"column_start":5,"column_end":8},"alias_span":null,"name":"ICO","value":"","parent":{"krate":0,"index":45}},{"kind":"Use","ref_id":{"krate":0,"index":3180},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1117,"byte_end":1120,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"alias_span":null,"name":"PNM","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3181},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1117,"byte_end":1120,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"alias_span":null,"name":"PNM","value":"","parent":{"krate":0,"index":46}},{"kind":"Use","ref_id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1141,"byte_end":1158,"line_start":74,"line_end":74,"column_start":16,"column_end":33},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2232},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1183,"byte_end":1188,"line_start":77,"line_end":77,"column_start":5,"column_end":10},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1194,"byte_end":1207,"line_start":78,"line_end":78,"column_start":5,"column_end":18},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3562},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1232,"byte_end":1243,"line_start":80,"line_end":80,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2411},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1249,"byte_end":1257,"line_start":81,"line_end":81,"column_start":5,"column_end":13},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2412},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1263,"byte_end":1272,"line_start":82,"line_end":82,"column_start":5,"column_end":14},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1278,"byte_end":1287,"line_start":83,"line_end":83,"column_start":5,"column_end":14},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2414},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1293,"byte_end":1307,"line_start":84,"line_end":84,"column_start":5,"column_end":19},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2421},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1338,"byte_end":1347,"line_start":88,"line_end":88,"column_start":17,"column_end":26},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1404,"byte_end":1408,"line_start":92,"line_end":92,"column_start":5,"column_end":9},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1414,"byte_end":1418,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1424,"byte_end":1440,"line_start":94,"line_end":94,"column_start":5,"column_end":21},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1446,"byte_end":1474,"line_start":95,"line_end":95,"column_start":5,"column_end":33},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1480,"byte_end":1492,"line_start":96,"line_end":96,"column_start":5,"column_end":17},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1498,"byte_end":1509,"line_start":97,"line_end":97,"column_start":5,"column_end":16},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3232},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1532,"byte_end":1544,"line_start":100,"line_end":100,"column_start":19,"column_end":31},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3239},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1562,"byte_end":1571,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"alias_span":null,"name":"ImageRgb8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3240},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1562,"byte_end":1571,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"alias_span":null,"name":"ImageRgb8","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1577,"byte_end":1587,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageRgba8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1577,"byte_end":1587,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageRgba8","value":"","parent":{"krate":0,"index":67}},{"kind":"Use","ref_id":{"krate":0,"index":3233},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1593,"byte_end":1603,"line_start":104,"line_end":104,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageLuma8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3234},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1593,"byte_end":1603,"line_start":104,"line_end":104,"column_start":5,"column_end":15},"alias_span":null,"name":"ImageLuma8","value":"","parent":{"krate":0,"index":68}},{"kind":"Use","ref_id":{"krate":0,"index":3236},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1609,"byte_end":1620,"line_start":105,"line_end":105,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageLumaA8","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3237},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1609,"byte_end":1620,"line_start":105,"line_end":105,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageLumaA8","value":"","parent":{"krate":0,"index":69}},{"kind":"Use","ref_id":{"krate":0,"index":3573},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1650,"byte_end":1655,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2446},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1661,"byte_end":1667,"line_start":110,"line_end":110,"column_start":5,"column_end":11},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2480},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16574,"byte_end":16584,"line_start":11,"line_end":11,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":2483},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16628,"byte_end":16636,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":2484},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16628,"byte_end":16636,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":123}},{"kind":"Use","ref_id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16642,"byte_end":16649,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":2482},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16642,"byte_end":16649,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":124}},{"kind":"Use","ref_id":{"krate":0,"index":2485},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16655,"byte_end":16665,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":2486},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16655,"byte_end":16665,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":125}},{"kind":"Use","ref_id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16671,"byte_end":16679,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":2488},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16671,"byte_end":16679,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":126}},{"kind":"Use","ref_id":{"krate":0,"index":2489},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16685,"byte_end":16693,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":2490},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16685,"byte_end":16693,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":127}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16754,"byte_end":16762,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16768,"byte_end":16777,"line_start":24,"line_end":24,"column_start":5,"column_end":14},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16783,"byte_end":16792,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16798,"byte_end":16813,"line_start":26,"line_end":26,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16819,"byte_end":16832,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16886,"byte_end":16895,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16901,"byte_end":16907,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16913,"byte_end":16922,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16928,"byte_end":16932,"line_start":35,"line_end":35,"column_start":5,"column_end":9},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16938,"byte_end":16947,"line_start":36,"line_end":36,"column_start":5,"column_end":14},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17005,"byte_end":17014,"line_start":41,"line_end":41,"column_start":5,"column_end":14},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17020,"byte_end":17026,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17032,"byte_end":17040,"line_start":43,"line_end":43,"column_start":5,"column_end":13},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17046,"byte_end":17054,"line_start":44,"line_end":44,"column_start":5,"column_end":13},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17060,"byte_end":17069,"line_start":45,"line_end":45,"column_start":5,"column_end":14},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17075,"byte_end":17083,"line_start":46,"line_end":46,"column_start":5,"column_end":13},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17089,"byte_end":17096,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":2476},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17089,"byte_end":17096,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":147}},{"kind":"Use","ref_id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17102,"byte_end":17108,"line_start":48,"line_end":48,"column_start":5,"column_end":11},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17114,"byte_end":17126,"line_start":49,"line_end":49,"column_start":5,"column_end":17},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":115}},{"kind":"Use","ref_id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\mod.rs","byte_start":53798,"byte_end":53809,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"WebpDecoder","value":"","parent":{"krate":0,"index":283}},{"kind":"Use","ref_id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124185,"byte_end":124195,"line_start":6,"line_end":6,"column_start":24,"column_end":34},"alias_span":null,"name":"PNMDecoder","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124220,"byte_end":124230,"line_start":7,"line_end":7,"column_start":24,"column_end":34},"alias_span":null,"name":"PNMEncoder","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124255,"byte_end":124264,"line_start":8,"line_end":8,"column_start":24,"column_end":33},"alias_span":null,"name":"PNMHeader","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124266,"byte_end":124276,"line_start":8,"line_end":8,"column_start":35,"column_end":45},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124278,"byte_end":124292,"line_start":8,"line_end":8,"column_start":47,"column_end":61},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124318,"byte_end":124333,"line_start":9,"line_end":9,"column_start":24,"column_end":39},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":2647},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124335,"byte_end":124352,"line_start":9,"line_end":9,"column_start":41,"column_end":58},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124354,"byte_end":124366,"line_start":9,"line_end":9,"column_start":60,"column_end":72},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":2617},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124368,"byte_end":124381,"line_start":9,"line_end":9,"column_start":74,"column_end":87},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":2627},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124383,"byte_end":124395,"line_start":9,"line_end":9,"column_start":89,"column_end":101},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":489}},{"kind":"Use","ref_id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\mod.rs","byte_start":202470,"byte_end":202480,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"ICODecoder","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\mod.rs","byte_start":202505,"byte_end":202515,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":879}},{"kind":"Use","ref_id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","byte_start":215289,"byte_end":215300,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGDecoder","value":"","parent":{"krate":0,"index":967}},{"kind":"Use","ref_id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","byte_start":215325,"byte_end":215336,"line_start":11,"line_end":11,"column_start":24,"column_end":35},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":967}},{"kind":"Use","ref_id":{"krate":38,"index":352},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":252844,"byte_end":252849,"line_start":15,"line_end":15,"column_start":21,"column_end":26},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":1126}},{"kind":"Use","ref_id":{"krate":38,"index":283},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":252851,"byte_end":252865,"line_start":15,"line_end":15,"column_start":28,"column_end":42},"alias_span":null,"name":"DisposalMethod","value":"","parent":{"krate":0,"index":1126}},{"kind":"Use","ref_id":{"krate":0,"index":2943},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\mod.rs","byte_start":261058,"byte_end":261069,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"TIFFDecoder","value":"","parent":{"krate":0,"index":1189}},{"kind":"Use","ref_id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\mod.rs","byte_start":292555,"byte_end":292565,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"TGADecoder","value":"","parent":{"krate":0,"index":1340}},{"kind":"Use","ref_id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","byte_start":309852,"byte_end":309862,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":1431}},{"kind":"Use","ref_id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","byte_start":309887,"byte_end":309897,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPDecoder","value":"","parent":{"krate":0,"index":1431}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":363437,"byte_end":363438,"line_start":16,"line_end":16,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"HDRAdapter, rgbe8, SIGNATURE, RGBE8Pixel","parent":{"krate":0,"index":1618}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":363467,"byte_end":363468,"line_start":17,"line_end":17,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1618}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":0,"byte_end":2541,"line_start":1,"line_end":159,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":3584},{"krate":0,"index":13},{"krate":0,"index":3586},{"krate":0,"index":14},{"krate":0,"index":3588},{"krate":0,"index":15},{"krate":0,"index":3590},{"krate":0,"index":16},{"krate":0,"index":3592},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":3594},{"krate":0,"index":19},{"krate":0,"index":3596},{"krate":0,"index":20},{"krate":0,"index":3598},{"krate":0,"index":21},{"krate":0,"index":3600},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":3620},{"krate":0,"index":34},{"krate":0,"index":3622},{"krate":0,"index":35},{"krate":0,"index":3624},{"krate":0,"index":36},{"krate":0,"index":3626},{"krate":0,"index":37},{"krate":0,"index":3628},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":3632},{"krate":0,"index":41},{"krate":0,"index":3634},{"krate":0,"index":42},{"krate":0,"index":3636},{"krate":0,"index":43},{"krate":0,"index":3638},{"krate":0,"index":44},{"krate":0,"index":3640},{"krate":0,"index":45},{"krate":0,"index":3642},{"krate":0,"index":46},{"krate":0,"index":3644},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":3678},{"krate":0,"index":67},{"krate":0,"index":3680},{"krate":0,"index":68},{"krate":0,"index":3682},{"krate":0,"index":69},{"krate":0,"index":3684},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":115},{"krate":0,"index":283},{"krate":0,"index":489},{"krate":0,"index":826},{"krate":0,"index":879},{"krate":0,"index":967},{"krate":0,"index":1126},{"krate":0,"index":1189},{"krate":0,"index":1340},{"krate":0,"index":1431},{"krate":0,"index":1618},{"krate":0,"index":1799},{"krate":0,"index":1887},{"krate":0,"index":1999},{"krate":0,"index":2005},{"krate":0,"index":2125},{"krate":0,"index":2208},{"krate":0,"index":2415},{"krate":0,"index":2443},{"krate":0,"index":2463}],"decl_id":null,"docs":" This crate provides native rust implementations of\n image encoders and decoders and basic image manipulation\n functions.\n","sig":null,"attributes":[{"value":"/ This crate provides native rust implementations of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/ image encoders and decoders and basic image manipulation","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":55,"byte_end":115,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"/ functions.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":116,"byte_end":130,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":132,"byte_end":154,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":155,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":187,"byte_end":225,"line_start":7,"line_end":7,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\mod.rs","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":77}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"/ Mathematical helper functions and types.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\mod.rs","byte_start":2543,"byte_end":2587,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","parent":null,"children":[{"krate":0,"index":75}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[{"value":"/ Shared mathematical utility functions.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2616,"byte_end":2658,"line_start":1,"line_end":1,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2903,"byte_end":2908,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"pub fn clamp<N>(N, N, N) -> N where N: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"/ Cut value to be inside given range","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2660,"byte_end":2698,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2699,"byte_end":2702,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2703,"byte_end":2710,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use image::math::utils;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2711,"byte_end":2738,"line_start":6,"line_end":6,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2739,"byte_end":2742,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(utils::clamp(-5, 0, 10),  0);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2743,"byte_end":2787,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp( 6, 0, 10),  6);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2788,"byte_end":2832,"line_start":9,"line_end":9,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(utils::clamp(15, 0, 10), 10);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2833,"byte_end":2877,"line_start":10,"line_end":10,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2878,"byte_end":2885,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\utils.rs","byte_start":2886,"byte_end":2895,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":2464},{"krate":0,"index":2472},{"krate":0,"index":2470},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":101}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also <http://www.acm.org/~dekker/NEUQUANT.HTML>\n","sig":null,"attributes":[{"value":"/ NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":3030,"byte_end":3101,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ See \"Kohonen neural networks for optimal colour quantization\"","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":3102,"byte_end":3167,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"/ in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":3168,"byte_end":3241,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ for a discussion of the algorithm.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":3242,"byte_end":3280,"line_start":4,"line_end":4,"column_start":1,"column_end":39}},{"value":"/ See also <http://www.acm.org/~dekker/NEUQUANT.HTML>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":3281,"byte_end":3336,"line_start":5,"line_end":5,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":5186,"byte_end":5194,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" Neural network color quantizer\n","sig":null,"attributes":[{"value":"/ Neural network color quantizer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":5140,"byte_end":5174,"line_start":65,"line_end":65,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":5496,"byte_end":5499,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"pub fn new(i32, usize, &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neural network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Creates a new neural network and trains it with the supplied data","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":5415,"byte_end":5484,"line_start":77,"line_end":77,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":6058,"byte_end":6062,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"pub fn init(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neural network and trains it with the supplied data\n","sig":null,"attributes":[{"value":"/ Initializes the neural network and trains it with the supplied data","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":5975,"byte_end":6046,"line_start":93,"line_end":93,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":6900,"byte_end":6909,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"pub fn map_pixel(&Self, &mut [u8])","parent":null,"children":[],"decl_id":null,"docs":" Maps the pixel in-place to the best-matching color in the color map\n","sig":null,"attributes":[{"value":"/ Maps the pixel in-place to the best-matching color in the color map","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":6795,"byte_end":6866,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":6871,"byte_end":6888,"line_start":115,"line_end":115,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":7461,"byte_end":7469,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"pub fn index_of(&Self, &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map for `pixel`\n","sig":null,"attributes":[{"value":"/ Finds the best-matching index in the color map for `pixel`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":7365,"byte_end":7427,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":7432,"byte_end":7449,"line_start":130,"line_end":130,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":3708},{"krate":0,"index":124},{"krate":0,"index":3710},{"krate":0,"index":125},{"krate":0,"index":3712},{"krate":0,"index":126},{"krate":0,"index":3714},{"krate":0,"index":127},{"krate":0,"index":3716},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":3750},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":165},{"krate":0,"index":224},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"/ Image Processing Functions","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":16436,"byte_end":16466,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\affine.rs","byte_start":20939,"byte_end":20947,"line_start":8,"line_end":8,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"pub fn rotate90<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\affine.rs","byte_start":20819,"byte_end":20860,"line_start":6,"line_end":6,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\affine.rs","byte_start":21524,"byte_end":21533,"line_start":27,"line_end":27,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"pub fn rotate180<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\affine.rs","byte_start":21403,"byte_end":21445,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\affine.rs","byte_start":22122,"byte_end":22131,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"pub fn rotate270<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\affine.rs","byte_start":22001,"byte_end":22043,"line_start":44,"line_end":44,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\affine.rs","byte_start":22695,"byte_end":22710,"line_start":65,"line_end":65,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"pub fn flip_horizontal<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\affine.rs","byte_start":22586,"byte_end":22616,"line_start":63,"line_end":63,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\affine.rs","byte_start":23272,"byte_end":23285,"line_start":84,"line_end":84,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"pub fn flip_vertical<I: GenericImage + 'static>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\affine.rs","byte_start":23165,"byte_end":23193,"line_start":82,"line_end":82,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":3762},{"krate":0,"index":168},{"krate":0,"index":3764},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":189},{"krate":0,"index":195},{"krate":0,"index":200},{"krate":0,"index":2475},{"krate":0,"index":2478},{"krate":0,"index":2477},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":212},{"krate":0,"index":216},{"krate":0,"index":221}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"/ Functions for altering and converting the color of pixelbufs","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":27094,"byte_end":27158,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":27415,"byte_end":27424,"line_start":13,"line_end":13,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"pub fn grayscale<I: GenericImage>(&I)\n->\n    ImageBuffer<Luma<<I::Pixel as Pixel>::Subpixel>,\n                Vec<<I::Pixel as Pixel>::Subpixel>> where\n<I::Pixel as Pixel>::Subpixel: 'static,\n<<I::Pixel as Pixel>::Subpixel as Num>::FromStrRadixErr: 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":27364,"byte_end":27407,"line_start":12,"line_end":12,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":28033,"byte_end":28039,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"pub fn invert<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":27940,"byte_end":27988,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":27989,"byte_end":28025,"line_start":31,"line_end":31,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":28502,"byte_end":28510,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"pub fn contrast<I, P, S>(&I, f32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":28303,"byte_end":28349,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":28350,"byte_end":28409,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":28410,"byte_end":28494,"line_start":47,"line_end":47,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":29494,"byte_end":29502,"line_start":83,"line_end":83,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"pub fn brighten<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":29320,"byte_end":29352,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":29353,"byte_end":29409,"line_start":81,"line_end":81,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":29410,"byte_end":29486,"line_start":82,"line_end":82,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":30433,"byte_end":30442,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"pub fn huerotate<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":30217,"byte_end":30251,"line_start":111,"line_end":111,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":30252,"byte_end":30303,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":30304,"byte_end":30373,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":30374,"byte_end":30425,"line_start":114,"line_end":114,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32376,"byte_end":32384,"line_start":173,"line_end":173,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32350,"byte_end":32365,"line_start":172,"line_end":172,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32448,"byte_end":32453,"line_start":175,"line_end":175,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32391,"byte_end":32438,"line_start":174,"line_end":174,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32545,"byte_end":32553,"line_start":178,"line_end":178,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"pub fn index_of(&Self, &Self::Color) -> usize","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" Returns the index of the closed match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closed match of `color`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32459,"byte_end":32511,"line_start":176,"line_end":176,"column_start":5,"column_end":57}},{"value":"/ in the color map.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32516,"byte_end":32537,"line_start":177,"line_end":177,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32659,"byte_end":32668,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"pub fn map_color(&Self, &mut Self::Color)","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32596,"byte_end":32651,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32764,"byte_end":32771,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map\n","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32705,"byte_end":32729,"line_start":183,"line_end":183,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":34647,"byte_end":34653,"line_start":256,"line_end":256,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"pub fn dither<Pix, Map>(&mut ImageBuffer<Pix, Vec<u8>>, &Map) where\nMap: ColorMap<Color = Pix>, Pix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":34495,"byte_end":34576,"line_start":254,"line_end":254,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":34577,"byte_end":34639,"line_start":255,"line_end":255,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":36164,"byte_end":36176,"line_start":293,"line_end":293,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"pub fn index_colors<Pix, Map>(&ImageBuffer<Pix, Vec<u8>>, &Map)\n-> ImageBuffer<Luma<u8>, Vec<u8>> where Map: ColorMap<Color = Pix>,\nPix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":36067,"byte_end":36156,"line_start":292,"line_end":292,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37421,"byte_end":37428,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37396,"byte_end":37416,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2483},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37457,"byte_end":37465,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37435,"byte_end":37452,"line_start":21,"line_end":21,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2485},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37493,"byte_end":37503,"line_start":25,"line_end":25,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37472,"byte_end":37488,"line_start":24,"line_end":24,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37534,"byte_end":37542,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37510,"byte_end":37529,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2489},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37579,"byte_end":37587,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37549,"byte_end":37574,"line_start":30,"line_end":30,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2480},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37379,"byte_end":37389,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"pub enum FilterType {\n\n    /// Nearest Neighbor\n    Nearest,\n\n    /// Linear Filter\n    Triangle,\n\n    /// Cubic Filter\n    CatmullRom,\n\n    /// Gaussian Filter\n    Gaussian,\n\n    /// Lanczos with window 3\n    Lanczos3,\n}","parent":null,"children":[{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2485},{"krate":0,"index":2487},{"krate":0,"index":2489}],"decl_id":null,"docs":" Available Sampling Filters\n","sig":null,"attributes":[{"value":"/ Available Sampling Filters","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":37316,"byte_end":37346,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":45350,"byte_end":45359,"line_start":280,"line_end":280,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"pub fn thumbnail<I, P, S>(&I, u32, u32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\nEnlargeable + 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image down to the specific dimensions.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image down to the specific dimensions.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":45280,"byte_end":45342,"line_start":279,"line_end":279,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":47416,"byte_end":47425,"line_start":338,"line_end":338,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"pub fn filter3x3<I, P, S>(&I, &[f32]) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P> + 'static, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":47223,"byte_end":47274,"line_start":335,"line_end":335,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":47275,"byte_end":47338,"line_start":336,"line_end":336,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":49868,"byte_end":49874,"line_start":412,"line_end":412,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"pub fn resize<I: GenericImage + 'static>(&I, u32, u32, FilterType)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":49625,"byte_end":49683,"line_start":408,"line_end":408,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":49684,"byte_end":49742,"line_start":409,"line_end":409,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":49743,"byte_end":49790,"line_start":410,"line_end":410,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":51110,"byte_end":51114,"line_start":448,"line_end":448,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"pub fn blur<I: GenericImage + 'static>(&I, f32)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":50928,"byte_end":50979,"line_start":445,"line_end":445,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":50980,"byte_end":51032,"line_start":446,"line_end":446,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":52079,"byte_end":52088,"line_start":478,"line_end":478,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"pub fn unsharpen<I, P, S>(&I, f32, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImage<Pixel = P> + 'static, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":51748,"byte_end":51801,"line_start":472,"line_end":472,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":51802,"byte_end":51853,"line_start":473,"line_end":473,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for the difference between","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":51854,"byte_end":51917,"line_start":474,"line_end":474,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":51918,"byte_end":51921,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\sample.rs","byte_start":51922,"byte_end":52001,"line_start":476,"line_end":476,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17377,"byte_end":17381,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"pub fn crop<I: GenericImage + 'static>(&mut I, u32, u32, u32, u32)\n-> SubImage<, I> where I::Pixel: 'static,\n<I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17261,"byte_end":17300,"line_start":58,"line_end":58,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17957,"byte_end":17964,"line_start":78,"line_end":78,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"pub fn overlay<I: GenericImage>(&mut I, &I, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17900,"byte_end":17949,"line_start":77,"line_end":77,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":18830,"byte_end":18837,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"pub fn replace<I: GenericImage>(&mut I, &I, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":18757,"byte_end":18822,"line_start":106,"line_end":106,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::webp","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\mod.rs","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":318},{"krate":0,"index":323}],"decl_id":null,"docs":" Decoding of Webp Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1766,"byte_end":1790,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/ Decoding of Webp Images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\mod.rs","byte_start":53746,"byte_end":53773,"line_start":1,"line_end":1,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\decoder.rs","byte_start":54165,"byte_end":54176,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"WebpDecoder","qualname":"::webp::decoder::WebpDecoder","value":"WebpDecoder {  }","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A Representation of a Webp Image format decoder.\n","sig":null,"attributes":[{"value":"/ A Representation of a Webp Image format decoder.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\decoder.rs","byte_start":54101,"byte_end":54153,"line_start":17,"line_end":17,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\decoder.rs","byte_start":54411,"byte_end":54414,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<WebpDecoder<R>>::new","value":"pub fn new(R) -> WebpDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebpDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[{"value":"/ Create a new WebpDecoder from the Reader ```r```.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\decoder.rs","byte_start":54293,"byte_end":54346,"line_start":26,"line_end":26,"column_start":5,"column_end":58}},{"value":"/ This function takes ownership of the Reader.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\decoder.rs","byte_start":54351,"byte_end":54399,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::webp::vp8","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":3830},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400},{"krate":0,"index":406},{"krate":0,"index":2494},{"krate":0,"index":2503},{"krate":0,"index":2502},{"krate":0,"index":414},{"krate":0,"index":2507},{"krate":0,"index":2522},{"krate":0,"index":2520},{"krate":0,"index":2518},{"krate":0,"index":2524},{"krate":0,"index":2537},{"krate":0,"index":2536},{"krate":0,"index":2534},{"krate":0,"index":418},{"krate":0,"index":441},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[{"value":"/ An implementation of the VP8 Video Codec","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":59586,"byte_end":59630,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":59631,"byte_end":59634,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a partial implementation of the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":59635,"byte_end":59691,"line_start":3,"line_end":3,"column_start":1,"column_end":57}},{"value":"/ VP8 video format as defined in RFC-6386.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":59692,"byte_end":59736,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":59737,"byte_end":59740,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It decodes Keyframes only sans Loop Filtering.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":59741,"byte_end":59791,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/ VP8 is the underpinning of the Webp image format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":59792,"byte_end":59844,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":59845,"byte_end":59848,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":59849,"byte_end":59868,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"/ * [rfc-6386](http://tools.ietf.org/html/rfc6386) - The VP8 Data Format and Decoding Guide","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":59869,"byte_end":59962,"line_start":10,"line_end":10,"column_start":1,"column_end":94}},{"value":"/ * [VP8.pdf](http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/37073.pdf) - An overview of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":59963,"byte_end":60085,"line_start":11,"line_end":11,"column_start":1,"column_end":123}},{"value":"/ of the VP8 format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":60086,"byte_end":60107,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":60108,"byte_end":60111,"line_start":13,"line_end":13,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87740,"byte_end":87745,"line_start":753,"line_end":753,"column_start":12,"column_end":17},"name":"Frame","qualname":"::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[{"value":"/ A Representation of the last decoded video frame","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87643,"byte_end":87695,"line_start":751,"line_end":751,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2508},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87792,"byte_end":87797,"line_start":755,"line_end":755,"column_start":9,"column_end":14},"name":"width","qualname":"::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[{"value":"/ The width of the luma plane","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87752,"byte_end":87783,"line_start":754,"line_end":754,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87850,"byte_end":87856,"line_start":758,"line_end":758,"column_start":9,"column_end":15},"name":"height","qualname":"::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[{"value":"/ The height of the luma plane","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87809,"byte_end":87841,"line_start":757,"line_end":757,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2510},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87908,"byte_end":87912,"line_start":761,"line_end":761,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[{"value":"/ The luma plane of the frame","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87868,"byte_end":87899,"line_start":760,"line_end":760,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87983,"byte_end":87991,"line_start":764,"line_end":764,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is a keyframe","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87928,"byte_end":87974,"line_start":763,"line_end":763,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":88087,"byte_end":88098,"line_start":769,"line_end":769,"column_start":9,"column_end":20},"name":"for_display","qualname":"::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[{"value":"/ Indicates whether this frame is intended for display","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":88022,"byte_end":88078,"line_start":768,"line_end":768,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2514},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":88229,"byte_end":88239,"line_start":774,"line_end":774,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[{"value":"/ The pixel type of the frame as defined by Section 9.2","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":88130,"byte_end":88187,"line_start":772,"line_end":772,"column_start":5,"column_end":62}},{"value":"/ of the VP8 Specification","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":88192,"byte_end":88220,"line_start":773,"line_end":773,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":88616,"byte_end":88626,"line_start":802,"line_end":802,"column_start":12,"column_end":22},"name":"VP8Decoder","qualname":"::webp::vp8::VP8Decoder","value":"VP8Decoder {  }","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[{"value":"/ VP8 Decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":88558,"byte_end":88573,"line_start":799,"line_end":799,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":88574,"byte_end":88577,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ Only decodes keyframes","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":88578,"byte_end":88604,"line_start":801,"line_end":801,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":89290,"byte_end":89293,"line_start":837,"line_end":837,"column_start":12,"column_end":15},"name":"new","qualname":"<VP8Decoder<R>>::new","value":"pub fn new(R) -> VP8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[{"value":"/ Create a new decoder.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":89186,"byte_end":89211,"line_start":835,"line_end":835,"column_start":5,"column_end":30}},{"value":"/ The reader must present a raw vp8 bitstream to the decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":89216,"byte_end":89278,"line_start":836,"line_end":836,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":108012,"byte_end":108024,"line_start":1394,"line_end":1394,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<VP8Decoder<R>>::decode_frame","value":"pub fn decode_frame(&mut Self) -> io::Result<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[{"value":"/ Decodes the current frame and returns a reference to it","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":107941,"byte_end":108000,"line_start":1393,"line_end":1393,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::pnm","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":524},{"krate":0,"index":662},{"krate":0,"index":786}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1805,"byte_end":1828,"line_start":122,"line_end":122,"column_start":1,"column_end":24}},{"value":"/ Decoding of netpbm image formats (pbm, pgm, ppm and pam).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":123843,"byte_end":123904,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":123905,"byte_end":123908,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formats pbm, pgm and ppm are fully supported. The pam decoder recognizes the tuple types","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":123909,"byte_end":124005,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ `BLACKANDWHITE`, `GRAYSCALE` and `RGB` and explicitely recognizes but rejects their `_ALPHA`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124006,"byte_end":124102,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ variants for now as alpha color types are unsupported.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\mod.rs","byte_start":124103,"byte_end":124161,"line_start":5,"line_end":5,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":133228,"byte_end":133229,"line_start":24,"line_end":24,"column_start":10,"column_end":11},"name":"T","qualname":"::pnm::decoder::Sample::T","value":"type T;","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":133706,"byte_end":133716,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"PNMDecoder","qualname":"::pnm::decoder::PNMDecoder","value":"PNMDecoder {  }","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[{"value":"/ PNM decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":133679,"byte_end":133694,"line_start":40,"line_end":40,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":133906,"byte_end":133909,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<PNMDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<PNMDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```read```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```read```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":133830,"byte_end":133894,"line_start":48,"line_end":48,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":135241,"byte_end":135251,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PNMDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> (R, PNMHeader)","parent":null,"children":[],"decl_id":null,"docs":" Extract the reader and header after an image has been read.\n","sig":null,"attributes":[{"value":"/ Extract the reader and header after an image has been read.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":135166,"byte_end":135229,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":149047,"byte_end":149054,"line_start":419,"line_end":419,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PNMDecoder<R>>::subtype","value":"pub fn subtype(&Self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[{"value":"/ Get the pnm subtype, depending on the magic constant contained in the header","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":148955,"byte_end":149035,"line_start":418,"line_end":418,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2557},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":166271,"byte_end":166273,"line_start":22,"line_end":22,"column_start":5,"column_end":7},"name":"U8","qualname":"::pnm::encoder::FlatSamples::U8","value":"FlatSamples::U8(&'a [u8])","parent":{"krate":0,"index":2555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2560},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":166289,"byte_end":166292,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"U16","qualname":"::pnm::encoder::FlatSamples::U16","value":"FlatSamples::U16(&'a [u16])","parent":{"krate":0,"index":2555},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2555},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":166249,"byte_end":166260,"line_start":21,"line_end":21,"column_start":10,"column_end":21},"name":"FlatSamples","qualname":"::pnm::encoder::FlatSamples","value":"pub enum FlatSamples<'a> { U8(&'a [u8]), U16(&'a [u16]), }","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2560}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":166373,"byte_end":166383,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"PNMEncoder","qualname":"::pnm::encoder::PNMEncoder","value":"PNMEncoder {  }","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"decl_id":null,"docs":" Encodes images to any of the `pnm` image formats.\n","sig":null,"attributes":[{"value":"/ Encodes images to any of the `pnm` image formats.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":166308,"byte_end":166361,"line_start":26,"line_end":26,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":167755,"byte_end":167758,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<PNMEncoder<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new PNMEncoder from the `writer`.","sig":null,"attributes":[{"value":"/ Create new PNMEncoder from the `writer`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":167453,"byte_end":167497,"line_start":77,"line_end":77,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":167502,"byte_end":167505,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The encoded images will have some `pnm` format. If more control over the image type is","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":167510,"byte_end":167600,"line_start":79,"line_end":79,"column_start":5,"column_end":95}},{"value":"/ required, use either one of `with_subtype` or `with_header`. For more information on the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":167605,"byte_end":167697,"line_start":80,"line_end":80,"column_start":5,"column_end":97}},{"value":"/ behaviour, see `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":167702,"byte_end":167743,"line_start":81,"line_end":81,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168308,"byte_end":168320,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"with_subtype","qualname":"<PNMEncoder<W>>::with_subtype","value":"pub fn with_subtype(Self, PNMSubtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode a specific pnm subtype image.","sig":null,"attributes":[{"value":"/ Encode a specific pnm subtype image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":167887,"byte_end":167927,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":167932,"byte_end":167935,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The magic number and encoding type will be chosen as provided while the rest of the header","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":167940,"byte_end":168034,"line_start":91,"line_end":91,"column_start":5,"column_end":99}},{"value":"/ data will be generated dynamically. Trying to encode incompatible images (e.g. encoding an","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168039,"byte_end":168133,"line_start":92,"line_end":92,"column_start":5,"column_end":99}},{"value":"/ RGB image as Graymap) will result in an error.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168138,"byte_end":168188,"line_start":93,"line_end":93,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168193,"byte_end":168196,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_header` and `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168201,"byte_end":168296,"line_start":95,"line_end":95,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169026,"byte_end":169037,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"with_header","qualname":"<PNMEncoder<W>>::with_header","value":"pub fn with_header(Self, PNMHeader) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enforce the use of a chosen header.","sig":null,"attributes":[{"value":"/ Enforce the use of a chosen header.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168487,"byte_end":168526,"line_start":103,"line_end":103,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168531,"byte_end":168534,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ While this option gives the most control over the actual written data, the encoding process","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168539,"byte_end":168634,"line_start":105,"line_end":105,"column_start":5,"column_end":100}},{"value":"/ will error in case the header data and image parameters do not agree. It is the users","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168639,"byte_end":168728,"line_start":106,"line_end":106,"column_start":5,"column_end":94}},{"value":"/ obligation to ensure that the width and height are set accordingly, for example.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168733,"byte_end":168817,"line_start":107,"line_end":107,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168822,"byte_end":168825,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Choose this option if you want a lossless decoding/encoding round trip.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168830,"byte_end":168905,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168910,"byte_end":168913,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_dynamic_header`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":168918,"byte_end":169014,"line_start":111,"line_end":111,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169607,"byte_end":169626,"line_start":126,"line_end":126,"column_start":12,"column_end":31},"name":"with_dynamic_header","qualname":"<PNMEncoder<W>>::with_dynamic_header","value":"pub fn with_dynamic_header(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the header dynamically for each image.","sig":null,"attributes":[{"value":"/ Create the header dynamically for each image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169199,"byte_end":169248,"line_start":119,"line_end":119,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169253,"byte_end":169256,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This is the default option upon creation of the encoder. With this, most images should be","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169261,"byte_end":169354,"line_start":121,"line_end":121,"column_start":5,"column_end":98}},{"value":"/ encodable but the specific format chosen is out of the users control. The pnm subtype is","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169359,"byte_end":169451,"line_start":122,"line_end":122,"column_start":5,"column_end":97}},{"value":"/ chosen arbitrarily by the library.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169456,"byte_end":169494,"line_start":123,"line_end":123,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169499,"byte_end":169502,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This will overwrite the effect of earlier calls to `with_subtype` and `with_header`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169507,"byte_end":169595,"line_start":125,"line_end":125,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":170002,"byte_end":170008,"line_start":137,"line_end":137,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNMEncoder<W>>::encode","value":"pub fn encode<'s, S>(&mut Self, S, u32, u32, ColorType) -> io::Result<()>\nwhere S: Into<FlatSamples>","parent":null,"children":[],"decl_id":null,"docs":" Encode an image whose samples are represented as `u8`.","sig":null,"attributes":[{"value":"/ Encode an image whose samples are represented as `u8`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169763,"byte_end":169821,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169826,"byte_end":169829,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Some `pnm` subtypes are incompatible with some color options, a chosen header most","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169834,"byte_end":169920,"line_start":135,"line_end":135,"column_start":5,"column_end":91}},{"value":"/ certainly with any deviation from the original decoded image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":169925,"byte_end":169990,"line_start":136,"line_end":136,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186658,"byte_end":186664,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Binary","qualname":"::pnm::header::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[{"value":"/ Samples are unsigned binary integers in big endian","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186599,"byte_end":186653,"line_start":6,"line_end":6,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186748,"byte_end":186753,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::pnm::header::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[{"value":"/ Samples are encoded as decimal ascii strings separated by whitespace","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186671,"byte_end":186743,"line_start":9,"line_end":9,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186578,"byte_end":186592,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::pnm::header::SampleEncoding","value":"pub enum SampleEncoding {\n\n    /// Samples are unsigned binary integers in big endian\n    Binary,\n\n    /// Samples are encoded as decimal ascii strings separated by whitespace\n    Ascii,\n}","parent":null,"children":[{"krate":0,"index":2569},{"krate":0,"index":2571}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[{"value":"/ The kind of encoding used to store sample values","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186471,"byte_end":186523,"line_start":3,"line_end":3,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2585},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186906,"byte_end":186912,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::pnm::header::PNMSubtype::Bitmap","value":"PNMSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[{"value":"/ Magic numbers P1 and P4","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186874,"byte_end":186901,"line_start":16,"line_end":16,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186967,"byte_end":186974,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::pnm::header::PNMSubtype::Graymap","value":"PNMSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[{"value":"/ Magic numbers P2 and P5","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186935,"byte_end":186962,"line_start":19,"line_end":19,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187029,"byte_end":187035,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::pnm::header::PNMSubtype::Pixmap","value":"PNMSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[{"value":"/ Magic numbers P3 and P6","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186997,"byte_end":187024,"line_start":22,"line_end":22,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2594},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187082,"byte_end":187094,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::pnm::header::PNMSubtype::ArbitraryMap","value":"PNMSubtype::ArbitraryMap","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[{"value":"/ Magic number P7","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187058,"byte_end":187077,"line_start":25,"line_end":25,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186857,"byte_end":186867,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"PNMSubtype","qualname":"::pnm::header::PNMSubtype","value":"pub enum PNMSubtype {\n\n    /// Magic numbers P1 and P4\n    Bitmap(SampleEncoding),\n\n    /// Magic numbers P2 and P5\n    Graymap(SampleEncoding),\n\n    /// Magic numbers P3 and P6\n    Pixmap(SampleEncoding),\n\n    /// Magic number P7\n    ArbitraryMap,\n}","parent":null,"children":[{"krate":0,"index":2585},{"krate":0,"index":2588},{"krate":0,"index":2591},{"krate":0,"index":2594}],"decl_id":null,"docs":" Denotes the category of the magic number\n","sig":null,"attributes":[{"value":"/ Denotes the category of the magic number","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":186758,"byte_end":186802,"line_start":13,"line_end":13,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187486,"byte_end":187495,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"PNMHeader","qualname":"::pnm::header::PNMHeader","value":"PNMHeader {  }","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":" Stores the complete header data of a file.","sig":null,"attributes":[{"value":"/ Stores the complete header data of a file.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187099,"byte_end":187145,"line_start":29,"line_end":29,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187146,"byte_end":187149,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Internally, provides mechanisms for lossless reencoding. After reading a file with the decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187150,"byte_end":187248,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ it is possible to recover the header and construct an encoder. Using the encoder on the just","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187249,"byte_end":187345,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ loaded image should result in a byte copy of the original file (for single image pnms without","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187346,"byte_end":187443,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ additional trailing data).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187444,"byte_end":187474,"line_start":34,"line_end":34,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187824,"byte_end":187836,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"BitmapHeader","qualname":"::pnm::header::BitmapHeader","value":"BitmapHeader { encoding, height, width }","parent":null,"children":[{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611}],"decl_id":null,"docs":" Header produced by a `pbm` file (\"Portable Bit Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pbm` file (\"Portable Bit Map\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187726,"byte_end":187782,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187884,"byte_end":187892,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::BitmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":2608},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187843,"byte_end":187875,"line_start":50,"line_end":50,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187952,"byte_end":187958,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::BitmapHeader::height","value":"u32","parent":{"krate":0,"index":2608},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187915,"byte_end":187943,"line_start":53,"line_end":53,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2611},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188006,"byte_end":188011,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::BitmapHeader::width","value":"u32","parent":{"krate":0,"index":2608},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":187970,"byte_end":187997,"line_start":56,"line_end":56,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2617},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188120,"byte_end":188133,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"GraymapHeader","qualname":"::pnm::header::GraymapHeader","value":"GraymapHeader { encoding, height, width, maxwhite }","parent":null,"children":[{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621}],"decl_id":null,"docs":" Header produced by a `pgm` file (\"Portable Gray Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pgm` file (\"Portable Gray Map\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188021,"byte_end":188078,"line_start":60,"line_end":60,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2618},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188181,"byte_end":188189,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::GraymapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188140,"byte_end":188172,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2619},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188249,"byte_end":188255,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::GraymapHeader::height","value":"u32","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188212,"byte_end":188240,"line_start":66,"line_end":66,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2620},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188303,"byte_end":188308,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::GraymapHeader::width","value":"u32","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188267,"byte_end":188294,"line_start":69,"line_end":69,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2621},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188370,"byte_end":188378,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"name":"maxwhite","qualname":"::pnm::header::GraymapHeader::maxwhite","value":"u32","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188320,"byte_end":188361,"line_start":72,"line_end":72,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2627},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188488,"byte_end":188500,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"PixmapHeader","qualname":"::pnm::header::PixmapHeader","value":"PixmapHeader { encoding, height, width, maxval }","parent":null,"children":[{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631}],"decl_id":null,"docs":" Header produced by a `ppm` file (\"Portable Pixel Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `ppm` file (\"Portable Pixel Map\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188388,"byte_end":188446,"line_start":76,"line_end":76,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2628},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188547,"byte_end":188555,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::PixmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":2627},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[{"value":"/ Binary or Ascii encoded file","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188506,"byte_end":188538,"line_start":79,"line_end":79,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2629},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188615,"byte_end":188621,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::PixmapHeader::height","value":"u32","parent":{"krate":0,"index":2627},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188578,"byte_end":188606,"line_start":82,"line_end":82,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2630},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188669,"byte_end":188674,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::PixmapHeader::width","value":"u32","parent":{"krate":0,"index":2627},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188633,"byte_end":188660,"line_start":85,"line_end":85,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188736,"byte_end":188742,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::PixmapHeader::maxval","value":"u32","parent":{"krate":0,"index":2627},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188686,"byte_end":188727,"line_start":88,"line_end":88,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188850,"byte_end":188865,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"ArbitraryHeader","qualname":"::pnm::header::ArbitraryHeader","value":"ArbitraryHeader { height, width, depth, maxval, tupltype }","parent":null,"children":[{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642}],"decl_id":null,"docs":" Header produced by a `pam` file (\"Portable Arbitrary Map\")\n","sig":null,"attributes":[{"value":"/ Header produced by a `pam` file (\"Portable Arbitrary Map\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188752,"byte_end":188814,"line_start":92,"line_end":92,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188909,"byte_end":188915,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::ArbitraryHeader::height","value":"u32","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[{"value":"/ Height of the image file","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188872,"byte_end":188900,"line_start":95,"line_end":95,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2639},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188963,"byte_end":188968,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::ArbitraryHeader::width","value":"u32","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[{"value":"/ Width of the image file","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188927,"byte_end":188954,"line_start":98,"line_end":98,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189017,"byte_end":189022,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"name":"depth","qualname":"::pnm::header::ArbitraryHeader::depth","value":"u32","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Number of color channels\n","sig":null,"attributes":[{"value":"/ Number of color channels","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":188980,"byte_end":189008,"line_start":101,"line_end":101,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2641},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189084,"byte_end":189090,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::ArbitraryHeader::maxval","value":"u32","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[{"value":"/ Maximum sample value within the image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189034,"byte_end":189075,"line_start":104,"line_end":104,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189151,"byte_end":189159,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"tupltype","qualname":"::pnm::header::ArbitraryHeader::tupltype","value":"std::option::Option<pnm::header::ArbitraryTuplType>","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Color interpretation of image pixels\n","sig":null,"attributes":[{"value":"/ Color interpretation of image pixels","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189102,"byte_end":189142,"line_start":107,"line_end":107,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2648},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189362,"byte_end":189375,"line_start":115,"line_end":115,"column_start":5,"column_end":18},"name":"BlackAndWhite","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhite","value":"ArbitraryTuplType::BlackAndWhite","parent":{"krate":0,"index":2647},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1)\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189313,"byte_end":189357,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2650},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189458,"byte_end":189476,"line_start":118,"line_end":118,"column_start":5,"column_end":23},"name":"BlackAndWhiteAlpha","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhiteAlpha","value":"ArbitraryTuplType::BlackAndWhiteAlpha","parent":{"krate":0,"index":2647},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1) and a second alpha channel\n","sig":null,"attributes":[{"value":"/ Pixels are either black (0) or white (1) and a second alpha channel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189382,"byte_end":189453,"line_start":117,"line_end":117,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2652},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189528,"byte_end":189537,"line_start":121,"line_end":121,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::pnm::header::ArbitraryTuplType::Grayscale","value":"ArbitraryTuplType::Grayscale","parent":{"krate":0,"index":2647},"children":[],"decl_id":null,"docs":" Pixels represent the amount of white\n","sig":null,"attributes":[{"value":"/ Pixels represent the amount of white","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189483,"byte_end":189523,"line_start":120,"line_end":120,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2654},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189595,"byte_end":189609,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::pnm::header::ArbitraryTuplType::GrayscaleAlpha","value":"ArbitraryTuplType::GrayscaleAlpha","parent":{"krate":0,"index":2647},"children":[],"decl_id":null,"docs":" Grayscale with an additional alpha channel\n","sig":null,"attributes":[{"value":"/ Grayscale with an additional alpha channel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189544,"byte_end":189590,"line_start":123,"line_end":123,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2656},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189657,"byte_end":189660,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"RGB","qualname":"::pnm::header::ArbitraryTuplType::RGB","value":"ArbitraryTuplType::RGB","parent":{"krate":0,"index":2647},"children":[],"decl_id":null,"docs":" Three channels: Red, Green, Blue\n","sig":null,"attributes":[{"value":"/ Three channels: Red, Green, Blue","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189616,"byte_end":189652,"line_start":126,"line_end":126,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2658},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189714,"byte_end":189722,"line_start":130,"line_end":130,"column_start":5,"column_end":13},"name":"RGBAlpha","qualname":"::pnm::header::ArbitraryTuplType::RGBAlpha","value":"ArbitraryTuplType::RGBAlpha","parent":{"krate":0,"index":2647},"children":[],"decl_id":null,"docs":" Four channels: Red, Green, Blue, Alpha\n","sig":null,"attributes":[{"value":"/ Four channels: Red, Green, Blue, Alpha","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189667,"byte_end":189709,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2660},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189779,"byte_end":189785,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Custom","qualname":"::pnm::header::ArbitraryTuplType::Custom","value":"ArbitraryTuplType::Custom(String)","parent":{"krate":0,"index":2647},"children":[],"decl_id":null,"docs":" An image format which is not standardized\n","sig":null,"attributes":[{"value":"/ An image format which is not standardized","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189729,"byte_end":189774,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":2647},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189289,"byte_end":189306,"line_start":113,"line_end":113,"column_start":10,"column_end":27},"name":"ArbitraryTuplType","qualname":"::pnm::header::ArbitraryTuplType","value":"pub enum ArbitraryTuplType {\n\n    /// Pixels are either black (0) or white (1)\n    BlackAndWhite,\n\n    /// Pixels are either black (0) or white (1) and a second alpha channel\n    BlackAndWhiteAlpha,\n\n    /// Pixels represent the amount of white\n    Grayscale,\n\n    /// Grayscale with an additional alpha channel\n    GrayscaleAlpha,\n\n    /// Three channels: Red, Green, Blue\n    RGB,\n\n    /// Four channels: Red, Green, Blue, Alpha\n    RGBAlpha,\n\n    /// An image format which is not standardized\n    Custom(String),\n}","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2654},{"krate":0,"index":2656},{"krate":0,"index":2658},{"krate":0,"index":2660}],"decl_id":null,"docs":" Standardized tuple type specifiers in the header of a `pam`.\n","sig":null,"attributes":[{"value":"/ Standardized tuple type specifiers in the header of a `pam`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189191,"byte_end":189255,"line_start":111,"line_end":111,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189906,"byte_end":189920,"line_start":138,"line_end":138,"column_start":12,"column_end":26},"name":"magic_constant","qualname":"<PNMSubtype>::magic_constant","value":"pub fn magic_constant(Self) -> &'static [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Get the two magic constant bytes corresponding to this format subtype.\n","sig":null,"attributes":[{"value":"/ Get the two magic constant bytes corresponding to this format subtype.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189820,"byte_end":189894,"line_start":137,"line_end":137,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":190499,"byte_end":190514,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"sample_encoding","qualname":"<PNMSubtype>::sample_encoding","value":"pub fn sample_encoding(Self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[{"value":"/ Whether samples are stored as binary or as decimal ascii","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":190427,"byte_end":190487,"line_start":150,"line_end":150,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":190877,"byte_end":190884,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PNMHeader>::subtype","value":"pub fn subtype(&Self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the format subtype from which the header was created.\n","sig":null,"attributes":[{"value":"/ Retrieve the format subtype from which the header was created.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":190799,"byte_end":190865,"line_start":162,"line_end":162,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":191472,"byte_end":191477,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"width","qualname":"<PNMHeader>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The width of the image this header is for.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":191414,"byte_end":191460,"line_start":176,"line_end":176,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":191916,"byte_end":191922,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"height","qualname":"<PNMHeader>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of the image this header is for.\n","sig":null,"attributes":[{"value":"/ The height of the image this header is for.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":191857,"byte_end":191904,"line_start":186,"line_end":186,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":192401,"byte_end":192415,"line_start":197,"line_end":197,"column_start":12,"column_end":26},"name":"maximal_sample","qualname":"<PNMHeader>::maximal_sample","value":"pub fn maximal_sample(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The biggest value a sample can have. In other words, the colour resolution.\n","sig":null,"attributes":[{"value":"/ The biggest value a sample can have. In other words, the colour resolution.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":192310,"byte_end":192389,"line_start":196,"line_end":196,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":192860,"byte_end":192869,"line_start":207,"line_end":207,"column_start":12,"column_end":21},"name":"as_bitmap","qualname":"<PNMHeader>::as_bitmap","value":"pub fn as_bitmap(&Self) -> Option<&BitmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying bitmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying bitmap header if any","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":192800,"byte_end":192848,"line_start":206,"line_end":206,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":193101,"byte_end":193111,"line_start":215,"line_end":215,"column_start":12,"column_end":22},"name":"as_graymap","qualname":"<PNMHeader>::as_graymap","value":"pub fn as_graymap(&Self) -> Option<&GraymapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying graymap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying graymap header if any","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":193040,"byte_end":193089,"line_start":214,"line_end":214,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":193346,"byte_end":193355,"line_start":223,"line_end":223,"column_start":12,"column_end":21},"name":"as_pixmap","qualname":"<PNMHeader>::as_pixmap","value":"pub fn as_pixmap(&Self) -> Option<&PixmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying pixmap header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying pixmap header if any","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":193286,"byte_end":193334,"line_start":222,"line_end":222,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":193589,"byte_end":193601,"line_start":231,"line_end":231,"column_start":12,"column_end":24},"name":"as_arbitrary","qualname":"<PNMHeader>::as_arbitrary","value":"pub fn as_arbitrary(&Self) -> Option<&ArbitraryHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying arbitrary header if any\n","sig":null,"attributes":[{"value":"/ Retrieve the underlying arbitrary header if any","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":193526,"byte_end":193577,"line_start":230,"line_end":230,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":193842,"byte_end":193847,"line_start":239,"line_end":239,"column_start":12,"column_end":17},"name":"write","qualname":"<PNMHeader>::write","value":"pub fn write(&Self, &mut io::Write) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the header back into a binary stream\n","sig":null,"attributes":[{"value":"/ Write the header back into a binary stream","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":193784,"byte_end":193830,"line_start":238,"line_end":238,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::png","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":855},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png_codec\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1842,"byte_end":1871,"line_start":124,"line_end":124,"column_start":1,"column_end":30}},{"value":"/ Decoding and Encoding of PNG Images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197277,"byte_end":197316,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197317,"byte_end":197320,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197321,"byte_end":197411,"line_start":4,"line_end":4,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197412,"byte_end":197415,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197416,"byte_end":197435,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/TR/PNG/> - The PNG Specification","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197436,"byte_end":197493,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197494,"byte_end":197497,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":848},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197751,"byte_end":197761,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"PNGDecoder","qualname":"::png::PNGDecoder","value":"PNGDecoder {  }","parent":null,"children":[{"krate":0,"index":850}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197724,"byte_end":197739,"line_start":24,"line_end":24,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197943,"byte_end":197946,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGDecoder<R>>::new","value":"pub fn new(R) -> PNGDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197869,"byte_end":197931,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":862},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":199802,"byte_end":199812,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"PNGEncoder","qualname":"::png::PNGEncoder","value":"PNGEncoder {  }","parent":null,"children":[{"krate":0,"index":864}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":199775,"byte_end":199790,"line_start":89,"line_end":89,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":199942,"byte_end":199945,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGEncoder<W>>::new","value":"pub fn new(W) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":199872,"byte_end":199930,"line_start":95,"line_end":95,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":200168,"byte_end":200174,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNGEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":200030,"byte_end":200063,"line_start":102,"line_end":102,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":200068,"byte_end":200120,"line_start":103,"line_end":103,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":200125,"byte_end":200156,"line_start":104,"line_end":104,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":879},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::ico","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\mod.rs","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":940}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1885,"byte_end":1908,"line_start":126,"line_end":126,"column_start":1,"column_end":24}},{"value":"/  Decoding and Encoding of ICO files","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\mod.rs","byte_start":202179,"byte_end":202218,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\mod.rs","byte_start":202219,"byte_end":202222,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder and encoder for ICO (Windows Icon) image container files.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\mod.rs","byte_start":202223,"byte_end":202295,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\mod.rs","byte_start":202296,"byte_end":202299,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\mod.rs","byte_start":202300,"byte_end":202320,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://msdn.microsoft.com/en-us/library/ms997538.aspx>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\mod.rs","byte_start":202321,"byte_end":202384,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/  * <https://en.wikipedia.org/wiki/ICO_%28file_format%29>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\mod.rs","byte_start":202385,"byte_end":202445,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\decoder.rs","byte_start":203015,"byte_end":203025,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ICODecoder","qualname":"::ico::decoder::ICODecoder","value":"ICODecoder {  }","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[{"value":"/ An ico decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\decoder.rs","byte_start":202985,"byte_end":203003,"line_start":15,"line_end":15,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\decoder.rs","byte_start":203523,"byte_end":203526,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<ICODecoder<R>>::new","value":"pub fn new(R) -> ImageResult<ICODecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\decoder.rs","byte_start":203450,"byte_end":203511,"line_start":42,"line_end":42,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\encoder.rs","byte_start":212353,"byte_end":212363,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"ICOEncoder","qualname":"::ico::encoder::ICOEncoder","value":"ICOEncoder {  }","parent":null,"children":[{"krate":0,"index":956}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[{"value":"/ ICO encoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\encoder.rs","byte_start":212326,"byte_end":212341,"line_start":15,"line_end":15,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\encoder.rs","byte_start":212494,"byte_end":212497,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<ICOEncoder<W>>::new","value":"pub fn new(W) -> ICOEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\encoder.rs","byte_start":212423,"byte_end":212482,"line_start":21,"line_end":21,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\encoder.rs","byte_start":212818,"byte_end":212824,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"encode","qualname":"<ICOEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image``` that has dimensions ```width``` and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\encoder.rs","byte_start":212582,"byte_end":212651,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ ```height``` and ```ColorType``` ```c```.  The dimensions of the image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\encoder.rs","byte_start":212656,"byte_end":212730,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ must be between 1 and 256 (inclusive) or an error will be returned.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\encoder.rs","byte_start":212735,"byte_end":212806,"line_start":30,"line_end":30,"column_start":5,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":967},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::jpeg","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":1074},{"krate":0,"index":1107},{"krate":0,"index":1110}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1922,"byte_end":1946,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ Decoding and Encoding of JPEG Images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","byte_start":214964,"byte_end":215004,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","byte_start":215005,"byte_end":215008,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","byte_start":215009,"byte_end":215104,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ This module implements the Baseline JPEG standard.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","byte_start":215105,"byte_end":215159,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","byte_start":215160,"byte_end":215163,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","byte_start":215164,"byte_end":215183,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/Graphics/JPEG/itu-t81.pdf> - The JPEG specification","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","byte_start":215184,"byte_end":215260,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\mod.rs","byte_start":215261,"byte_end":215264,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":223779,"byte_end":223790,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"JPEGEncoder","qualname":"::jpeg::encoder::JPEGEncoder","value":"JPEGEncoder {  }","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":223727,"byte_end":223767,"line_start":277,"line_end":277,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":224146,"byte_end":224149,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGEncoder>::new","value":"pub fn new(&mut W) -> JPEGEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":224076,"byte_end":224134,"line_start":291,"line_end":291,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":224442,"byte_end":224458,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JPEGEncoder>::new_with_quality","value":"pub fn new_with_quality(&mut W, u8) -> JPEGEncoder<, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":224237,"byte_end":224304,"line_start":296,"line_end":296,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":224309,"byte_end":224380,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":224385,"byte_end":224430,"line_start":298,"line_end":298,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":226426,"byte_end":226432,"line_start":349,"line_end":349,"column_start":12,"column_end":18},"name":"encode","qualname":"<JPEGEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":226222,"byte_end":226255,"line_start":344,"line_end":344,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":226260,"byte_end":226312,"line_start":345,"line_end":345,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":226317,"byte_end":226348,"line_start":346,"line_end":346,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":226353,"byte_end":226356,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":226361,"byte_end":226414,"line_start":348,"line_end":348,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":239715,"byte_end":239726,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"name":"JPEGDecoder","qualname":"::jpeg::decoder::JPEGDecoder","value":"JPEGDecoder {  }","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":239687,"byte_end":239703,"line_start":8,"line_end":8,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":239929,"byte_end":239932,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGDecoder<R>>::new","value":"pub fn new(R) -> JPEGDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":239856,"byte_end":239917,"line_start":15,"line_end":15,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::gif","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":4042},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":4060},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1162},{"krate":0,"index":1165},{"krate":0,"index":1169},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1186}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif_codec\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1961,"byte_end":1990,"line_start":130,"line_end":130,"column_start":1,"column_end":30}},{"value":"/  Decoding of GIF Images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":252490,"byte_end":252517,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":252518,"byte_end":252521,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  GIF (Graphics Interchange Format) is an image format that supports lossless compression.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":252522,"byte_end":252615,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":252616,"byte_end":252619,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":252620,"byte_end":252640,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <http://www.w3.org/Graphics/GIF/spec-gif89a.txt> - The GIF Specification","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":252641,"byte_end":252720,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":252721,"byte_end":252724,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":253208,"byte_end":253215,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::gif::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":1164}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[{"value":"/ GIF decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":253181,"byte_end":253196,"line_start":30,"line_end":30,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":253394,"byte_end":253397,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"pub fn new(R) -> Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes the input steam ```r```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":253320,"byte_end":253382,"line_start":36,"line_end":36,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":259973,"byte_end":259980,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::gif::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1180}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[{"value":"/ GIF encoder.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":259945,"byte_end":259961,"line_start":210,"line_end":210,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":260080,"byte_end":260083,"line_start":217,"line_end":217,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"pub fn new(W) -> Encoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[{"value":"/ Creates a new GIF encoder.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":260038,"byte_end":260068,"line_start":216,"line_end":216,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":260193,"byte_end":260199,"line_start":223,"line_end":223,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder<W>>::encode","value":"pub fn encode(Self, Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a frame.\n","sig":null,"attributes":[{"value":"/ Encodes a frame.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":260161,"byte_end":260181,"line_start":222,"line_end":222,"column_start":5,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::tiff","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\mod.rs","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":2004,"byte_end":2028,"line_start":132,"line_end":132,"column_start":1,"column_end":25}},{"value":"/ Decoding and Encoding of TIFF Images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\mod.rs","byte_start":260755,"byte_end":260795,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\mod.rs","byte_start":260796,"byte_end":260799,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ TIFF (Tagged Image File Format) is a versatile image format that supports","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\mod.rs","byte_start":260800,"byte_end":260877,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ lossless and lossy compression.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\mod.rs","byte_start":260878,"byte_end":260913,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\mod.rs","byte_start":260914,"byte_end":260917,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\mod.rs","byte_start":260918,"byte_end":260937,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://partners.adobe.com/public/developer/tiff/index.html> - The TIFF specification","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\mod.rs","byte_start":260938,"byte_end":261029,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\mod.rs","byte_start":261030,"byte_end":261033,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2823},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":286582,"byte_end":286594,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"name":"LittleEndian","qualname":"::tiff::decoder::stream::ByteOrder::LittleEndian","value":"ByteOrder::LittleEndian","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" little endian byte order\n","sig":null,"attributes":[{"value":"/ little endian byte order","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":286549,"byte_end":286577,"line_start":11,"line_end":11,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":286630,"byte_end":286639,"line_start":14,"line_end":14,"column_start":5,"column_end":14},"name":"BigEndian","qualname":"::tiff::decoder::stream::ByteOrder::BigEndian","value":"ByteOrder::BigEndian","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" big endian byte order\n","sig":null,"attributes":[{"value":"/ big endian byte order","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":286600,"byte_end":286625,"line_start":13,"line_end":13,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":2822},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":286533,"byte_end":286542,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ByteOrder","qualname":"::tiff::decoder::stream::ByteOrder","value":"pub enum ByteOrder {\n\n    /// little endian byte order\n    LittleEndian,\n\n    /// big endian byte order\n    BigEndian,\n}","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2825}],"decl_id":null,"docs":" Byte order of the TIFF file.\n","sig":null,"attributes":[{"value":"/ Byte order of the TIFF file.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":286461,"byte_end":286493,"line_start":8,"line_end":8,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2943},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":262260,"byte_end":262271,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"TIFFDecoder","qualname":"::tiff::decoder::TIFFDecoder","value":"TIFFDecoder {  }","parent":null,"children":[{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954}],"decl_id":null,"docs":" The representation of a TIFF decoder","sig":null,"attributes":[{"value":"/ The representation of a TIFF decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":262126,"byte_end":262166,"line_start":65,"line_end":65,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":262167,"byte_end":262170,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Currently does not support decoding of interlaced images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":262171,"byte_end":262231,"line_start":67,"line_end":67,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":264343,"byte_end":264346,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<TIFFDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":264270,"byte_end":264331,"line_start":135,"line_end":135,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":265809,"byte_end":265813,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"init","qualname":"<TIFFDecoder<R>>::init","value":"pub fn init(Self) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the decoder.\n","sig":null,"attributes":[{"value":"/ Initializes the decoder.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":265769,"byte_end":265797,"line_start":175,"line_end":175,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1312},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":266142,"byte_end":266152,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"next_image","qualname":"<TIFFDecoder<R>>::next_image","value":"pub fn next_image(Self) -> ImageResult<TIFFDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads in the next image.\n If there is no further image in the TIFF file a format error is returned.\n To determine whether there are more images call `TIFFDecoder::more_images` instead.\n","sig":null,"attributes":[{"value":"/ Reads in the next image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":265928,"byte_end":265956,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/ If there is no further image in the TIFF file a format error is returned.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":265961,"byte_end":266038,"line_start":182,"line_end":182,"column_start":5,"column_end":82}},{"value":"/ To determine whether there are more images call `TIFFDecoder::more_images` instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":266043,"byte_end":266130,"line_start":183,"line_end":183,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268009,"byte_end":268020,"line_start":229,"line_end":229,"column_start":12,"column_end":23},"name":"more_images","qualname":"<TIFFDecoder<R>>::more_images","value":"pub fn more_images(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there is at least one more image available.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there is at least one more image available.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":267932,"byte_end":267997,"line_start":228,"line_end":228,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268182,"byte_end":268192,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"byte_order","qualname":"<TIFFDecoder<R>>::byte_order","value":"pub fn byte_order(&Self) -> ByteOrder","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte_order\n","sig":null,"attributes":[{"value":"/ Returns the byte_order","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268144,"byte_end":268170,"line_start":236,"line_end":236,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268304,"byte_end":268314,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"read_short","qualname":"<TIFFDecoder<R>>::read_short","value":"pub fn read_short(&mut Self) -> Result<u16, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF short value\n","sig":null,"attributes":[{"value":"/ Reads a TIFF short value","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268250,"byte_end":268278,"line_start":241,"line_end":241,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268283,"byte_end":268292,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268449,"byte_end":268458,"line_start":249,"line_end":249,"column_start":12,"column_end":21},"name":"read_long","qualname":"<TIFFDecoder<R>>::read_long","value":"pub fn read_long(&mut Self) -> Result<u32, io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF long value\n","sig":null,"attributes":[{"value":"/ Reads a TIFF long value","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268396,"byte_end":268423,"line_start":247,"line_end":247,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268428,"byte_end":268437,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268605,"byte_end":268616,"line_start":255,"line_end":255,"column_start":12,"column_end":23},"name":"read_offset","qualname":"<TIFFDecoder<R>>::read_offset","value":"pub fn read_offset(&mut Self) -> Result<[u8; ], io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Reads a TIFF IFA offset/value field\n","sig":null,"attributes":[{"value":"/ Reads a TIFF IFA offset/value field","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268540,"byte_end":268579,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268584,"byte_end":268593,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268835,"byte_end":268846,"line_start":263,"line_end":263,"column_start":12,"column_end":23},"name":"goto_offset","qualname":"<TIFFDecoder<R>>::goto_offset","value":"pub fn goto_offset(&mut Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the specified offset\n","sig":null,"attributes":[{"value":"/ Moves the cursor to the specified offset","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268765,"byte_end":268809,"line_start":261,"line_end":261,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":268814,"byte_end":268823,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::tga","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\mod.rs","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":2043,"byte_end":2066,"line_start":134,"line_end":134,"column_start":1,"column_end":24}},{"value":"/ Decoding of TGA Images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\mod.rs","byte_start":292280,"byte_end":292306,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\mod.rs","byte_start":292307,"byte_end":292310,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\mod.rs","byte_start":292311,"byte_end":292330,"line_start":3,"line_end":3,"column_start":1,"column_end":20}},{"value":"/ <http://googlesites.inequation.org/tgautilities>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\mod.rs","byte_start":292331,"byte_end":292383,"line_start":4,"line_end":4,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":297235,"byte_end":297245,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"TGADecoder","qualname":"::tga::decoder::TGADecoder","value":"TGADecoder {  }","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[{"value":"/ The representation of a TGA decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":297184,"byte_end":297223,"line_start":160,"line_end":160,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":297671,"byte_end":297674,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<TGADecoder<R>>::new","value":"pub fn new(R) -> TGADecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream `r`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":297602,"byte_end":297659,"line_start":181,"line_end":181,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":1431},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::bmp","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","parent":null,"children":[{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1456}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":2080,"byte_end":2103,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/  Decoding and Encoding of BMP Images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","byte_start":309547,"byte_end":309587,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","byte_start":309588,"byte_end":309591,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder and encoder for BMP (Windows Bitmap) images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","byte_start":309592,"byte_end":309650,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","byte_start":309651,"byte_end":309654,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","byte_start":309655,"byte_end":309675,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://msdn.microsoft.com/en-us/library/windows/desktop/dd183375%28v=vs.85%29.aspx>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","byte_start":309676,"byte_end":309768,"line_start":6,"line_end":6,"column_start":1,"column_end":93}},{"value":"/  * <https://en.wikipedia.org/wiki/BMP_file_format>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","byte_start":309769,"byte_end":309823,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\mod.rs","byte_start":309824,"byte_end":309827,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\encoder.rs","byte_start":310066,"byte_end":310076,"line_start":7,"line_end":7,"column_start":12,"column_end":22},"name":"BMPEncoder","qualname":"::bmp::encoder::BMPEncoder","value":"BMPEncoder {  }","parent":null,"children":[{"krate":0,"index":1445}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[{"value":"/ The representation of a BMP encoder.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\encoder.rs","byte_start":310014,"byte_end":310054,"line_start":6,"line_end":6,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\encoder.rs","byte_start":310235,"byte_end":310238,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPEncoder>::new","value":"pub fn new(&'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\encoder.rs","byte_start":310164,"byte_end":310223,"line_start":12,"line_end":12,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\encoder.rs","byte_start":310467,"byte_end":310473,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"encode","qualname":"<BMPEncoder>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, color::ColorType) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[{"value":"/ Encodes the image ```image```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\encoder.rs","byte_start":310328,"byte_end":310361,"line_start":19,"line_end":19,"column_start":5,"column_end":38}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\encoder.rs","byte_start":310366,"byte_end":310418,"line_start":20,"line_end":20,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\encoder.rs","byte_start":310423,"byte_end":310455,"line_start":21,"line_end":21,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":331413,"byte_end":331423,"line_start":370,"line_end":370,"column_start":12,"column_end":22},"name":"BMPDecoder","qualname":"::bmp::decoder::BMPDecoder","value":"BMPDecoder {  }","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[{"value":"/ A bmp decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":331384,"byte_end":331401,"line_start":369,"line_end":369,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":334073,"byte_end":334076,"line_start":461,"line_end":461,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPDecoder<R>>::new","value":"pub fn new(R) -> BMPDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":334000,"byte_end":334061,"line_start":460,"line_end":460,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":334638,"byte_end":334644,"line_start":485,"line_end":485,"column_start":12,"column_end":18},"name":"reader","qualname":"<BMPDecoder<R>>::reader","value":"pub fn reader(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":334584,"byte_end":334607,"line_start":483,"line_end":483,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":343225,"byte_end":343252,"line_start":696,"line_end":696,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BMPDecoder<R>>::read_metadata_in_ico_format","value":"pub fn read_metadata_in_ico_format(&mut Self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":343171,"byte_end":343194,"line_start":694,"line_end":694,"column_start":5,"column_end":28}}]},{"kind":"Mod","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::hdr","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1746},{"krate":0,"index":1797},{"krate":0,"index":1798}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":2117,"byte_end":2140,"line_start":138,"line_end":138,"column_start":1,"column_end":24}},{"value":"/  Decoding of Radiance HDR Images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":363110,"byte_end":363146,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":363147,"byte_end":363150,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  A decoder for Radiance HDR images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":363151,"byte_end":363189,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":363190,"byte_end":363193,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":363194,"byte_end":363214,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":363215,"byte_end":363218,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/  * <http://radsite.lbl.gov/radiance/refer/filefmts.pdf>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":363219,"byte_end":363278,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/  * <http://www.graphics.cornell.edu/~bjw/rgbe/rgbe.c>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":363279,"byte_end":363336,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\mod.rs","byte_start":363337,"byte_end":363340,"line_start":9,"line_end":9,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3053},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":363908,"byte_end":363918,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"HDRAdapter","qualname":"::hdr::hdr_decoder::HDRAdapter","value":"HDRAdapter {  }","parent":null,"children":[{"krate":0,"index":3055},{"krate":0,"index":3056}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[{"value":"/ Adapter to conform to ```ImageDecoder``` trait","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":363829,"byte_end":363879,"line_start":19,"line_end":19,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":364061,"byte_end":364064,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRAdapter<R>>::new","value":"pub fn new(R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[{"value":"/ Creates adapter","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":364030,"byte_end":364049,"line_start":27,"line_end":27,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1644},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":364347,"byte_end":364360,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HDRAdapter<R>>::new_nonstrict","value":"pub fn new_nonstrict(R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[{"value":"/ Allows reading old Radiance HDR images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":364293,"byte_end":364335,"line_start":37,"line_end":37,"column_start":5,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":365901,"byte_end":365910,"line_start":89,"line_end":89,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::hdr::hdr_decoder::SIGNATURE","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[{"value":"/ Radiance HDR file signature","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":365859,"byte_end":365890,"line_start":88,"line_end":88,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3060},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366028,"byte_end":366038,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"HDRDecoder","qualname":"::hdr::hdr_decoder::HDRDecoder","value":"HDRDecoder {  }","parent":null,"children":[{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[{"value":"/ An Radiance HDR decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":365972,"byte_end":365999,"line_start":92,"line_end":92,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":3069},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366254,"byte_end":366264,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"RGBE8Pixel","qualname":"::hdr::hdr_decoder::RGBE8Pixel","value":"RGBE8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":3070},{"krate":0,"index":3072}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"/ Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366113,"byte_end":366186,"line_start":101,"line_end":101,"column_start":1,"column_end":74}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366187,"byte_end":366197,"line_start":102,"line_end":102,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3070},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366300,"byte_end":366301,"line_start":105,"line_end":105,"column_start":9,"column_end":10},"name":"c","qualname":"::hdr::hdr_decoder::RGBE8Pixel::c","value":"[u8; 3]","parent":{"krate":0,"index":3069},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[{"value":"/ Color components","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366271,"byte_end":366291,"line_start":104,"line_end":104,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3072},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366337,"byte_end":366338,"line_start":107,"line_end":107,"column_start":9,"column_end":10},"name":"e","qualname":"::hdr::hdr_decoder::RGBE8Pixel::e","value":"u8","parent":{"krate":0,"index":3069},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[{"value":"/ Exponent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366316,"byte_end":366328,"line_start":106,"line_end":106,"column_start":5,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366399,"byte_end":366404,"line_start":111,"line_end":111,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::hdr::hdr_decoder::rgbe8","value":"pub fn rgbe8(u8, u8, u8, u8) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[{"value":"/ Creates ```RGBE8Pixel``` from components","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366347,"byte_end":366391,"line_start":110,"line_end":110,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366596,"byte_end":366602,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<RGBE8Pixel>::to_hdr","value":"pub fn to_hdr(Self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366512,"byte_end":366570,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366575,"byte_end":366584,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367216,"byte_end":367222,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<RGBE8Pixel>::to_ldr","value":"pub fn to_ldr<T: Primitive + Zero>(Self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"/ Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366951,"byte_end":367025,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367030,"byte_end":367033,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367038,"byte_end":367087,"line_start":130,"line_end":130,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367092,"byte_end":367095,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367100,"byte_end":367111,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367116,"byte_end":367119,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Panics when ```T::max_value()``` cannot be represented as f32.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367124,"byte_end":367190,"line_start":134,"line_end":134,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367195,"byte_end":367204,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367608,"byte_end":367626,"line_start":149,"line_end":149,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<RGBE8Pixel>::to_ldr_scale_gamma","value":"pub fn to_ldr_scale_gamma<T: Primitive + Zero>(Self, f32, f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"/ Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367315,"byte_end":367381,"line_start":140,"line_end":140,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367386,"byte_end":367389,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ color_ldr = (color_hdr*scale)<sup>gamma</sup>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367394,"byte_end":367443,"line_start":142,"line_end":142,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367448,"byte_end":367451,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367456,"byte_end":367467,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367472,"byte_end":367475,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Panics when T::max_value() cannot be represented as f32.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367480,"byte_end":367540,"line_start":146,"line_end":146,"column_start":5,"column_end":65}},{"value":"/ Panics when scale or gamma is NaN","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367545,"byte_end":367582,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":367587,"byte_end":367596,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":368718,"byte_end":368721,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HDRDecoder\n strict mode is enabled\n","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```r```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":368569,"byte_end":368624,"line_start":172,"line_end":172,"column_start":5,"column_end":60}},{"value":"/ if the header is valid, creates HDRDecoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":368629,"byte_end":368675,"line_start":173,"line_end":173,"column_start":5,"column_end":51}},{"value":"/ strict mode is enabled","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":368680,"byte_end":368706,"line_start":174,"line_end":174,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":369129,"byte_end":369144,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HDRDecoder<R>>::with_strictness","value":"pub fn with_strictness(R, bool) -> ImageResult<HDRDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HDRDecoder```.","sig":null,"attributes":[{"value":"/ Reads Radiance HDR image header from stream ```reader```,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":368826,"byte_end":368887,"line_start":179,"line_end":179,"column_start":5,"column_end":66}},{"value":"/ if the header is valid, creates ```HDRDecoder```.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":368892,"byte_end":368945,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":368950,"byte_end":368953,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ strict enables strict mode","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":368958,"byte_end":368988,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":368993,"byte_end":368996,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Warning! Reading wrong file in non-strict mode","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":369001,"byte_end":369051,"line_start":184,"line_end":184,"column_start":5,"column_end":55}},{"value":"/   could consume file size worth of memory in the process.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":369056,"byte_end":369117,"line_start":185,"line_end":185,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":371789,"byte_end":371797,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HDRDecoder<R>>::metadata","value":"pub fn metadata(&Self) -> HDRMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[{"value":"/ Returns file metadata. Refer to ```HDRMetadata``` for details.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":371711,"byte_end":371777,"line_start":251,"line_end":251,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":371928,"byte_end":371945,"line_start":257,"line_end":257,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HDRDecoder<R>>::read_image_native","value":"pub fn read_image_native(Self) -> ImageResult<Vec<RGBE8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of RGBE8 pixels","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":371859,"byte_end":371916,"line_start":256,"line_end":256,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":372843,"byte_end":372863,"line_start":276,"line_end":276,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HDRDecoder<R>>::read_image_transform","value":"pub fn read_image_transform<T: Send, F: Send + Sync + Fn(RGBE8Pixel) ->\n                            T>(Self, F) -> ImageResult<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of transformed pixels","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":372768,"byte_end":372831,"line_start":275,"line_end":275,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":374548,"byte_end":374562,"line_start":319,"line_end":319,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HDRDecoder<R>>::read_image_ldr","value":"pub fn read_image_ldr(Self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<u8> pixels.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":374445,"byte_end":374505,"line_start":317,"line_end":317,"column_start":5,"column_end":65}},{"value":"/ scale = 1, gamma = 2.2","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":374510,"byte_end":374536,"line_start":318,"line_end":318,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":374745,"byte_end":374759,"line_start":325,"line_end":325,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HDRDecoder<R>>::read_image_hdr","value":"pub fn read_image_hdr(Self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[{"value":"/ Consumes decoder and returns a vector of Rgb<f32> pixels.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":374664,"byte_end":374725,"line_start":323,"line_end":323,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":374730,"byte_end":374733,"line_start":324,"line_end":324,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1682},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":375710,"byte_end":375733,"line_start":356,"line_end":356,"column_start":12,"column_end":35},"name":"HDRImageDecoderIterator","qualname":"::hdr::hdr_decoder::HDRImageDecoderIterator","value":"HDRImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[{"value":"/ Scanline buffered pixel by pixel iterator","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":375653,"byte_end":375698,"line_start":355,"line_end":355,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383341,"byte_end":383352,"line_start":567,"line_end":567,"column_start":12,"column_end":23},"name":"HDRMetadata","qualname":"::hdr::hdr_decoder::HDRMetadata","value":"HDRMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[{"value":"/ Metadata for Radiance HDR image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383270,"byte_end":383305,"line_start":565,"line_end":565,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3094},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383490,"byte_end":383495,"line_start":570,"line_end":570,"column_start":9,"column_end":14},"name":"width","qualname":"::hdr::hdr_decoder::HDRMetadata::width","value":"u32","parent":{"krate":0,"index":3093},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[{"value":"/ Width of decoded image. It could be either scanline length,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383359,"byte_end":383422,"line_start":568,"line_end":568,"column_start":5,"column_end":68}},{"value":"/ or scanline count, depending on image orientation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383427,"byte_end":383481,"line_start":569,"line_end":569,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3095},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383574,"byte_end":383580,"line_start":572,"line_end":572,"column_start":9,"column_end":15},"name":"height","qualname":"::hdr::hdr_decoder::HDRMetadata::height","value":"u32","parent":{"krate":0,"index":3093},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[{"value":"/ Height of decoded image. It depends on orientation too.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383506,"byte_end":383565,"line_start":571,"line_end":571,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3096},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383855,"byte_end":383866,"line_start":576,"line_end":576,"column_start":9,"column_end":20},"name":"orientation","qualname":"::hdr::hdr_decoder::HDRMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":3093},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[{"value":"/ Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383591,"byte_end":383691,"line_start":573,"line_end":573,"column_start":5,"column_end":105}},{"value":"/ First pair tells how resulting pixel coordinates change along a scanline.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383696,"byte_end":383773,"line_start":574,"line_end":574,"column_start":5,"column_end":82}},{"value":"/ Second pair tells how they change from one scanline to the next.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383778,"byte_end":383846,"line_start":575,"line_end":575,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3097},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384091,"byte_end":384099,"line_start":581,"line_end":581,"column_start":9,"column_end":17},"name":"exposure","qualname":"::hdr::hdr_decoder::HDRMetadata::exposure","value":"std::option::Option<f32>","parent":{"krate":0,"index":3093},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by exposure to get to get physical radiance in","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383894,"byte_end":383964,"line_start":577,"line_end":577,"column_start":5,"column_end":75}},{"value":"/ watts/steradian/m<sup>2</sup>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":383969,"byte_end":384002,"line_start":578,"line_end":578,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384007,"byte_end":384010,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384015,"byte_end":384082,"line_start":580,"line_end":580,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3098},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384343,"byte_end":384359,"line_start":586,"line_end":586,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::hdr::hdr_decoder::HDRMetadata::color_correction","value":"std::option::Option<(f32, f32, f32)>","parent":{"krate":0,"index":3093},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[{"value":"/ Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384118,"byte_end":384213,"line_start":582,"line_end":582,"column_start":5,"column_end":100}},{"value":"/ in watts/steradian/m<sup>2</sup>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384218,"byte_end":384254,"line_start":583,"line_end":583,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384259,"byte_end":384262,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Image may not contain physical data, even if this field is set.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384267,"byte_end":384334,"line_start":585,"line_end":585,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384436,"byte_end":384454,"line_start":588,"line_end":588,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::hdr::hdr_decoder::HDRMetadata::pixel_aspect_ratio","value":"std::option::Option<f32>","parent":{"krate":0,"index":3093},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[{"value":"/ Pixel height divided by pixel width","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384388,"byte_end":384427,"line_start":587,"line_end":587,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3100},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384683,"byte_end":384700,"line_start":592,"line_end":592,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::hdr::hdr_decoder::HDRMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":3093},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[{"value":"/ All lines contained in image header are put here. Ordering of lines is preserved.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384473,"byte_end":384558,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ Lines in the form \"key=value\" are represented as (\"key\", \"value\").","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384563,"byte_end":384633,"line_start":590,"line_end":590,"column_start":5,"column_end":75}},{"value":"/ All other lines are (\"\", \"line\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384638,"byte_end":384674,"line_start":591,"line_end":591,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":393952,"byte_end":393965,"line_start":810,"line_end":810,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::hdr::hdr_decoder::read_raw_file","value":"pub fn read_raw_file<P: AsRef<Path>>(P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[{"value":"/ Helper function for reading raw 3-channel f32 images","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":393888,"byte_end":393944,"line_start":809,"line_end":809,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1756},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":394754,"byte_end":394764,"line_start":6,"line_end":6,"column_start":12,"column_end":22},"name":"HDREncoder","qualname":"::hdr::hdr_encoder::HDREncoder","value":"HDREncoder {  }","parent":null,"children":[{"krate":0,"index":1758}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[{"value":"/ Radiance HDR encoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":394718,"byte_end":394742,"line_start":5,"line_end":5,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":394856,"byte_end":394859,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<HDREncoder<W>>::new","value":"pub fn new(W) -> HDREncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[{"value":"/ Creates encoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":394825,"byte_end":394844,"line_start":11,"line_end":11,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":395046,"byte_end":395052,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"encode","qualname":"<HDREncoder<W>>::encode","value":"pub fn encode(Self, &[Rgb<f32>], usize, usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[{"value":"/ Encodes the image ```data```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":394945,"byte_end":394977,"line_start":18,"line_end":18,"column_start":5,"column_end":37}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":394982,"byte_end":395034,"line_start":19,"line_end":19,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":402468,"byte_end":402476,"line_start":219,"line_end":219,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::hdr::hdr_encoder::to_rgbe8","value":"pub fn to_rgbe8(Rgb<f32>) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[{"value":"/ Converts ```Rgb<f32>``` into ```RGBE8Pixel```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":402411,"byte_end":402460,"line_start":218,"line_end":218,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dxt","qualname":"::dxt","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","parent":null,"children":[{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":3123},{"krate":0,"index":3139},{"krate":0,"index":3138},{"krate":0,"index":3136},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":1809},{"krate":0,"index":1813},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1830},{"krate":0,"index":1833},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1871},{"krate":0,"index":1875},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1885}],"decl_id":null,"docs":"  Decoding of DXT (S3TC) compression","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":2154,"byte_end":2177,"line_start":140,"line_end":140,"column_start":1,"column_end":24}},{"value":"/  Decoding of DXT (S3TC) compression","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":409493,"byte_end":409532,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":409533,"byte_end":409536,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  DXT is an image format that supports lossy compression","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":409537,"byte_end":409596,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":409597,"byte_end":409600,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/  # Related Links","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":409601,"byte_end":409621,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/  * <https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_texture_compression_s3tc.txt> - Description of the DXT compression OpenGL extensions.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":409622,"byte_end":409774,"line_start":6,"line_end":6,"column_start":1,"column_end":153}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":409775,"byte_end":409778,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/  Note: this module only implements bare DXT encoding/decoding, it does not parse formats that can contain DXT files like .dds","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":409779,"byte_end":409908,"line_start":8,"line_end":8,"column_start":1,"column_end":130}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410376,"byte_end":410380,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"DXT1","qualname":"::dxt::DXTVariant::DXT1","value":"DXTVariant::DXT1","parent":{"krate":0,"index":3123},"children":[],"decl_id":null,"docs":" The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n compressed into an 8 byte block of DXT1 data\n","sig":null,"attributes":[{"value":"/ The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410252,"byte_end":410318,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"/ compressed into an 8 byte block of DXT1 data","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410323,"byte_end":410371,"line_start":21,"line_end":21,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3126},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410511,"byte_end":410515,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"DXT3","qualname":"::dxt::DXTVariant::DXT3","value":"DXTVariant::DXT3","parent":{"krate":0,"index":3123},"children":[],"decl_id":null,"docs":" The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT3 data\n","sig":null,"attributes":[{"value":"/ The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410386,"byte_end":410453,"line_start":23,"line_end":23,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT3 data","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410458,"byte_end":410506,"line_start":24,"line_end":24,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410646,"byte_end":410650,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"DXT5","qualname":"::dxt::DXTVariant::DXT5","value":"DXTVariant::DXT5","parent":{"krate":0,"index":3123},"children":[],"decl_id":null,"docs":" The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT5 data\n","sig":null,"attributes":[{"value":"/ The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410521,"byte_end":410588,"line_start":26,"line_end":26,"column_start":5,"column_end":72}},{"value":"/ compressed into a 16 byte block of DXT5 data","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410593,"byte_end":410641,"line_start":27,"line_end":27,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":3123},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410235,"byte_end":410245,"line_start":19,"line_end":19,"column_start":10,"column_end":20},"name":"DXTVariant","qualname":"::dxt::DXTVariant","value":"pub enum DXTVariant {\n\n    /// The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n    /// compressed into an 8 byte block of DXT1 data\n    DXT1,\n\n    /// The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n    /// compressed into a 16 byte block of DXT3 data\n    DXT3,\n\n    /// The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n    /// compressed into a 16 byte block of DXT5 data\n    DXT5,\n}","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":3126},{"krate":0,"index":3128}],"decl_id":null,"docs":" What version of DXT compression are we using?\n Note that DXT2 and DXT4 are left away as they're\n just DXT3 and DXT5 with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ What version of DXT compression are we using?","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410030,"byte_end":410079,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/ Note that DXT2 and DXT4 are left away as they're","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410080,"byte_end":410132,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/ just DXT3 and DXT5 with premultiplied alpha","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410133,"byte_end":410180,"line_start":17,"line_end":17,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411295,"byte_end":411304,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"colortype","qualname":"<DXTVariant>::colortype","value":"pub fn colortype(&Self) -> ColorType","parent":null,"children":[],"decl_id":null,"docs":" Returns the colortype that is stored in this DXT variant\n","sig":null,"attributes":[{"value":"/ Returns the colortype that is stored in this DXT variant","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411223,"byte_end":411283,"line_start":51,"line_end":51,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411528,"byte_end":411538,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"DXTDecoder","qualname":"::dxt::DXTDecoder","value":"DXTDecoder {  }","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819}],"decl_id":null,"docs":" DXT decoder\n","sig":null,"attributes":[{"value":"/ DXT decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411501,"byte_end":411516,"line_start":61,"line_end":61,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":412119,"byte_end":412122,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<DXTDecoder<R>>::new","value":"pub fn new(R, u32, u32, DXTVariant) -> Result<DXTDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DXT decoder that decodes from the stream ```r```.\n As DXT is often stored as raw buffers with the width/height\n somewhere else the width and height of the image need\n to be passed in ```width``` and ```height```, as well as the\n DXT variant in ```variant```.\n width and height are required to be powers of 2 and at least 4.\n otherwise an error will be returned\n","sig":null,"attributes":[{"value":"/ Create a new DXT decoder that decodes from the stream ```r```.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411688,"byte_end":411754,"line_start":71,"line_end":71,"column_start":5,"column_end":71}},{"value":"/ As DXT is often stored as raw buffers with the width/height","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411759,"byte_end":411822,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/ somewhere else the width and height of the image need","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411827,"byte_end":411884,"line_start":73,"line_end":73,"column_start":5,"column_end":62}},{"value":"/ to be passed in ```width``` and ```height```, as well as the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411889,"byte_end":411953,"line_start":74,"line_end":74,"column_start":5,"column_end":69}},{"value":"/ DXT variant in ```variant```.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411958,"byte_end":411991,"line_start":75,"line_end":75,"column_start":5,"column_end":38}},{"value":"/ width and height are required to be powers of 2 and at least 4.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411996,"byte_end":412063,"line_start":76,"line_end":76,"column_start":5,"column_end":72}},{"value":"/ otherwise an error will be returned","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":412068,"byte_end":412107,"line_start":77,"line_end":77,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":414087,"byte_end":414097,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"DXTEncoder","qualname":"::dxt::DXTEncoder","value":"DXTEncoder {  }","parent":null,"children":[{"krate":0,"index":1832}],"decl_id":null,"docs":" DXT encoder\n","sig":null,"attributes":[{"value":"/ DXT encoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":414060,"byte_end":414075,"line_start":135,"line_end":135,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":414228,"byte_end":414231,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<DXTEncoder<W>>::new","value":"pub fn new(W) -> DXTEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":414158,"byte_end":414216,"line_start":141,"line_end":141,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":414517,"byte_end":414523,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"encode","qualname":"<DXTEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, DXTVariant) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image data ```data```\n that has dimensions ```width``` and ```height```\n in ```DXTVariant``` ```variant```\n data is assumed to be in variant.colortype()\n","sig":null,"attributes":[{"value":"/ Encodes the image data ```data```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":414316,"byte_end":414353,"line_start":148,"line_end":148,"column_start":5,"column_end":42}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":414358,"byte_end":414410,"line_start":149,"line_end":149,"column_start":5,"column_end":57}},{"value":"/ in ```DXTVariant``` ```variant```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":414415,"byte_end":414452,"line_start":150,"line_end":150,"column_start":5,"column_end":42}},{"value":"/ data is assumed to be in variant.colortype()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":414457,"byte_end":414505,"line_start":151,"line_end":151,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3142},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436485,"byte_end":436496,"line_start":20,"line_end":20,"column_start":5,"column_end":16},"name":"FormatError","qualname":"::image::ImageError::FormatError","value":"ImageError::FormatError(String)","parent":{"krate":0,"index":3141},"children":[],"decl_id":null,"docs":" The Image is not formatted properly\n","sig":null,"attributes":[{"value":"/ The Image is not formatted properly","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436441,"byte_end":436480,"line_start":19,"line_end":19,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436576,"byte_end":436590,"line_start":23,"line_end":23,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::image::ImageError::DimensionError","value":"ImageError::DimensionError","parent":{"krate":0,"index":3141},"children":[],"decl_id":null,"docs":" The Image's dimensions are either too small or too large\n","sig":null,"attributes":[{"value":"/ The Image's dimensions are either too small or too large","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436511,"byte_end":436571,"line_start":22,"line_end":22,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3147},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436652,"byte_end":436668,"line_start":26,"line_end":26,"column_start":5,"column_end":21},"name":"UnsupportedError","qualname":"::image::ImageError::UnsupportedError","value":"ImageError::UnsupportedError(String)","parent":{"krate":0,"index":3141},"children":[],"decl_id":null,"docs":" The Decoder does not support this image format\n","sig":null,"attributes":[{"value":"/ The Decoder does not support this image format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436597,"byte_end":436647,"line_start":25,"line_end":25,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3150},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436736,"byte_end":436752,"line_start":29,"line_end":29,"column_start":5,"column_end":21},"name":"UnsupportedColor","qualname":"::image::ImageError::UnsupportedColor","value":"ImageError::UnsupportedColor(ColorType)","parent":{"krate":0,"index":3141},"children":[],"decl_id":null,"docs":" The Decoder does not support this color type\n","sig":null,"attributes":[{"value":"/ The Decoder does not support this color type","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436683,"byte_end":436731,"line_start":28,"line_end":28,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3153},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436850,"byte_end":436863,"line_start":33,"line_end":33,"column_start":5,"column_end":18},"name":"NotEnoughData","qualname":"::image::ImageError::NotEnoughData","value":"ImageError::NotEnoughData","parent":{"krate":0,"index":3141},"children":[],"decl_id":null,"docs":" Not enough data was provided to the Decoder\n to decode the image\n","sig":null,"attributes":[{"value":"/ Not enough data was provided to the Decoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436770,"byte_end":436817,"line_start":31,"line_end":31,"column_start":5,"column_end":52}},{"value":"/ to decode the image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436822,"byte_end":436845,"line_start":32,"line_end":32,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436925,"byte_end":436932,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"IoError","qualname":"::image::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":3141},"children":[],"decl_id":null,"docs":" An I/O Error occurred while decoding the image\n","sig":null,"attributes":[{"value":"/ An I/O Error occurred while decoding the image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436870,"byte_end":436920,"line_start":35,"line_end":35,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3158},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436996,"byte_end":437004,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"name":"ImageEnd","qualname":"::image::ImageError::ImageEnd","value":"ImageError::ImageEnd","parent":{"krate":0,"index":3141},"children":[],"decl_id":null,"docs":" The end of the image has been reached\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436950,"byte_end":436991,"line_start":38,"line_end":38,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3141},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436424,"byte_end":436434,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::image::ImageError","value":"pub enum ImageError {\n\n    /// The Image is not formatted properly\n    FormatError(String),\n\n    /// The Image's dimensions are either too small or too large\n    DimensionError,\n\n    /// The Decoder does not support this image format\n    UnsupportedError(String),\n\n    /// The Decoder does not support this color type\n    UnsupportedColor(ColorType),\n\n    /// Not enough data was provided to the Decoder\n    /// to decode the image\n    NotEnoughData,\n\n    /// An I/O Error occurred while decoding the image\n    IoError(io::Error),\n\n    /// The end of the image has been reached\n    ImageEnd,\n}","parent":null,"children":[{"krate":0,"index":3142},{"krate":0,"index":3145},{"krate":0,"index":3147},{"krate":0,"index":3150},{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3158}],"decl_id":null,"docs":" An enumeration of Image errors\n","sig":null,"attributes":[{"value":"/ An enumeration of Image errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":436363,"byte_end":436397,"line_start":16,"line_end":16,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":1909},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":438967,"byte_end":438978,"line_start":89,"line_end":89,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::image::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":438909,"byte_end":438957,"line_start":88,"line_end":88,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3163},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439123,"byte_end":439125,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"U8","qualname":"::image::DecodingResult::U8","value":"DecodingResult::U8(Vec<u8>)","parent":{"krate":0,"index":3162},"children":[],"decl_id":null,"docs":" A vector of unsigned bytes\n","sig":null,"attributes":[{"value":"/ A vector of unsigned bytes","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439088,"byte_end":439118,"line_start":94,"line_end":94,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3166},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439175,"byte_end":439178,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"U16","qualname":"::image::DecodingResult::U16","value":"DecodingResult::U16(Vec<u16>)","parent":{"krate":0,"index":3162},"children":[],"decl_id":null,"docs":" A vector of unsigned words\n","sig":null,"attributes":[{"value":"/ A vector of unsigned words","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439140,"byte_end":439170,"line_start":96,"line_end":96,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439067,"byte_end":439081,"line_start":93,"line_end":93,"column_start":10,"column_end":24},"name":"DecodingResult","qualname":"::image::DecodingResult","value":"pub enum DecodingResult {\n\n    /// A vector of unsigned bytes\n    U8(Vec<u8>),\n\n    /// A vector of unsigned words\n    U16(Vec<u16>),\n}","parent":null,"children":[{"krate":0,"index":3163},{"krate":0,"index":3166}],"decl_id":null,"docs":" Result of a decoding process\n","sig":null,"attributes":[{"value":"/ Result of a decoding process","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439008,"byte_end":439040,"line_start":91,"line_end":91,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3172},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439575,"byte_end":439578,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"PNG","qualname":"::image::ImageFormat::PNG","value":"ImageFormat::PNG","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439544,"byte_end":439570,"line_start":112,"line_end":112,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439617,"byte_end":439621,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"JPEG","qualname":"::image::ImageFormat::JPEG","value":"ImageFormat::JPEG","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439585,"byte_end":439612,"line_start":115,"line_end":115,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439659,"byte_end":439662,"line_start":119,"line_end":119,"column_start":5,"column_end":8},"name":"GIF","qualname":"::image::ImageFormat::GIF","value":"ImageFormat::GIF","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439628,"byte_end":439654,"line_start":118,"line_end":118,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3178},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439701,"byte_end":439705,"line_start":122,"line_end":122,"column_start":5,"column_end":9},"name":"WEBP","qualname":"::image::ImageFormat::WEBP","value":"ImageFormat::WEBP","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439669,"byte_end":439696,"line_start":121,"line_end":121,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3180},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439751,"byte_end":439754,"line_start":125,"line_end":125,"column_start":5,"column_end":8},"name":"PNM","qualname":"::image::ImageFormat::PNM","value":"ImageFormat::PNM","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[{"value":"/ An Image in general PNM Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439712,"byte_end":439746,"line_start":124,"line_end":124,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3182},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439793,"byte_end":439797,"line_start":128,"line_end":128,"column_start":5,"column_end":9},"name":"TIFF","qualname":"::image::ImageFormat::TIFF","value":"ImageFormat::TIFF","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439761,"byte_end":439788,"line_start":127,"line_end":127,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3184},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439835,"byte_end":439838,"line_start":131,"line_end":131,"column_start":5,"column_end":8},"name":"TGA","qualname":"::image::ImageFormat::TGA","value":"ImageFormat::TGA","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439804,"byte_end":439830,"line_start":130,"line_end":130,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3186},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439876,"byte_end":439879,"line_start":134,"line_end":134,"column_start":5,"column_end":8},"name":"BMP","qualname":"::image::ImageFormat::BMP","value":"ImageFormat::BMP","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439845,"byte_end":439871,"line_start":133,"line_end":133,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439917,"byte_end":439920,"line_start":137,"line_end":137,"column_start":5,"column_end":8},"name":"ICO","qualname":"::image::ImageFormat::ICO","value":"ImageFormat::ICO","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439886,"byte_end":439912,"line_start":136,"line_end":136,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439967,"byte_end":439970,"line_start":140,"line_end":140,"column_start":5,"column_end":8},"name":"HDR","qualname":"::image::ImageFormat::HDR","value":"ImageFormat::HDR","parent":{"krate":0,"index":3171},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439927,"byte_end":439962,"line_start":139,"line_end":139,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439526,"byte_end":439537,"line_start":111,"line_end":111,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"pub enum ImageFormat {\n\n    /// An Image in PNG Format\n    PNG,\n\n    /// An Image in JPEG Format\n    JPEG,\n\n    /// An Image in GIF Format\n    GIF,\n\n    /// An Image in WEBP Format\n    WEBP,\n\n    /// An Image in general PNM Format\n    PNM,\n\n    /// An Image in TIFF Format\n    TIFF,\n\n    /// An Image in TGA Format\n    TGA,\n\n    /// An Image in BMP Format\n    BMP,\n\n    /// An Image in ICO Format\n    ICO,\n\n    /// An Image in Radiance HDR Format\n    HDR,\n}","parent":null,"children":[{"krate":0,"index":3172},{"krate":0,"index":3174},{"krate":0,"index":3176},{"krate":0,"index":3178},{"krate":0,"index":3180},{"krate":0,"index":3182},{"krate":0,"index":3184},{"krate":0,"index":3186},{"krate":0,"index":3188},{"krate":0,"index":3190}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439369,"byte_end":439415,"line_start":108,"line_end":108,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439416,"byte_end":439471,"line_start":109,"line_end":109,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3204},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440172,"byte_end":440175,"line_start":148,"line_end":148,"column_start":5,"column_end":8},"name":"PNG","qualname":"::image::ImageOutputFormat::PNG","value":"ImageOutputFormat::PNG","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png_codec\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440107,"byte_end":440136,"line_start":146,"line_end":146,"column_start":5,"column_end":34}},{"value":"/ An Image in PNG Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440141,"byte_end":440167,"line_start":147,"line_end":147,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3206},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440266,"byte_end":440270,"line_start":152,"line_end":152,"column_start":5,"column_end":9},"name":"JPEG","qualname":"::image::ImageOutputFormat::JPEG","value":"ImageOutputFormat::JPEG(u8)","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440182,"byte_end":440206,"line_start":150,"line_end":150,"column_start":5,"column_end":29}},{"value":"/ An Image in JPEG Format with specified quality","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440211,"byte_end":440261,"line_start":151,"line_end":151,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3209},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440352,"byte_end":440355,"line_start":156,"line_end":156,"column_start":5,"column_end":8},"name":"PNM","qualname":"::image::ImageOutputFormat::PNM","value":"ImageOutputFormat::PNM(PNMSubtype)","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" An Image in one of the PNM Formats\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440281,"byte_end":440304,"line_start":154,"line_end":154,"column_start":5,"column_end":28}},{"value":"/ An Image in one of the PNM Formats","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440309,"byte_end":440347,"line_start":155,"line_end":155,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3212},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440439,"byte_end":440442,"line_start":160,"line_end":160,"column_start":5,"column_end":8},"name":"GIF","qualname":"::image::ImageOutputFormat::GIF","value":"ImageOutputFormat::GIF","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif_codec\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440374,"byte_end":440403,"line_start":158,"line_end":158,"column_start":5,"column_end":34}},{"value":"/ An Image in GIF Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440408,"byte_end":440434,"line_start":159,"line_end":159,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3214},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440508,"byte_end":440511,"line_start":164,"line_end":164,"column_start":5,"column_end":8},"name":"ICO","qualname":"::image::ImageOutputFormat::ICO","value":"ImageOutputFormat::ICO","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440449,"byte_end":440472,"line_start":162,"line_end":162,"column_start":5,"column_end":28}},{"value":"/ An Image in ICO Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440477,"byte_end":440503,"line_start":163,"line_end":163,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3216},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440577,"byte_end":440580,"line_start":168,"line_end":168,"column_start":5,"column_end":8},"name":"BMP","qualname":"::image::ImageOutputFormat::BMP","value":"ImageOutputFormat::BMP","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440518,"byte_end":440541,"line_start":166,"line_end":166,"column_start":5,"column_end":28}},{"value":"/ An Image in BMP Format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440546,"byte_end":440572,"line_start":167,"line_end":167,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440832,"byte_end":440843,"line_start":173,"line_end":173,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[{"value":"/ A value for signalling an error: An unsupported format was requested","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440587,"byte_end":440659,"line_start":170,"line_end":170,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440083,"byte_end":440100,"line_start":145,"line_end":145,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"pub enum ImageOutputFormat {\n\n    #[cfg(feature = \"png_codec\")]\n    /// An Image in PNG Format\n    PNG,\n\n    #[cfg(feature = \"jpeg\")]\n    /// An Image in JPEG Format with specified quality\n    JPEG(u8),\n\n    #[cfg(feature = \"pnm\")]\n    /// An Image in one of the PNM Formats\n    PNM(PNMSubtype),\n\n    #[cfg(feature = \"gif_codec\")]\n    /// An Image in GIF Format\n    GIF,\n\n    #[cfg(feature = \"ico\")]\n    /// An Image in ICO Format\n    ICO,\n\n    #[cfg(feature = \"bmp\")]\n    /// An Image in BMP Format\n    BMP,\n\n    /// A value for signalling an error: An unsupported format was requested\n    Unsupported(String),\n}","parent":null,"children":[{"krate":0,"index":3204},{"krate":0,"index":3206},{"krate":0,"index":3209},{"krate":0,"index":3212},{"krate":0,"index":3214},{"krate":0,"index":3216},{"krate":0,"index":3218}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats for encoding.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":439975,"byte_end":440034,"line_start":143,"line_end":143,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":441742,"byte_end":441754,"line_start":198,"line_end":198,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder: Sized","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":441690,"byte_end":441731,"line_start":197,"line_end":197,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":441840,"byte_end":441850,"line_start":200,"line_end":200,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"pub fn dimensions(&mut Self) -> ImageResult<(u32, u32)>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":441768,"byte_end":441832,"line_start":199,"line_end":199,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":441965,"byte_end":441974,"line_start":203,"line_end":203,"column_start":8,"column_end":17},"name":"colortype","qualname":"::image::ImageDecoder::colortype","value":"pub fn colortype(&mut Self) -> ImageResult<ColorType>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" Returns the color type of the image e.g. RGB(8) (8bit RGB)\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image e.g. RGB(8) (8bit RGB)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":441895,"byte_end":441957,"line_start":202,"line_end":202,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442089,"byte_end":442096,"line_start":206,"line_end":206,"column_start":8,"column_end":15},"name":"row_len","qualname":"::image::ImageDecoder::row_len","value":"pub fn row_len(&mut Self) -> ImageResult<usize>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" Returns the length in bytes of one decoded row of the image\n","sig":null,"attributes":[{"value":"/ Returns the length in bytes of one decoded row of the image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442018,"byte_end":442081,"line_start":205,"line_end":205,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442217,"byte_end":442230,"line_start":209,"line_end":209,"column_start":8,"column_end":21},"name":"read_scanline","qualname":"::image::ImageDecoder::read_scanline","value":"pub fn read_scanline(&mut Self, &mut [u8]) -> ImageResult<u32>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" Reads one row from the image into ```buf``` and returns the row index\n","sig":null,"attributes":[{"value":"/ Reads one row from the image into ```buf``` and returns the row index","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442136,"byte_end":442209,"line_start":208,"line_end":208,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442346,"byte_end":442356,"line_start":212,"line_end":212,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"pub fn read_image(&mut Self) -> ImageResult<DecodingResult>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" Decodes the entire image and return it as a Vector\n","sig":null,"attributes":[{"value":"/ Decodes the entire image and return it as a Vector","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442284,"byte_end":442338,"line_start":211,"line_end":211,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442454,"byte_end":442465,"line_start":215,"line_end":215,"column_start":8,"column_end":19},"name":"is_animated","qualname":"::image::ImageDecoder::is_animated","value":"pub fn is_animated(&mut Self) -> ImageResult<bool>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" Returns true if the image is animated\n","sig":null,"attributes":[{"value":"/ Returns true if the image is animated","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442405,"byte_end":442446,"line_start":214,"line_end":214,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442765,"byte_end":442776,"line_start":225,"line_end":225,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::ImageDecoder::into_frames","value":"pub fn into_frames(Self) -> ImageResult<Frames>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" Returns the frames of the image","sig":null,"attributes":[{"value":"/ Returns the frames of the image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442630,"byte_end":442665,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442670,"byte_end":442673,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ If the image is not animated it returns a single frame","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442678,"byte_end":442736,"line_start":223,"line_end":223,"column_start":5,"column_end":63}},{"value":"allow(unused)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442741,"byte_end":442757,"line_start":224,"line_end":224,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":443089,"byte_end":443098,"line_start":233,"line_end":233,"column_start":8,"column_end":17},"name":"load_rect","qualname":"::image::ImageDecoder::load_rect","value":"pub fn load_rect(&mut Self, u32, u32, u32, u32) -> ImageResult<Vec<u8>>","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" Decodes a specific region of the image, represented by the rectangle\n starting from ```x``` and ```y``` and having ```length``` and ```width```\n","sig":null,"attributes":[{"value":"/ Decodes a specific region of the image, represented by the rectangle","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":442927,"byte_end":442999,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/ starting from ```x``` and ```y``` and having ```length``` and ```width```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":443004,"byte_end":443081,"line_start":232,"line_end":232,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1930},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":444143,"byte_end":444149,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":444103,"byte_end":444131,"line_start":274,"line_end":274,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":444930,"byte_end":444939,"line_start":308,"line_end":308,"column_start":12,"column_end":21},"name":"MutPixels","qualname":"::image::MutPixels","value":"MutPixels {  }","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950}],"decl_id":null,"docs":" Mutable pixel iterator","sig":null,"attributes":[{"value":"/ Mutable pixel iterator","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":444740,"byte_end":444766,"line_start":305,"line_end":305,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":444767,"byte_end":444770,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ DEPRECATED: It is currently not possible to create a safe iterator for this in Rust. You have to use an iterator over the image buffer instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":444771,"byte_end":444918,"line_start":307,"line_end":307,"column_start":1,"column_end":148}}]},{"kind":"Trait","id":{"krate":0,"index":1956},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":445983,"byte_end":445995,"line_start":349,"line_end":349,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: Sized","parent":null,"children":[{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1973}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":445936,"byte_end":445972,"line_start":348,"line_end":348,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1957},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446041,"byte_end":446046,"line_start":351,"line_end":351,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImage::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446009,"byte_end":446031,"line_start":350,"line_end":350,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446107,"byte_end":446117,"line_start":354,"line_end":354,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImage::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446060,"byte_end":446099,"line_start":353,"line_end":353,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446181,"byte_end":446186,"line_start":357,"line_end":357,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImage::width","value":"pub fn width(&Self) -> u32","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446145,"byte_end":446173,"line_start":356,"line_end":356,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446301,"byte_end":446307,"line_start":363,"line_end":363,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImage::height","value":"pub fn height(&Self) -> u32","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446264,"byte_end":446293,"line_start":362,"line_end":362,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446434,"byte_end":446440,"line_start":369,"line_end":369,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImage::bounds","value":"pub fn bounds(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446385,"byte_end":446426,"line_start":368,"line_end":368,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446557,"byte_end":446566,"line_start":372,"line_end":372,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImage::in_bounds","value":"pub fn in_bounds(&Self, u32, u32) -> bool","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446478,"byte_end":446549,"line_start":371,"line_end":371,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446889,"byte_end":446898,"line_start":384,"line_end":384,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImage::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446714,"byte_end":446753,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446758,"byte_end":446761,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446766,"byte_end":446778,"line_start":379,"line_end":379,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446783,"byte_end":446786,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446791,"byte_end":446831,"line_start":381,"line_end":381,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446836,"byte_end":446839,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ TODO: change this signature to &P","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446844,"byte_end":446881,"line_start":383,"line_end":383,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1964},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447064,"byte_end":447077,"line_start":391,"line_end":391,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut Self::Pixel","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446943,"byte_end":446978,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446983,"byte_end":446986,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":446991,"byte_end":447003,"line_start":388,"line_end":388,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447008,"byte_end":447011,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447016,"byte_end":447056,"line_start":390,"line_end":390,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447273,"byte_end":447289,"line_start":396,"line_end":396,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImage::unsafe_get_pixel","value":"pub unsafe fn unsafe_get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447131,"byte_end":447170,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447175,"byte_end":447178,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447183,"byte_end":447258,"line_start":395,"line_end":395,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447490,"byte_end":447499,"line_start":405,"line_end":405,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447370,"byte_end":447404,"line_start":400,"line_end":400,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447409,"byte_end":447412,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447417,"byte_end":447429,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447434,"byte_end":447437,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447442,"byte_end":447482,"line_start":404,"line_end":404,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447691,"byte_end":447707,"line_start":410,"line_end":410,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"pub unsafe fn unsafe_put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447553,"byte_end":447588,"line_start":407,"line_end":407,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447593,"byte_end":447596,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447601,"byte_end":447676,"line_start":409,"line_end":409,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447974,"byte_end":447985,"line_start":417,"line_end":417,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"pub fn blend_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447805,"byte_end":447875,"line_start":414,"line_end":414,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447880,"byte_end":447883,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED: This method will be removed. Blend the pixel directly instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":447888,"byte_end":447966,"line_start":416,"line_end":416,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":448190,"byte_end":448196,"line_start":422,"line_end":422,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImage::pixels","value":"pub fn pixels(&Self) -> Pixels<, Self>","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":448039,"byte_end":448093,"line_start":419,"line_end":419,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":448098,"byte_end":448151,"line_start":420,"line_end":420,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":448156,"byte_end":448182,"line_start":421,"line_end":421,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":448716,"byte_end":448726,"line_start":438,"line_end":438,"column_start":8,"column_end":18},"name":"pixels_mut","qualname":"::image::GenericImage::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> MutPixels<, Self>","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" Returns an Iterator over mutable pixels of this image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over mutable pixels of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":448437,"byte_end":448495,"line_start":434,"line_end":434,"column_start":5,"column_end":63}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":448500,"byte_end":448553,"line_start":435,"line_end":435,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":448558,"byte_end":448601,"line_start":436,"line_end":436,"column_start":5,"column_end":48}},{"value":"deprecated(note =\n             \"This cannot be implemented safely in Rust. Please use the image buffer directly.\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":448606,"byte_end":448708,"line_start":437,"line_end":437,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":449387,"byte_end":449396,"line_start":460,"line_end":460,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"pub fn copy_from<O>(&mut Self, &O, u32, u32) -> bool where\nO: GenericImage<Pixel = Self::Pixel>","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":448977,"byte_end":449041,"line_start":450,"line_end":450,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":449046,"byte_end":449049,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":449054,"byte_end":449115,"line_start":452,"line_end":452,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":449120,"byte_end":449153,"line_start":453,"line_end":453,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":449158,"byte_end":449161,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a piece of the other image, use `sub_image`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":449166,"byte_end":449236,"line_start":455,"line_end":455,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":449241,"byte_end":449244,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":449249,"byte_end":449262,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":449267,"byte_end":449336,"line_start":458,"line_end":458,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":449341,"byte_end":449379,"line_start":459,"line_end":459,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":450075,"byte_end":450084,"line_start":480,"line_end":480,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"pub fn sub_image(&mut Self, u32, u32, u32, u32) -> SubImage<, Self> where\nSelf: 'static, <Self::Pixel as Pixel>::Subpixel: 'static, Self::Pixel: 'static","parent":{"krate":0,"index":1956},"children":[],"decl_id":null,"docs":" Returns a subimage that is a view into this image.\n","sig":null,"attributes":[{"value":"/ Returns a subimage that is a view into this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":450013,"byte_end":450067,"line_start":479,"line_end":479,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1974},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":450353,"byte_end":450361,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981}],"decl_id":null,"docs":" A View into another image\n","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":450312,"byte_end":450341,"line_start":488,"line_end":488,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":450722,"byte_end":450725,"line_start":503,"line_end":503,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage>::new","value":"pub fn new(&mut I, u32, u32, u32, u32) -> SubImage<, I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":450682,"byte_end":450710,"line_start":502,"line_end":502,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1986},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":451037,"byte_end":451046,"line_start":514,"line_end":514,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<SubImage>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut I","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the wrapped image.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the wrapped image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":450972,"byte_end":451025,"line_start":513,"line_end":513,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":451164,"byte_end":451177,"line_start":519,"line_end":519,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage>::change_bounds","value":"pub fn change_bounds(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":451108,"byte_end":451152,"line_start":518,"line_end":518,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":451411,"byte_end":451419,"line_start":527,"line_end":527,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage>::to_image","value":"pub fn to_image(&Self)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":451356,"byte_end":451399,"line_start":526,"line_end":526,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3233},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":456225,"byte_end":456235,"line_start":49,"line_end":49,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":456178,"byte_end":456220,"line_start":48,"line_end":48,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3236},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":456311,"byte_end":456322,"line_start":52,"line_end":52,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":456253,"byte_end":456306,"line_start":51,"line_end":51,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3239},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":456391,"byte_end":456400,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":456345,"byte_end":456386,"line_start":54,"line_end":54,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":456474,"byte_end":456484,"line_start":58,"line_end":58,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":456417,"byte_end":456469,"line_start":57,"line_end":57,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":3232},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":456159,"byte_end":456171,"line_start":47,"line_end":47,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"pub enum DynamicImage {\n\n    /// Each pixel in this image is 8-bit Luma\n    ImageLuma8(GrayImage),\n\n    /// Each pixel in this image is 8-bit Luma with alpha\n    ImageLumaA8(GrayAlphaImage),\n\n    /// Each pixel in this image is 8-bit Rgb\n    ImageRgb8(RgbImage),\n\n    /// Each pixel in this image is 8-bit Rgb with alpha\n    ImageRgba8(RgbaImage),\n}","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3236},{"krate":0,"index":3239},{"krate":0,"index":3242}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":456113,"byte_end":456132,"line_start":45,"line_end":45,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":458567,"byte_end":458576,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"pub fn new_luma8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey pixels.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":458493,"byte_end":458555,"line_start":100,"line_end":100,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":458779,"byte_end":458790,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"pub fn new_luma_a8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of grey","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":458679,"byte_end":458733,"line_start":105,"line_end":105,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":458738,"byte_end":458767,"line_start":106,"line_end":106,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":458967,"byte_end":458975,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"pub fn new_rgb8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":458894,"byte_end":458955,"line_start":111,"line_end":111,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":459151,"byte_end":459160,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"pub fn new_rgba8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":459077,"byte_end":459139,"line_start":116,"line_end":116,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":459324,"byte_end":459330,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"pub fn to_rgb(&Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":459263,"byte_end":459312,"line_start":121,"line_end":121,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":459499,"byte_end":459506,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"pub fn to_rgba(&Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":459437,"byte_end":459487,"line_start":128,"line_end":128,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":459675,"byte_end":459682,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"pub fn to_luma(&Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":459614,"byte_end":459663,"line_start":135,"line_end":135,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":459852,"byte_end":459865,"line_start":143,"line_end":143,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":459790,"byte_end":459840,"line_start":142,"line_end":142,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":460061,"byte_end":460065,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"pub fn crop(&mut Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut out of this image delimited by the bounding rectangle.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":459978,"byte_end":460049,"line_start":149,"line_end":149,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":460359,"byte_end":460366,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"pub fn as_rgb8(&Self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":460304,"byte_end":460347,"line_start":159,"line_end":159,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":460609,"byte_end":460620,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"pub fn as_mut_rgb8(&mut Self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":460546,"byte_end":460597,"line_start":167,"line_end":167,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":460872,"byte_end":460880,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"pub fn as_rgba8(&Self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":460816,"byte_end":460860,"line_start":175,"line_end":175,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":461128,"byte_end":461140,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"pub fn as_mut_rgba8(&mut Self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":461064,"byte_end":461116,"line_start":183,"line_end":183,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":461400,"byte_end":461408,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"pub fn as_luma8(&Self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":461339,"byte_end":461388,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":461662,"byte_end":461674,"line_start":200,"line_end":200,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"pub fn as_mut_luma8(&mut Self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":461593,"byte_end":461650,"line_start":199,"line_end":199,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":461956,"byte_end":461970,"line_start":208,"line_end":208,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"pub fn as_luma_alpha8(&Self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":461873,"byte_end":461944,"line_start":207,"line_end":207,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":462252,"byte_end":462270,"line_start":216,"line_end":216,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"pub fn as_mut_luma_alpha8(&mut Self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":462161,"byte_end":462240,"line_start":215,"line_end":215,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":462536,"byte_end":462546,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"raw_pixels","qualname":"<DynamicImage>::raw_pixels","value":"pub fn raw_pixels(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":462476,"byte_end":462524,"line_start":223,"line_end":223,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":462654,"byte_end":462659,"line_start":229,"line_end":229,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"pub fn color(&Self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":462607,"byte_end":462642,"line_start":228,"line_end":228,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":463069,"byte_end":463078,"line_start":239,"line_end":239,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"pub fn grayscale(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":463012,"byte_end":463057,"line_start":238,"line_end":238,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":463608,"byte_end":463614,"line_start":250,"line_end":250,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"pub fn invert(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":463522,"byte_end":463558,"line_start":248,"line_end":248,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":463563,"byte_end":463596,"line_start":249,"line_end":249,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":463978,"byte_end":463984,"line_start":258,"line_end":258,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"pub fn resize(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":463701,"byte_end":463760,"line_start":254,"line_end":254,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":463765,"byte_end":463828,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":463833,"byte_end":463895,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":463900,"byte_end":463966,"line_start":257,"line_end":257,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":464491,"byte_end":464503,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"pub fn resize_exact(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":464289,"byte_end":464348,"line_start":268,"line_end":268,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":464353,"byte_end":464409,"line_start":269,"line_end":269,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":464414,"byte_end":464479,"line_start":270,"line_end":270,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465228,"byte_end":465237,"line_start":287,"line_end":287,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"pub fn thumbnail(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.","sig":null,"attributes":[{"value":"/ Scale this image down to fit within a specific size.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":464753,"byte_end":464809,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":464814,"byte_end":464877,"line_start":280,"line_end":280,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":464882,"byte_end":464944,"line_start":281,"line_end":281,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by ```nwidth``` and ```nheight```.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":464949,"byte_end":465015,"line_start":282,"line_end":282,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465020,"byte_end":465023,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465028,"byte_end":465091,"line_start":284,"line_end":284,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465096,"byte_end":465146,"line_start":285,"line_end":285,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465151,"byte_end":465216,"line_start":286,"line_end":286,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465876,"byte_end":465891,"line_start":301,"line_end":301,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"pub fn thumbnail_exact(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[{"value":"/ Scale this image down to a specific size.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465494,"byte_end":465539,"line_start":295,"line_end":295,"column_start":5,"column_end":50}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465544,"byte_end":465600,"line_start":296,"line_end":296,"column_start":5,"column_end":61}},{"value":"/ ```nwidth``` and ```nheight``` are the new image's dimensions.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465605,"byte_end":465671,"line_start":297,"line_end":297,"column_start":5,"column_end":71}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465676,"byte_end":465739,"line_start":298,"line_end":298,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465744,"byte_end":465794,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":465799,"byte_end":465864,"line_start":300,"line_end":300,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":466466,"byte_end":466480,"line_start":314,"line_end":314,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"pub fn resize_to_fill(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by ```nwidth``` and ```nheight```, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":466088,"byte_end":466147,"line_start":308,"line_end":308,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":466152,"byte_end":466215,"line_start":309,"line_end":309,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":466220,"byte_end":466282,"line_start":310,"line_end":310,"column_start":5,"column_end":67}},{"value":"/ within the larger (relative to aspect ratio) of the bounds","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":466287,"byte_end":466349,"line_start":311,"line_end":311,"column_start":5,"column_end":67}},{"value":"/ specified by ```nwidth``` and ```nheight```, then cropped to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":466354,"byte_end":466418,"line_start":312,"line_end":312,"column_start":5,"column_end":69}},{"value":"/ fit within the other bound.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":466423,"byte_end":466454,"line_start":313,"line_end":313,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":467313,"byte_end":467317,"line_start":335,"line_end":335,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"pub fn blur(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":467201,"byte_end":467244,"line_start":333,"line_end":333,"column_start":5,"column_end":48}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":467249,"byte_end":467301,"line_start":334,"line_end":334,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":467695,"byte_end":467704,"line_start":344,"line_end":344,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"pub fn unsharpen(&Self, f32, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":467429,"byte_end":467474,"line_start":339,"line_end":339,"column_start":5,"column_end":50}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":467479,"byte_end":467530,"line_start":340,"line_end":340,"column_start":5,"column_end":56}},{"value":"/ ```threshold``` is a control of how much to sharpen.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":467535,"byte_end":467591,"line_start":341,"line_end":341,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":467596,"byte_end":467599,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":467604,"byte_end":467683,"line_start":343,"line_end":343,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":467913,"byte_end":467922,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"pub fn filter3x3(&Self, &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":467848,"byte_end":467901,"line_start":348,"line_end":348,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468332,"byte_end":468347,"line_start":360,"line_end":360,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"pub fn adjust_contrast(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468129,"byte_end":468167,"line_start":357,"line_end":357,"column_start":5,"column_end":43}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468172,"byte_end":468231,"line_start":358,"line_end":358,"column_start":5,"column_end":64}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468236,"byte_end":468320,"line_start":359,"line_end":359,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468647,"byte_end":468655,"line_start":367,"line_end":367,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"pub fn brighten(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468455,"byte_end":468493,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468498,"byte_end":468554,"line_start":365,"line_end":365,"column_start":5,"column_end":61}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468559,"byte_end":468635,"line_start":366,"line_end":366,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469003,"byte_end":469012,"line_start":375,"line_end":375,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"pub fn huerotate(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468771,"byte_end":468805,"line_start":371,"line_end":371,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468810,"byte_end":468861,"line_start":372,"line_end":372,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468866,"byte_end":468935,"line_start":373,"line_end":373,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":468940,"byte_end":468991,"line_start":374,"line_end":374,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469171,"byte_end":469176,"line_start":380,"line_end":380,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"pub fn flipv(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469129,"byte_end":469159,"line_start":379,"line_end":379,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469322,"byte_end":469327,"line_start":385,"line_end":385,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"pub fn fliph(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469278,"byte_end":469310,"line_start":384,"line_end":384,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469486,"byte_end":469494,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"pub fn rotate90(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469431,"byte_end":469474,"line_start":389,"line_end":389,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469647,"byte_end":469656,"line_start":395,"line_end":395,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"pub fn rotate180(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469591,"byte_end":469635,"line_start":394,"line_end":394,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469810,"byte_end":469819,"line_start":400,"line_end":400,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"pub fn rotate270(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469754,"byte_end":469798,"line_start":399,"line_end":399,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469974,"byte_end":469982,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"pub fn write_to<W: Write, F: Into<ImageOutputFormat>>(&Self, &mut W, F)\n-> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":469917,"byte_end":469962,"line_start":404,"line_end":404,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":472189,"byte_end":472193,"line_start":469,"line_end":469,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"pub fn save<Q>(&Self, Q) -> io::Result<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":472055,"byte_end":472108,"line_start":466,"line_end":466,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":472113,"byte_end":472116,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":472121,"byte_end":472177,"line_start":468,"line_end":468,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":476915,"byte_end":476919,"line_start":595,"line_end":595,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"pub fn open<P>(P) -> ImageResult<DynamicImage> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.\n","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":476789,"byte_end":476838,"line_start":593,"line_end":593,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":476839,"byte_end":476907,"line_start":594,"line_end":594,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":478531,"byte_end":478542,"line_start":642,"line_end":642,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"pub fn save_buffer<P>(P, &[u8], u32, u32, color::ColorType) -> io::Result<()>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":478177,"byte_end":478239,"line_start":635,"line_end":635,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":478240,"byte_end":478243,"line_start":636,"line_end":636,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":478244,"byte_end":478330,"line_start":637,"line_end":637,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":478331,"byte_end":478392,"line_start":638,"line_end":638,"column_start":1,"column_end":62}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":478394,"byte_end":478485,"line_start":640,"line_end":640,"column_start":1,"column_end":92}},{"value":"/ jpeg and png files are supported.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":478486,"byte_end":478523,"line_start":641,"line_end":641,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":2117},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":480598,"byte_end":480602,"line_start":687,"line_end":687,"column_start":8,"column_end":12},"name":"load","qualname":"::dynimage::load","value":"pub fn load<R: BufRead + Seek>(R, ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader\n","sig":null,"attributes":[{"value":"/ Create a new image from a Reader","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":480554,"byte_end":480590,"line_start":686,"line_end":686,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":482901,"byte_end":482917,"line_start":738,"line_end":738,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"pub fn load_from_memory(&[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":482754,"byte_end":482794,"line_start":734,"line_end":734,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":482795,"byte_end":482798,"line_start":735,"line_end":735,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":482799,"byte_end":482850,"line_start":736,"line_end":736,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":482851,"byte_end":482893,"line_start":737,"line_end":737,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":483103,"byte_end":483131,"line_start":745,"line_end":745,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"pub fn load_from_memory_with_format(&[u8], ImageFormat)\n-> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice\n","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":483037,"byte_end":483077,"line_start":743,"line_end":743,"column_start":1,"column_end":41}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":483078,"byte_end":483095,"line_start":744,"line_end":744,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":483514,"byte_end":483526,"line_start":755,"line_end":755,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::dynimage::guess_format","value":"pub fn guess_format(&[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":483253,"byte_end":483293,"line_start":750,"line_end":750,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":483294,"byte_end":483297,"line_start":751,"line_end":751,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":483298,"byte_end":483391,"line_start":752,"line_end":752,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":483392,"byte_end":483434,"line_start":753,"line_end":753,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":483435,"byte_end":483506,"line_start":754,"line_end":754,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3248},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487380,"byte_end":487384,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Gray","qualname":"::color::ColorType::Gray","value":"ColorType::Gray(u8)","parent":{"krate":0,"index":3247},"children":[],"decl_id":null,"docs":" Pixel is grayscale\n","sig":null,"attributes":[{"value":"/ Pixel is grayscale","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487353,"byte_end":487375,"line_start":11,"line_end":11,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3251},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487438,"byte_end":487441,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"RGB","qualname":"::color::ColorType::RGB","value":"ColorType::RGB(u8)","parent":{"krate":0,"index":3247},"children":[],"decl_id":null,"docs":" Pixel contains R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains R, G and B channels","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487395,"byte_end":487433,"line_start":14,"line_end":14,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487499,"byte_end":487506,"line_start":18,"line_end":18,"column_start":5,"column_end":12},"name":"Palette","qualname":"::color::ColorType::Palette","value":"ColorType::Palette(u8)","parent":{"krate":0,"index":3247},"children":[],"decl_id":null,"docs":" Pixel is an index into a color palette\n","sig":null,"attributes":[{"value":"/ Pixel is an index into a color palette","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487452,"byte_end":487494,"line_start":17,"line_end":17,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487566,"byte_end":487571,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"GrayA","qualname":"::color::ColorType::GrayA","value":"ColorType::GrayA(u8)","parent":{"krate":0,"index":3247},"children":[],"decl_id":null,"docs":" Pixel is grayscale with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is grayscale with an alpha channel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487517,"byte_end":487561,"line_start":20,"line_end":20,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3260},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487625,"byte_end":487629,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"RGBA","qualname":"::color::ColorType::RGBA","value":"ColorType::RGBA(u8)","parent":{"krate":0,"index":3247},"children":[],"decl_id":null,"docs":" Pixel is RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is RGB with an alpha channel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487582,"byte_end":487620,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":3247},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487337,"byte_end":487346,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"pub enum ColorType {\n\n    /// Pixel is grayscale\n    Gray(u8),\n\n    /// Pixel contains R, G and B channels\n    RGB(u8),\n\n    /// Pixel is an index into a color palette\n    Palette(u8),\n\n    /// Pixel is grayscale with an alpha channel\n    GrayA(u8),\n\n    /// Pixel is RGB with an alpha channel\n    RGBA(u8),\n}","parent":null,"children":[{"krate":0,"index":3248},{"krate":0,"index":3251},{"krate":0,"index":3254},{"krate":0,"index":3257},{"krate":0,"index":3260}],"decl_id":null,"docs":" An enumeration over supported color types and their bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and their bit depths","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":487210,"byte_end":487276,"line_start":8,"line_end":8,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492449,"byte_end":492452,"line_start":209,"line_end":209,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"Rgb { data }","parent":null,"children":[{"krate":0,"index":3452}],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488591,"byte_end":488601,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488602,"byte_end":488624,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492449,"byte_end":492452,"line_start":209,"line_end":209,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"pub fn Rgb<T: Primitive>([T; ]) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488686,"byte_end":488724,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3478},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492499,"byte_end":492503,"line_start":210,"line_end":210,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"Luma { data }","parent":null,"children":[{"krate":0,"index":3480}],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488591,"byte_end":488601,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488602,"byte_end":488624,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492499,"byte_end":492503,"line_start":210,"line_end":210,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"pub fn Luma<T: Primitive>([T; ]) -> Luma<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488686,"byte_end":488724,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492555,"byte_end":492559,"line_start":211,"line_end":211,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"Rgba { data }","parent":null,"children":[{"krate":0,"index":3508}],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488591,"byte_end":488601,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488602,"byte_end":488624,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3364},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492555,"byte_end":492559,"line_start":211,"line_end":211,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"pub fn Rgba<T: Primitive>([T; ]) -> Rgba<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488686,"byte_end":488724,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3534},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492624,"byte_end":492629,"line_start":212,"line_end":212,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"LumaA { data }","parent":null,"children":[{"krate":0,"index":3536}],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488591,"byte_end":488601,"line_start":62,"line_end":62,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488602,"byte_end":488624,"line_start":63,"line_end":63,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":3407},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492624,"byte_end":492629,"line_start":212,"line_end":212,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"pub fn LumaA<T: Primitive>([T; ]) -> LumaA<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case, missing_docs)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":488686,"byte_end":488724,"line_start":65,"line_end":65,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492771,"byte_end":492780,"line_start":217,"line_end":217,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":2140}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492699,"byte_end":492760,"line_start":216,"line_end":216,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492870,"byte_end":492880,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"pub fn from_color(&mut Self, &Other)","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492794,"byte_end":492862,"line_start":218,"line_end":218,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":2232},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504414,"byte_end":504419,"line_start":17,"line_end":17,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::buffer::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2254},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2261},{"krate":0,"index":2262}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504289,"byte_end":504313,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504314,"byte_end":504317,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504318,"byte_end":504403,"line_start":16,"line_end":16,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504483,"byte_end":504491,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::buffer::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[{"value":"/ The underlying subpixel type.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504440,"byte_end":504473,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504571,"byte_end":504584,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::buffer::Pixel::channel_count","value":"pub fn channel_count() -> u8","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ Returns the number of channels of this pixel type.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504509,"byte_end":504563,"line_start":21,"line_end":21,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504645,"byte_end":504653,"line_start":25,"line_end":25,"column_start":8,"column_end":16},"name":"channels","qualname":"::buffer::Pixel::channels","value":"pub fn channels(&Self) -> &[Self::Subpixel]","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504599,"byte_end":504637,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504741,"byte_end":504753,"line_start":28,"line_end":28,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::buffer::Pixel::channels_mut","value":"pub fn channels_mut(&mut Self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504688,"byte_end":504733,"line_start":27,"line_end":27,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504924,"byte_end":504935,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"color_model","qualname":"::buffer::Pixel::color_model","value":"pub fn color_model() -> &'static str","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Returns a string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ Returns a string that can help to interpret the meaning each channel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504796,"byte_end":504868,"line_start":30,"line_end":30,"column_start":5,"column_end":77}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504873,"byte_end":504916,"line_start":31,"line_end":31,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505015,"byte_end":505025,"line_start":35,"line_end":35,"column_start":8,"column_end":18},"name":"color_type","qualname":"::buffer::Pixel::color_type","value":"pub fn color_type() -> ColorType","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"/ Returns the ColorType for this pixel format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504960,"byte_end":505007,"line_start":34,"line_end":34,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505231,"byte_end":505240,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"channels4","qualname":"::buffer::Pixel::channels4","value":"pub fn channels4(&Self)\n-> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505047,"byte_end":505112,"line_start":37,"line_end":37,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505117,"byte_end":505192,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505197,"byte_end":505200,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505205,"byte_end":505223,"line_start":40,"line_end":40,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505489,"byte_end":505502,"line_start":47,"line_end":47,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::buffer::Pixel::from_channels","value":"pub fn from_channels(Self::Subpixel, Self::Subpixel, Self::Subpixel,\n                     Self::Subpixel) -> Self","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505322,"byte_end":505378,"line_start":43,"line_end":43,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505383,"byte_end":505450,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505455,"byte_end":505458,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ TODO deprecate","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505463,"byte_end":505481,"line_start":46,"line_end":46,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505817,"byte_end":505827,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::buffer::Pixel::from_slice","value":"pub fn from_slice(&[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505593,"byte_end":505625,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505630,"byte_end":505633,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505638,"byte_end":505722,"line_start":51,"line_end":51,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to present panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505727,"byte_end":505809,"line_start":52,"line_end":52,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506107,"byte_end":506121,"line_start":59,"line_end":59,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::buffer::Pixel::from_slice_mut","value":"pub fn from_slice_mut(&mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505869,"byte_end":505915,"line_start":55,"line_end":55,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505920,"byte_end":505923,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":505928,"byte_end":506012,"line_start":57,"line_end":57,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to present panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506017,"byte_end":506099,"line_start":58,"line_end":58,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506208,"byte_end":506214,"line_start":62,"line_end":62,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::buffer::Pixel::to_rgb","value":"pub fn to_rgb(&Self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506171,"byte_end":506200,"line_start":61,"line_end":61,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506310,"byte_end":506317,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::buffer::Pixel::to_rgba","value":"pub fn to_rgba(&Self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506251,"byte_end":506302,"line_start":64,"line_end":64,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506393,"byte_end":506400,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::buffer::Pixel::to_luma","value":"pub fn to_luma(&Self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506355,"byte_end":506385,"line_start":67,"line_end":67,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506498,"byte_end":506511,"line_start":71,"line_end":71,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::buffer::Pixel::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506438,"byte_end":506490,"line_start":70,"line_end":70,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506619,"byte_end":506622,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"map","qualname":"::buffer::Pixel::map","value":"pub fn map<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506550,"byte_end":506611,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506771,"byte_end":506776,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"apply","qualname":"::buffer::Pixel::apply","value":"pub fn apply<F>(&mut Self, F) where F: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506702,"byte_end":506763,"line_start":76,"line_end":76,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506989,"byte_end":507003,"line_start":81,"line_end":81,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::buffer::Pixel::map_with_alpha","value":"pub fn map_with_alpha<F, G>(&Self, F, G) -> Self where\nF: FnMut(Self::Subpixel) -> Self::Subpixel, G: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506852,"byte_end":506924,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":506929,"byte_end":506981,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507297,"byte_end":507313,"line_start":86,"line_end":86,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::buffer::Pixel::apply_with_alpha","value":"pub fn apply_with_alpha<F, G>(&mut Self, F, G) where F: FnMut(Self::Subpixel)\n-> Self::Subpixel, G: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507144,"byte_end":507216,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507221,"byte_end":507289,"line_start":85,"line_end":85,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507552,"byte_end":507556,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"map2","qualname":"::buffer::Pixel::map2","value":"pub fn map2<F>(&Self, &Self, F) -> Self where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507450,"byte_end":507514,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507519,"byte_end":507544,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507792,"byte_end":507798,"line_start":96,"line_end":96,"column_start":8,"column_end":14},"name":"apply2","qualname":"::buffer::Pixel::apply2","value":"pub fn apply2<F>(&mut Self, &Self, F) where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507674,"byte_end":507738,"line_start":94,"line_end":94,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507743,"byte_end":507784,"line_start":95,"line_end":95,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507941,"byte_end":507947,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"invert","qualname":"::buffer::Pixel::invert","value":"pub fn invert(&mut Self)","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507912,"byte_end":507933,"line_start":99,"line_end":99,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":508058,"byte_end":508063,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"blend","qualname":"::buffer::Pixel::blend","value":"pub fn blend(&mut Self, &Self)","parent":{"krate":0,"index":2232},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":507965,"byte_end":508050,"line_start":102,"line_end":102,"column_start":5,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":508133,"byte_end":508139,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":2266}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":508093,"byte_end":508121,"line_start":106,"line_end":106,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":2282},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":508931,"byte_end":508940,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":2285}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":508883,"byte_end":508919,"line_start":139,"line_end":139,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2301},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":509763,"byte_end":509778,"line_start":171,"line_end":171,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":509714,"byte_end":509751,"line_start":170,"line_end":170,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2317},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":510588,"byte_end":510606,"line_start":203,"line_end":203,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":510539,"byte_end":510576,"line_start":202,"line_end":202,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3562},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":511437,"byte_end":511448,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":3565},{"krate":0,"index":3566},{"krate":0,"index":3567},{"krate":0,"index":3568}],"decl_id":null,"docs":" Generic image buffer\n","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":511384,"byte_end":511408,"line_start":234,"line_end":234,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":511932,"byte_end":511940,"line_start":253,"line_end":253,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"pub fn from_raw(u32, u32, Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":511768,"byte_end":511815,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":511820,"byte_end":511856,"line_start":250,"line_end":250,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":511861,"byte_end":511864,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Returns None if the container is not big enough","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":511869,"byte_end":511920,"line_start":252,"line_end":252,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":512452,"byte_end":512460,"line_start":271,"line_end":271,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"pub fn into_raw(Self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":512403,"byte_end":512440,"line_start":270,"line_end":270,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":512562,"byte_end":512572,"line_start":276,"line_end":276,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":512511,"byte_end":512550,"line_start":275,"line_end":275,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":512681,"byte_end":512686,"line_start":281,"line_end":281,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":512641,"byte_end":512669,"line_start":280,"line_end":280,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":512774,"byte_end":512780,"line_start":286,"line_end":286,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":512733,"byte_end":512762,"line_start":285,"line_end":285,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":512894,"byte_end":512900,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"pub fn pixels(&Self) -> Pixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":512828,"byte_end":512882,"line_start":290,"line_end":290,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2342},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513222,"byte_end":513238,"line_start":302,"line_end":302,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"pub fn enumerate_pixels(&Self) -> EnumeratePixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513068,"byte_end":513112,"line_start":299,"line_end":299,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513117,"byte_end":513170,"line_start":300,"line_end":300,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513175,"byte_end":513210,"line_start":301,"line_end":301,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513584,"byte_end":513593,"line_start":316,"line_end":316,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513418,"byte_end":513472,"line_start":311,"line_end":311,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513477,"byte_end":513480,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513485,"byte_end":513497,"line_start":313,"line_end":313,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513502,"byte_end":513505,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513510,"byte_end":513572,"line_start":315,"line_end":315,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514099,"byte_end":514109,"line_start":331,"line_end":331,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> PixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514025,"byte_end":514087,"line_start":330,"line_end":330,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514453,"byte_end":514473,"line_start":342,"line_end":342,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"pub fn enumerate_pixels_mut(&mut Self) -> EnumeratePixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514291,"byte_end":514335,"line_start":339,"line_end":339,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514340,"byte_end":514393,"line_start":340,"line_end":340,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514398,"byte_end":514441,"line_start":341,"line_end":341,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514868,"byte_end":514881,"line_start":357,"line_end":357,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514694,"byte_end":514756,"line_start":352,"line_end":352,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514761,"byte_end":514764,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514769,"byte_end":514781,"line_start":354,"line_end":354,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514786,"byte_end":514789,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":514794,"byte_end":514856,"line_start":356,"line_end":356,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515318,"byte_end":515327,"line_start":370,"line_end":370,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, P)","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515169,"byte_end":515206,"line_start":365,"line_end":365,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515211,"byte_end":515214,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515219,"byte_end":515231,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515236,"byte_end":515239,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515244,"byte_end":515306,"line_start":369,"line_end":369,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515735,"byte_end":515739,"line_start":382,"line_end":382,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"pub fn save<Q>(&Self, Q) -> io::Result<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515544,"byte_end":515597,"line_start":378,"line_end":378,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515602,"byte_end":515605,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515610,"byte_end":515666,"line_start":380,"line_end":380,"column_start":5,"column_end":61}},{"value":"/ Currently only jpeg and png files are supported.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515671,"byte_end":515723,"line_start":381,"line_end":381,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":519957,"byte_end":519960,"line_start":515,"line_end":515,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"pub fn new(u32, u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.\n","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":519884,"byte_end":519945,"line_start":514,"line_end":514,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":520423,"byte_end":520433,"line_start":529,"line_end":529,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"pub fn from_pixel(u32, u32, P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel\n","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":520360,"byte_end":520411,"line_start":528,"line_end":528,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":520845,"byte_end":520852,"line_start":540,"line_end":540,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"pub fn from_fn<F>(u32, u32, F) -> ImageBuffer<P, Vec<P::Subpixel>> where\nF: FnMut(u32, u32) -> P","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.\n The arguments to the function are the pixel's x and y coordinates.\n","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":520676,"byte_end":520758,"line_start":538,"line_end":538,"column_start":5,"column_end":87}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":520763,"byte_end":520833,"line_start":539,"line_end":539,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521291,"byte_end":521299,"line_start":552,"line_end":552,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"pub fn from_vec(u32, u32, Vec<P::Subpixel>)\n-> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521171,"byte_end":521225,"line_start":550,"line_end":550,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521230,"byte_end":521279,"line_start":551,"line_end":551,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521575,"byte_end":521583,"line_start":559,"line_end":559,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"pub fn into_vec(Self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521475,"byte_end":521536,"line_start":557,"line_end":557,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521541,"byte_end":521563,"line_start":558,"line_end":558,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521711,"byte_end":521724,"line_start":565,"line_end":565,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":2400}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521645,"byte_end":521700,"line_start":564,"line_end":564,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521911,"byte_end":521918,"line_start":570,"line_end":570,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer::ConvertBuffer::convert","value":"pub fn convert(&Self) -> T","parent":{"krate":0,"index":2398},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521734,"byte_end":521775,"line_start":566,"line_end":566,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521780,"byte_end":521783,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ A generic implementation is provided to convert any image buffer to a image buffer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521788,"byte_end":521874,"line_start":568,"line_end":568,"column_start":5,"column_end":91}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521879,"byte_end":521903,"line_start":569,"line_end":569,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":522186,"byte_end":522200,"line_start":578,"line_end":578,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"pub fn expand_palette(Self, &[(u8, u8, u8)], Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521996,"byte_end":522056,"line_start":575,"line_end":575,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":522061,"byte_end":522129,"line_start":576,"line_end":576,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":522134,"byte_end":522174,"line_start":577,"line_end":577,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2411},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":524170,"byte_end":524178,"line_start":630,"line_end":630,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":524131,"byte_end":524160,"line_start":629,"line_end":629,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":2412},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":524267,"byte_end":524276,"line_start":632,"line_end":632,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":524212,"byte_end":524257,"line_start":631,"line_end":631,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":524356,"byte_end":524365,"line_start":634,"line_end":634,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":524311,"byte_end":524346,"line_start":633,"line_end":633,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2414},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":524461,"byte_end":524475,"line_start":636,"line_end":636,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":524400,"byte_end":524451,"line_start":635,"line_end":635,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":2421},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526259,"byte_end":526268,"line_start":10,"line_end":10,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[{"value":"/ Primitive trait from old stdlib","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526213,"byte_end":526248,"line_start":9,"line_end":9,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":2434},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526803,"byte_end":526814,"line_start":40,"line_end":40,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":2435},{"krate":0,"index":2436}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[{"value":"/ An Enlargable::Larger value should be enough to calculate","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526660,"byte_end":526721,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/ the sum (average) of a few hundred or thousand Enlargeable values.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526722,"byte_end":526792,"line_start":39,"line_end":39,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":2435},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526853,"byte_end":526859,"line_start":41,"line_end":41,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Primitive + AddAssign + 'static;","parent":{"krate":0,"index":2434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526902,"byte_end":526912,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"pub fn clamp_from(Self::Larger) -> Self","parent":{"krate":0,"index":2434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2446},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527417,"byte_end":527423,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":2448}],"decl_id":null,"docs":" Holds the frames of the animated image\n","sig":null,"attributes":[{"value":"/ Holds the frames of the animated image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527363,"byte_end":527405,"line_start":5,"line_end":5,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527543,"byte_end":527546,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"pub fn new(Vec<Frame>) -> Frames","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame iterator\n","sig":null,"attributes":[{"value":"/ Contructs a new frame iterator","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527497,"byte_end":527531,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3573},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527729,"byte_end":527734,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":3574},{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":3577}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527672,"byte_end":527700,"line_start":21,"line_end":21,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527941,"byte_end":527944,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"pub fn new(RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527904,"byte_end":527929,"line_start":34,"line_end":34,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528160,"byte_end":528170,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"pub fn from_parts(RgbaImage, u32, u32, Ratio<u16>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528123,"byte_end":528148,"line_start":44,"line_end":44,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528412,"byte_end":528417,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"pub fn delay(&Self) -> Ratio<u16>","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528377,"byte_end":528400,"line_start":54,"line_end":54,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528511,"byte_end":528517,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"pub fn buffer(&Self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528471,"byte_end":528499,"line_start":59,"line_end":59,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528613,"byte_end":528624,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"pub fn into_buffer(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528573,"byte_end":528601,"line_start":64,"line_end":64,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528713,"byte_end":528717,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"pub fn left(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528677,"byte_end":528701,"line_start":69,"line_end":69,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528799,"byte_end":528802,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"pub fn top(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528763,"byte_end":528787,"line_start":74,"line_end":74,"column_start":5,"column_end":29}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":5400,"byte_end":5408,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32792,"byte_end":32799,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":33249,"byte_end":33257,"line_start":208,"line_end":208,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\decoder.rs","byte_start":54272,"byte_end":54283,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\decoder.rs","byte_start":56269,"byte_end":56280,"line_start":96,"line_end":96,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":85128,"byte_end":85138,"line_start":640,"line_end":640,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87401,"byte_end":87411,"line_start":739,"line_end":739,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":89166,"byte_end":89176,"line_start":834,"line_end":834,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\autobreak.rs","byte_start":129671,"byte_end":129680,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\autobreak.rs","byte_start":130854,"byte_end":130863,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\autobreak.rs","byte_start":131487,"byte_end":131496,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":133810,"byte_end":133820,"line_start":47,"line_end":47,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":145128,"byte_end":145137,"line_start":320,"line_end":320,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":145177,"byte_end":145187,"line_start":322,"line_end":322,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":145696,"byte_end":145706,"line_start":344,"line_end":344,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":149122,"byte_end":149131,"line_start":424,"line_end":424,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":149509,"byte_end":149511,"line_start":438,"line_end":438,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":150181,"byte_end":150184,"line_start":461,"line_end":461,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":151145,"byte_end":151151,"line_start":487,"line_end":487,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":152596,"byte_end":152601,"line_start":525,"line_end":525,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":153378,"byte_end":153381,"line_start":549,"line_end":549,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":153498,"byte_end":153501,"line_start":555,"line_end":555,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":153620,"byte_end":153632,"line_start":561,"line_end":561,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":153757,"byte_end":153770,"line_start":567,"line_end":567,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":154139,"byte_end":154151,"line_start":578,"line_end":578,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":154516,"byte_end":154531,"line_start":589,"line_end":589,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":167433,"byte_end":167443,"line_start":76,"line_end":76,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":174664,"byte_end":174682,"line_start":259,"line_end":259,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":175763,"byte_end":175778,"line_start":288,"line_end":288,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":176264,"byte_end":176281,"line_start":306,"line_end":306,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":179329,"byte_end":179347,"line_start":375,"line_end":375,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":181251,"byte_end":181264,"line_start":423,"line_end":423,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":181566,"byte_end":181578,"line_start":436,"line_end":436,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":182959,"byte_end":182970,"line_start":476,"line_end":476,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":184495,"byte_end":184506,"line_start":516,"line_end":516,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":184623,"byte_end":184634,"line_start":522,"line_end":522,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":184734,"byte_end":184747,"line_start":528,"line_end":528,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189803,"byte_end":189813,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":190783,"byte_end":190792,"line_start":161,"line_end":161,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":196488,"byte_end":196497,"line_start":287,"line_end":287,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":196690,"byte_end":196699,"line_start":296,"line_end":296,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":196893,"byte_end":196902,"line_start":305,"line_end":305,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":197097,"byte_end":197106,"line_start":314,"line_end":314,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197849,"byte_end":197859,"line_start":29,"line_end":29,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":198682,"byte_end":198692,"line_start":54,"line_end":54,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":199852,"byte_end":199862,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":200570,"byte_end":200579,"line_start":114,"line_end":114,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":201571,"byte_end":201581,"line_start":142,"line_end":142,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\decoder.rs","byte_start":203430,"byte_end":203440,"line_start":41,"line_end":41,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\decoder.rs","byte_start":205859,"byte_end":205867,"line_start":111,"line_end":111,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\decoder.rs","byte_start":207198,"byte_end":207208,"line_start":160,"line_end":160,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\encoder.rs","byte_start":212403,"byte_end":212413,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":220963,"byte_end":220972,"line_start":167,"line_end":167,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":224051,"byte_end":224062,"line_start":290,"line_end":290,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":239835,"byte_end":239846,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":240756,"byte_end":240767,"line_start":42,"line_end":42,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":242465,"byte_end":242474,"line_start":101,"line_end":101,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":242791,"byte_end":242801,"line_start":112,"line_end":112,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":253303,"byte_end":253310,"line_start":35,"line_end":35,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":254198,"byte_end":254205,"line_start":63,"line_end":63,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":260021,"byte_end":260028,"line_start":215,"line_end":215,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":260459,"byte_end":260469,"line_start":231,"line_end":231,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":283093,"byte_end":283098,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":283941,"byte_end":283946,"line_start":125,"line_end":125,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":284218,"byte_end":284223,"line_start":135,"line_end":135,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":287601,"byte_end":287610,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1267}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":288608,"byte_end":288617,"line_start":71,"line_end":71,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":288757,"byte_end":288766,"line_start":78,"line_end":78,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":289009,"byte_end":289023,"line_start":91,"line_end":91,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":290344,"byte_end":290358,"line_start":132,"line_end":132,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1283}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":290498,"byte_end":290512,"line_start":139,"line_end":139,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":290776,"byte_end":290787,"line_start":153,"line_end":153,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":291036,"byte_end":291047,"line_start":163,"line_end":163,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":291199,"byte_end":291210,"line_start":170,"line_end":170,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":291361,"byte_end":291372,"line_start":177,"line_end":177,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":264249,"byte_end":264260,"line_start":134,"line_end":134,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":275424,"byte_end":275435,"line_start":429,"line_end":429,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":293043,"byte_end":293052,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":294975,"byte_end":294981,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":296389,"byte_end":296397,"line_start":135,"line_end":135,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":297582,"byte_end":297592,"line_start":180,"line_end":180,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":307710,"byte_end":307720,"line_start":450,"line_end":450,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\encoder.rs","byte_start":310140,"byte_end":310150,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":321242,"byte_end":321253,"line_start":90,"line_end":90,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1511},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":329327,"byte_end":329335,"line_start":310,"line_end":310,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":330770,"byte_end":330779,"line_start":354,"line_end":354,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":332022,"byte_end":332037,"line_start":403,"line_end":403,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":333980,"byte_end":333990,"line_start":459,"line_end":459,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":361762,"byte_end":361772,"line_start":1102,"line_end":1102,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":364010,"byte_end":364020,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":364640,"byte_end":364650,"line_start":48,"line_end":48,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366495,"byte_end":366505,"line_start":115,"line_end":115,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1659}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":368548,"byte_end":368558,"line_start":170,"line_end":170,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":374895,"byte_end":374905,"line_start":331,"line_end":331,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":376049,"byte_end":376072,"line_start":366,"line_end":366,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":376366,"byte_end":376389,"line_start":380,"line_end":380,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":378097,"byte_end":378120,"line_start":429,"line_end":429,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384733,"byte_end":384744,"line_start":595,"line_end":595,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":390887,"byte_end":390893,"line_start":734,"line_end":734,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":391153,"byte_end":391159,"line_start":740,"line_end":740,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":394805,"byte_end":394815,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":397699,"byte_end":397710,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":397874,"byte_end":397885,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":398464,"byte_end":398484,"line_start":121,"line_end":121,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":398743,"byte_end":398763,"line_start":131,"line_end":131,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1789},{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410659,"byte_end":410669,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411668,"byte_end":411678,"line_start":70,"line_end":70,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":412881,"byte_end":412891,"line_start":99,"line_end":99,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":414138,"byte_end":414148,"line_start":140,"line_end":140,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":437030,"byte_end":437040,"line_start":42,"line_end":42,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":438123,"byte_end":438133,"line_start":60,"line_end":60,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1905},{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":438809,"byte_end":438819,"line_start":81,"line_end":81,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440883,"byte_end":440900,"line_start":176,"line_end":176,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":444291,"byte_end":444297,"line_start":283,"line_end":283,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":445090,"byte_end":445099,"line_start":316,"line_end":316,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":450581,"byte_end":450589,"line_start":498,"line_end":498,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":451910,"byte_end":451918,"line_start":543,"line_end":543,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":458474,"byte_end":458486,"line_start":99,"line_end":99,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":472381,"byte_end":472393,"line_start":477,"line_end":477,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492960,"byte_end":492961,"line_start":223,"line_end":223,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":493117,"byte_end":493121,"line_start":231,"line_end":231,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":493543,"byte_end":493547,"line_start":242,"line_end":242,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":493970,"byte_end":493974,"line_start":253,"line_end":253,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":494174,"byte_end":494179,"line_start":262,"line_end":262,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":494615,"byte_end":494620,"line_start":274,"line_end":274,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":495059,"byte_end":495064,"line_start":286,"line_end":286,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":495323,"byte_end":495327,"line_start":296,"line_end":296,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":495631,"byte_end":495635,"line_start":308,"line_end":308,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":495936,"byte_end":495940,"line_start":319,"line_end":319,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":496265,"byte_end":496268,"line_start":333,"line_end":333,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2173}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":496539,"byte_end":496542,"line_start":344,"line_end":344,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2176}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":496806,"byte_end":496809,"line_start":354,"line_end":354,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":497177,"byte_end":497182,"line_start":370,"line_end":370,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2184}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":498105,"byte_end":498109,"line_start":395,"line_end":395,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":498219,"byte_end":498223,"line_start":401,"line_end":401,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":500217,"byte_end":500220,"line_start":437,"line_end":437,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":500431,"byte_end":500436,"line_start":449,"line_end":449,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":500613,"byte_end":500617,"line_start":459,"line_end":459,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":500815,"byte_end":500819,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":501034,"byte_end":501037,"line_start":480,"line_end":480,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":508259,"byte_end":508265,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2270},{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":508525,"byte_end":508531,"line_start":122,"line_end":122,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":508676,"byte_end":508682,"line_start":129,"line_end":129,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":509063,"byte_end":509072,"line_start":144,"line_end":144,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":509345,"byte_end":509354,"line_start":155,"line_end":155,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":509497,"byte_end":509506,"line_start":161,"line_end":161,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":509950,"byte_end":509965,"line_start":178,"line_end":178,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2311},{"krate":0,"index":2312}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":510429,"byte_end":510444,"line_start":196,"line_end":196,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":510781,"byte_end":510799,"line_start":210,"line_end":210,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2327},{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":511271,"byte_end":511289,"line_start":228,"line_end":228,"column_start":48,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":511636,"byte_end":511647,"line_start":244,"line_end":244,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513882,"byte_end":513893,"line_start":325,"line_end":325,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515437,"byte_end":515448,"line_start":375,"line_end":375,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":516055,"byte_end":516066,"line_start":392,"line_end":392,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":516327,"byte_end":516338,"line_start":403,"line_end":403,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":516601,"byte_end":516612,"line_start":412,"line_end":412,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2368},{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":516880,"byte_end":516891,"line_start":423,"line_end":423,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":517150,"byte_end":517161,"line_start":433,"line_end":433,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2377}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":517512,"byte_end":517523,"line_start":447,"line_end":447,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":519817,"byte_end":519828,"line_start":511,"line_end":511,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2396},{"krate":0,"index":2397}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521980,"byte_end":521989,"line_start":574,"line_end":574,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":523597,"byte_end":523608,"line_start":613,"line_end":613,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527484,"byte_end":527490,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527892,"byte_end":527897,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528867,"byte_end":528873,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1694,"byte_end":1698,"line_start":114,"line_end":114,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":73}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\mod.rs","byte_start":2596,"byte_end":2601,"line_start":2,"line_end":2,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":74}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\mod.rs","byte_start":2611,"byte_end":2613,"line_start":3,"line_end":3,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":77}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1739,"byte_end":1747,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":115}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\mod.rs","byte_start":17238,"byte_end":17246,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":165}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1799,"byte_end":1803,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":283}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\mod.rs","byte_start":53864,"byte_end":53867,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":323}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1837,"byte_end":1840,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":489}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1880,"byte_end":1883,"line_start":125,"line_end":125,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":826}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1917,"byte_end":1920,"line_start":127,"line_end":127,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":879}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1955,"byte_end":1959,"line_start":129,"line_end":129,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":967}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":1999,"byte_end":2002,"line_start":131,"line_end":131,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1126}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":2037,"byte_end":2041,"line_start":133,"line_end":133,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1189}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":2075,"byte_end":2078,"line_start":135,"line_end":135,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1340}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":2112,"byte_end":2115,"line_start":137,"line_end":137,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1431}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":2149,"byte_end":2152,"line_start":139,"line_end":139,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1618}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src/lib.rs","byte_start":2186,"byte_end":2189,"line_start":141,"line_end":141,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1799}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\math\\nq.rs","byte_start":5400,"byte_end":5408,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":32792,"byte_end":32799,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2475},"to":{"krate":0,"index":200}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\imageops\\colorops.rs","byte_start":33249,"byte_end":33257,"line_start":208,"line_end":208,"column_start":23,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":93},"to":{"krate":0,"index":200}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\decoder.rs","byte_start":54272,"byte_end":54283,"line_start":25,"line_end":25,"column_start":15,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\decoder.rs","byte_start":56269,"byte_end":56280,"line_start":96,"line_end":96,"column_start":32,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":298},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":85128,"byte_end":85138,"line_start":640,"line_end":640,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":87401,"byte_end":87411,"line_start":739,"line_end":739,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\webp\\vp8.rs","byte_start":89166,"byte_end":89176,"line_start":834,"line_end":834,"column_start":15,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\autobreak.rs","byte_start":129671,"byte_end":129680,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\autobreak.rs","byte_start":130854,"byte_end":130863,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":506},"to":{"krate":1,"index":3251}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\autobreak.rs","byte_start":131487,"byte_end":131496,"line_start":77,"line_end":77,"column_start":29,"column_end":38},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":506},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":133810,"byte_end":133820,"line_start":47,"line_end":47,"column_start":15,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":137060,"byte_end":137067,"line_start":132,"line_end":132,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":3275},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":145128,"byte_end":145137,"line_start":320,"line_end":320,"column_start":32,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":2478},"to":{"krate":0,"index":578}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":145177,"byte_end":145187,"line_start":322,"line_end":322,"column_start":32,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":565},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":145696,"byte_end":145706,"line_start":344,"line_end":344,"column_start":15,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":149122,"byte_end":149131,"line_start":424,"line_end":424,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":149509,"byte_end":149511,"line_start":438,"line_end":438,"column_start":17,"column_end":19},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":555},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":150181,"byte_end":150184,"line_start":461,"line_end":461,"column_start":17,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":557},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":151145,"byte_end":151151,"line_start":487,"line_end":487,"column_start":17,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":559},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":152596,"byte_end":152601,"line_start":525,"line_end":525,"column_start":17,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":561},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":153378,"byte_end":153381,"line_start":549,"line_end":549,"column_start":31,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":5,"index":5357},"to":{"krate":2,"index":1994}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":153498,"byte_end":153501,"line_start":555,"line_end":555,"column_start":31,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":5357},"to":{"krate":2,"index":1994}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":153620,"byte_end":153632,"line_start":561,"line_end":561,"column_start":31,"column_end":43},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2608},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":153757,"byte_end":153770,"line_start":567,"line_end":567,"column_start":31,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2617},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":154139,"byte_end":154151,"line_start":578,"line_end":578,"column_start":31,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2627},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\decoder.rs","byte_start":154516,"byte_end":154531,"line_start":589,"line_end":589,"column_start":31,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2637},"to":{"krate":0,"index":563}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":167433,"byte_end":167443,"line_start":76,"line_end":76,"column_start":16,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":174664,"byte_end":174682,"line_start":259,"line_end":259,"column_start":10,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":175763,"byte_end":175778,"line_start":288,"line_end":288,"column_start":10,"column_end":25},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":176264,"byte_end":176281,"line_start":306,"line_end":306,"column_start":10,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":179329,"byte_end":179347,"line_start":375,"line_end":375,"column_start":10,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":181251,"byte_end":181264,"line_start":423,"line_end":423,"column_start":10,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":181566,"byte_end":181578,"line_start":436,"line_end":436,"column_start":10,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":182959,"byte_end":182970,"line_start":476,"line_end":476,"column_start":10,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":184495,"byte_end":184506,"line_start":516,"line_end":516,"column_start":28,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2555},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":184623,"byte_end":184634,"line_start":522,"line_end":522,"column_start":29,"column_end":40},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2555},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\encoder.rs","byte_start":184734,"byte_end":184747,"line_start":528,"line_end":528,"column_start":10,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":189803,"byte_end":189813,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":190783,"byte_end":190792,"line_start":161,"line_end":161,"column_start":6,"column_end":15},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":196488,"byte_end":196497,"line_start":287,"line_end":287,"column_start":29,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":196690,"byte_end":196699,"line_start":296,"line_end":296,"column_start":30,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":196893,"byte_end":196902,"line_start":305,"line_end":305,"column_start":29,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\pnm\\header.rs","byte_start":197097,"byte_end":197106,"line_start":314,"line_end":314,"column_start":32,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":197849,"byte_end":197859,"line_start":29,"line_end":29,"column_start":15,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":198682,"byte_end":198692,"line_start":54,"line_end":54,"column_start":32,"column_end":42},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":848},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":199852,"byte_end":199862,"line_start":94,"line_end":94,"column_start":16,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":200570,"byte_end":200579,"line_start":114,"line_end":114,"column_start":48,"column_end":57},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3247},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\png.rs","byte_start":201571,"byte_end":201581,"line_start":142,"line_end":142,"column_start":35,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3141},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\decoder.rs","byte_start":203430,"byte_end":203440,"line_start":41,"line_end":41,"column_start":22,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\decoder.rs","byte_start":205859,"byte_end":205867,"line_start":111,"line_end":111,"column_start":6,"column_end":14},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\decoder.rs","byte_start":207198,"byte_end":207208,"line_start":160,"line_end":160,"column_start":39,"column_end":49},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":901},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\ico\\encoder.rs","byte_start":212403,"byte_end":212413,"line_start":20,"line_end":20,"column_start":16,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":220963,"byte_end":220972,"line_start":167,"line_end":167,"column_start":25,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\encoder.rs","byte_start":224051,"byte_end":224062,"line_start":290,"line_end":290,"column_start":20,"column_end":31},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":239835,"byte_end":239846,"line_start":14,"line_end":14,"column_start":15,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":240756,"byte_end":240767,"line_start":42,"line_end":42,"column_start":32,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1085},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":242465,"byte_end":242474,"line_start":101,"line_end":101,"column_start":42,"column_end":51},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3247},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\jpeg\\decoder.rs","byte_start":242791,"byte_end":242801,"line_start":112,"line_end":112,"column_start":36,"column_end":46},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3141},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":253303,"byte_end":253310,"line_start":35,"line_end":35,"column_start":15,"column_end":22},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":254198,"byte_end":254205,"line_start":63,"line_end":63,"column_start":32,"column_end":39},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1162},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":260021,"byte_end":260028,"line_start":215,"line_end":215,"column_start":16,"column_end":23},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\gif.rs","byte_start":260459,"byte_end":260469,"line_start":231,"line_end":231,"column_start":35,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3141},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":283093,"byte_end":283098,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":283941,"byte_end":283946,"line_start":125,"line_end":125,"column_start":28,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1235},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\ifd.rs","byte_start":284218,"byte_end":284223,"line_start":135,"line_end":135,"column_start":6,"column_end":11},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":286712,"byte_end":286716,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":3190},"to":{"krate":0,"index":1259}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":287601,"byte_end":287610,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":288608,"byte_end":288617,"line_start":71,"line_end":71,"column_start":15,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1263},"to":{"krate":1,"index":3190}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":288757,"byte_end":288766,"line_start":78,"line_end":78,"column_start":23,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1263},"to":{"krate":0,"index":1259}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":289009,"byte_end":289023,"line_start":91,"line_end":91,"column_start":6,"column_end":20},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":290344,"byte_end":290358,"line_start":132,"line_end":132,"column_start":15,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1273},"to":{"krate":1,"index":3190}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":290498,"byte_end":290512,"line_start":139,"line_end":139,"column_start":23,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1273},"to":{"krate":0,"index":1259}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":290776,"byte_end":290787,"line_start":153,"line_end":153,"column_start":9,"column_end":20},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":291036,"byte_end":291047,"line_start":163,"line_end":163,"column_start":26,"column_end":37},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2832},"to":{"krate":0,"index":1259}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":291199,"byte_end":291210,"line_start":170,"line_end":170,"column_start":31,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2832},"to":{"krate":1,"index":3190}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\stream.rs","byte_start":291361,"byte_end":291372,"line_start":177,"line_end":177,"column_start":31,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2832},"to":{"krate":1,"index":3269}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":264249,"byte_end":264260,"line_start":134,"line_end":134,"column_start":22,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tiff\\decoder\\mod.rs","byte_start":275424,"byte_end":275435,"line_start":429,"line_end":429,"column_start":39,"column_end":50},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2943},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":293043,"byte_end":293052,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":294975,"byte_end":294981,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":296389,"byte_end":296397,"line_start":135,"line_end":135,"column_start":6,"column_end":14},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":297582,"byte_end":297592,"line_start":180,"line_end":180,"column_start":22,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\tga\\decoder.rs","byte_start":307710,"byte_end":307720,"line_start":450,"line_end":450,"column_start":39,"column_end":49},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1394},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\encoder.rs","byte_start":310140,"byte_end":310150,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":321242,"byte_end":321253,"line_start":90,"line_end":90,"column_start":23,"column_end":34},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1506},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":329327,"byte_end":329335,"line_start":310,"line_end":310,"column_start":6,"column_end":14},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":330770,"byte_end":330779,"line_start":354,"line_end":354,"column_start":6,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":332022,"byte_end":332037,"line_start":403,"line_end":403,"column_start":32,"column_end":47},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1572},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":333980,"byte_end":333990,"line_start":459,"line_end":459,"column_start":22,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\bmp\\decoder.rs","byte_start":361762,"byte_end":361772,"line_start":1102,"line_end":1102,"column_start":39,"column_end":49},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1539},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":364010,"byte_end":364020,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":364640,"byte_end":364650,"line_start":48,"line_end":48,"column_start":35,"column_end":45},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3053},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":366495,"byte_end":366505,"line_start":115,"line_end":115,"column_start":6,"column_end":16},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":368548,"byte_end":368558,"line_start":170,"line_end":170,"column_start":18,"column_end":28},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":374895,"byte_end":374905,"line_start":331,"line_end":331,"column_start":35,"column_end":45},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3060},"to":{"krate":2,"index":5536}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":376049,"byte_end":376072,"line_start":366,"line_end":366,"column_start":18,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":376366,"byte_end":376389,"line_start":380,"line_end":380,"column_start":31,"column_end":54},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1682},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":378097,"byte_end":378120,"line_start":429,"line_end":429,"column_start":40,"column_end":63},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1682},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":384733,"byte_end":384744,"line_start":595,"line_end":595,"column_start":6,"column_end":17},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":390887,"byte_end":390893,"line_start":734,"line_end":734,"column_start":46,"column_end":52},"kind":{"Impl":{"id":105}},"from":{"krate":2,"index":34807},"to":{"krate":0,"index":1723}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_decoder.rs","byte_start":391153,"byte_end":391159,"line_start":740,"line_end":740,"column_start":46,"column_end":52},"kind":{"Impl":{"id":106}},"from":{"krate":2,"index":34807},"to":{"krate":0,"index":1723}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":394805,"byte_end":394815,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1756},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":397699,"byte_end":397710,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":397874,"byte_end":397885,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1768},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":398464,"byte_end":398484,"line_start":121,"line_end":121,"column_start":10,"column_end":30},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\hdr\\hdr_encoder.rs","byte_start":398743,"byte_end":398763,"line_start":131,"line_end":131,"column_start":23,"column_end":43},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1780},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":410659,"byte_end":410669,"line_start":31,"line_end":31,"column_start":6,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":411668,"byte_end":411678,"line_start":70,"line_end":70,"column_start":16,"column_end":26},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":412881,"byte_end":412891,"line_start":99,"line_end":99,"column_start":33,"column_end":43},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1813},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dxt.rs","byte_start":414138,"byte_end":414148,"line_start":140,"line_end":140,"column_start":17,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":437030,"byte_end":437040,"line_start":42,"line_end":42,"column_start":23,"column_end":33},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3141},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":438123,"byte_end":438133,"line_start":60,"line_end":60,"column_start":16,"column_end":26},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3141},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":438809,"byte_end":438819,"line_start":81,"line_end":81,"column_start":26,"column_end":36},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3141},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":440883,"byte_end":440900,"line_start":176,"line_end":176,"column_start":28,"column_end":45},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3203},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":441756,"byte_end":441761,"line_start":198,"line_end":198,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1921}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":444291,"byte_end":444297,"line_start":283,"line_end":283,"column_start":40,"column_end":46},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1930},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":445090,"byte_end":445099,"line_start":316,"line_end":316,"column_start":45,"column_end":54},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":445997,"byte_end":446002,"line_start":349,"line_end":349,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1956}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":450581,"byte_end":450589,"line_start":498,"line_end":498,"column_start":37,"column_end":45},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\image.rs","byte_start":451910,"byte_end":451918,"line_start":543,"line_end":543,"column_start":54,"column_end":62},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1974},"to":{"krate":0,"index":1956}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":458474,"byte_end":458486,"line_start":99,"line_end":99,"column_start":6,"column_end":18},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\dynimage.rs","byte_start":472381,"byte_end":472393,"line_start":477,"line_end":477,"column_start":23,"column_end":35},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3232},"to":{"krate":0,"index":1956}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":492960,"byte_end":492961,"line_start":223,"line_end":223,"column_start":32,"column_end":33},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2142},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":493117,"byte_end":493121,"line_start":231,"line_end":231,"column_start":53,"column_end":57},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3478},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":493543,"byte_end":493547,"line_start":242,"line_end":242,"column_start":52,"column_end":56},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3478},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":493970,"byte_end":493974,"line_start":253,"line_end":253,"column_start":54,"column_end":58},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3478},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":494174,"byte_end":494179,"line_start":262,"line_end":262,"column_start":53,"column_end":58},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3534},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":494615,"byte_end":494620,"line_start":274,"line_end":274,"column_start":52,"column_end":57},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3534},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":495059,"byte_end":495064,"line_start":286,"line_end":286,"column_start":53,"column_end":58},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3534},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":495323,"byte_end":495327,"line_start":296,"line_end":296,"column_start":52,"column_end":56},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3506},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":495631,"byte_end":495635,"line_start":308,"line_end":308,"column_start":54,"column_end":58},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3506},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":495936,"byte_end":495940,"line_start":319,"line_end":319,"column_start":53,"column_end":57},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3506},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":496265,"byte_end":496268,"line_start":333,"line_end":333,"column_start":53,"column_end":56},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3450},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":496539,"byte_end":496542,"line_start":344,"line_end":344,"column_start":54,"column_end":57},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3450},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":496806,"byte_end":496809,"line_start":354,"line_end":354,"column_start":53,"column_end":56},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3450},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":497177,"byte_end":497182,"line_start":370,"line_end":370,"column_start":30,"column_end":35},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3534},"to":{"krate":0,"index":2180}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":498105,"byte_end":498109,"line_start":395,"line_end":395,"column_start":30,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3478},"to":{"krate":0,"index":2180}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":498219,"byte_end":498223,"line_start":401,"line_end":401,"column_start":30,"column_end":34},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3506},"to":{"krate":0,"index":2180}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":500217,"byte_end":500220,"line_start":437,"line_end":437,"column_start":30,"column_end":33},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3450},"to":{"krate":0,"index":2180}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":500431,"byte_end":500436,"line_start":449,"line_end":449,"column_start":31,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3534},"to":{"krate":0,"index":2194}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":500613,"byte_end":500617,"line_start":459,"line_end":459,"column_start":31,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3478},"to":{"krate":0,"index":2194}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":500815,"byte_end":500819,"line_start":470,"line_end":470,"column_start":31,"column_end":35},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3506},"to":{"krate":0,"index":2194}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\color.rs","byte_start":501034,"byte_end":501037,"line_start":480,"line_end":480,"column_start":31,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3450},"to":{"krate":0,"index":2194}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504421,"byte_end":504425,"line_start":17,"line_end":17,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":2232}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":504428,"byte_end":504433,"line_start":17,"line_end":17,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":2232}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":508259,"byte_end":508265,"line_start":111,"line_end":111,"column_start":38,"column_end":44},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2263},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":508525,"byte_end":508531,"line_start":122,"line_end":122,"column_start":47,"column_end":53},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2263},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":508676,"byte_end":508682,"line_start":129,"line_end":129,"column_start":49,"column_end":55},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2263},"to":{"krate":2,"index":5559}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":509063,"byte_end":509072,"line_start":144,"line_end":144,"column_start":38,"column_end":47},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":509345,"byte_end":509354,"line_start":155,"line_end":155,"column_start":48,"column_end":57},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":509497,"byte_end":509506,"line_start":161,"line_end":161,"column_start":49,"column_end":58},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":5559}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":509950,"byte_end":509965,"line_start":178,"line_end":178,"column_start":38,"column_end":53},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":510429,"byte_end":510444,"line_start":196,"line_end":196,"column_start":48,"column_end":63},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":510781,"byte_end":510799,"line_start":210,"line_end":210,"column_start":38,"column_end":56},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2317},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":511271,"byte_end":511289,"line_start":228,"line_end":228,"column_start":48,"column_end":66},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2317},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":511636,"byte_end":511647,"line_start":244,"line_end":244,"column_start":20,"column_end":31},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":513882,"byte_end":513893,"line_start":325,"line_end":325,"column_start":20,"column_end":31},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":515437,"byte_end":515448,"line_start":375,"line_end":375,"column_start":20,"column_end":31},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":516055,"byte_end":516066,"line_start":392,"line_end":392,"column_start":30,"column_end":41},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3562},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":516327,"byte_end":516338,"line_start":403,"line_end":403,"column_start":33,"column_end":44},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3562},"to":{"krate":2,"index":2294}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":516601,"byte_end":516612,"line_start":412,"line_end":412,"column_start":42,"column_end":53},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3562},"to":{"krate":2,"index":2362}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":516880,"byte_end":516891,"line_start":423,"line_end":423,"column_start":45,"column_end":56},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3562},"to":{"krate":2,"index":2366}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":517150,"byte_end":517161,"line_start":433,"line_end":433,"column_start":30,"column_end":41},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3562},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":517512,"byte_end":517523,"line_start":447,"line_end":447,"column_start":37,"column_end":48},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3562},"to":{"krate":0,"index":1956}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":519817,"byte_end":519828,"line_start":511,"line_end":511,"column_start":26,"column_end":37},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":521980,"byte_end":521989,"line_start":574,"line_end":574,"column_start":6,"column_end":15},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\buffer.rs","byte_start":523597,"byte_end":523608,"line_start":613,"line_end":613,"column_start":9,"column_end":20},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3562},"to":{"krate":0,"index":2398}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526270,"byte_end":526274,"line_start":10,"line_end":10,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526277,"byte_end":526284,"line_start":10,"line_end":10,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":16,"index":175},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526287,"byte_end":526290,"line_start":10,"line_end":10,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":16,"index":615},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526293,"byte_end":526303,"line_start":10,"line_end":10,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":1841},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526312,"byte_end":526317,"line_start":10,"line_end":10,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":1770},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526320,"byte_end":526327,"line_start":10,"line_end":10,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":16,"index":92},"to":{"krate":0,"index":2421}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526816,"byte_end":526821,"line_start":40,"line_end":40,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":2434}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526824,"byte_end":526831,"line_start":40,"line_end":40,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":16,"index":92},"to":{"krate":0,"index":2434}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\traits.rs","byte_start":526834,"byte_end":526841,"line_start":40,"line_end":40,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":16,"index":175},"to":{"krate":0,"index":2434}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527484,"byte_end":527490,"line_start":11,"line_end":11,"column_start":6,"column_end":12},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":527892,"byte_end":527897,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.19.0\\./src\\animation.rs","byte_start":528867,"byte_end":528873,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2446},"to":{"krate":2,"index":5632}}]}