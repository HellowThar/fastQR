{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0","program":"C:\\Users\\Jamison\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","qrcode","--edition=2018","C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"image\"","--cfg","feature=\"svg\"","-C","metadata=48cff211de8e3392","-C","extra-filename=-48cff211de8e3392","--out-dir","c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps","--extern","checked_int_cast=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libchecked_int_cast-a0c6b7ab175adb98.rmeta","--extern","image=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libimage-b57db092b851c757.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Jamison\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libqrcode-48cff211de8e3392.rmeta"},"prelude":{"crate_id":{"name":"qrcode","disambiguator":[12187114770199306675,10119123255735175666]},"crate_root":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src","external_crates":[{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\cast.rs","num":13,"id":{"name":"checked_int_cast","disambiguator":[7029587377125741506,8500612055655912128]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":14,"id":{"name":"image","disambiguator":[14521398897518103672,12081468330166783709]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":15,"id":{"name":"tiff","disambiguator":[2545423236772816474,5410012504669701896]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":16,"id":{"name":"jpeg_decoder","disambiguator":[7970296436548162331,3571226119283212571]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":17,"id":{"name":"rayon","disambiguator":[16513322538026779094,11801168641105093997]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":18,"id":{"name":"either","disambiguator":[4926871542712679437,11777597642654868815]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":19,"id":{"name":"rayon_core","disambiguator":[3217629325730123576,5417067783944648560]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":20,"id":{"name":"crossbeam_channel","disambiguator":[2956449328913573331,18068975129897325229]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":21,"id":{"name":"cfg_if","disambiguator":[5645197522646515231,12829599349970567115]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":22,"id":{"name":"crossbeam_utils","disambiguator":[15817631178772822294,6736719387789155103]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":23,"id":{"name":"lazy_static","disambiguator":[10336935334542864265,8017296924341794806]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":24,"id":{"name":"crossbeam_deque","disambiguator":[12583441330635860881,5863646986712684575]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":25,"id":{"name":"crossbeam_epoch","disambiguator":[4571157764881056637,15976608447111096558]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":26,"id":{"name":"scopeguard","disambiguator":[429372990002042441,15390206183276144831]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":27,"id":{"name":"memoffset","disambiguator":[3970154280437347038,15246041295084614295]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":28,"id":{"name":"num_cpus","disambiguator":[14864963375272620296,8147215962498545620]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":29,"id":{"name":"miniz_oxide","disambiguator":[2206102512789544062,12002664317934285790]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":30,"id":{"name":"adler","disambiguator":[7796817094991044641,16964005487763211159]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":31,"id":{"name":"weezl","disambiguator":[11626711031811231585,2261120494736795986]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":32,"id":{"name":"num_traits","disambiguator":[4993267418457121021,12381701421445213156]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":33,"id":{"name":"byteorder","disambiguator":[14017159674203571698,6368851971258358934]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":34,"id":{"name":"gif","disambiguator":[14946473099670261578,554601431095825751]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":35,"id":{"name":"color_quant","disambiguator":[15476471970387349106,2697579332012082017]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":36,"id":{"name":"num_rational","disambiguator":[13832570934133463407,15618275727968524083]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":37,"id":{"name":"num_integer","disambiguator":[14814270028788137393,13875721128492910534]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":38,"id":{"name":"scoped_threadpool","disambiguator":[17345774330985584260,5977804670916618321]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":39,"id":{"name":"num_iter","disambiguator":[4275207641917423135,9882223391826164968]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":40,"id":{"name":"png","disambiguator":[9145171776281602206,11246802142062418959]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":41,"id":{"name":"bitflags","disambiguator":[5710033096448610905,11540835774118402762]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":42,"id":{"name":"deflate","disambiguator":[16187830477650165442,8597015852117943953]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":43,"id":{"name":"adler32","disambiguator":[5664971475563171165,1749485914846394955]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":44,"id":{"name":"crc32fast","disambiguator":[14961140341927460512,18356436860488135935]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":45,"id":{"name":"miniz_oxide","disambiguator":[9532599488803415041,18357409623720345081]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","num":46,"id":{"name":"bytemuck","disambiguator":[17595205306081184133,16866027690001833]}}],"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":0,"byte_end":12992,"line_start":1,"line_end":373,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1262,"byte_end":1267,"line_start":48,"line_end":48,"column_start":24,"column_end":29},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1269,"byte_end":1276,"line_start":48,"line_end":48,"column_start":31,"column_end":38},"alias_span":null,"name":"EcLevel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1278,"byte_end":1286,"line_start":48,"line_end":48,"column_start":40,"column_end":48},"alias_span":null,"name":"QrResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1288,"byte_end":1295,"line_start":48,"line_end":48,"column_start":50,"column_end":57},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":0,"byte_end":12992,"line_start":1,"line_end":373,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":67},{"krate":0,"index":173},{"krate":0,"index":196},{"krate":0,"index":223},{"krate":0,"index":276},{"krate":0,"index":428},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":864},{"krate":0,"index":869},{"krate":0,"index":473},{"krate":0,"index":495}],"decl_id":null,"docs":" QRCode encoder","sig":null,"attributes":[{"value":"/ QRCode encoder","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":0,"byte_end":18,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":19,"byte_end":22,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides a QR code and Micro QR code encoder for binary data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":23,"byte_end":99,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":100,"byte_end":103,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ use qrcode::QrCode;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":209,"byte_end":232,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/ use image::Luma;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":233,"byte_end":253,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":254,"byte_end":257,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ // Encode some data into bits.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":258,"byte_end":292,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"/ let code = QrCode::new(b\"01234567\").unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":293,"byte_end":342,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":343,"byte_end":346,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // Render the bits into an image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":347,"byte_end":384,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/ let image = code.render::<Luma<u8>>().build();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":385,"byte_end":435,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":436,"byte_end":439,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ // Save the image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":440,"byte_end":462,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ # if cfg!(unix) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":463,"byte_end":484,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/ image.save(\"/tmp/qrcode.png\").unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":485,"byte_end":528,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":529,"byte_end":536,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":537,"byte_end":540,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ // You can also render it into a string.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":541,"byte_end":585,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ let string = code.render()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":586,"byte_end":616,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/     .light_color(' ')","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":617,"byte_end":642,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/     .dark_color('#')","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":643,"byte_end":667,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/     .build();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":668,"byte_end":685,"line_start":25,"line_end":25,"column_start":1,"column_end":18}},{"value":"/ println!(\"{}\", string);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":686,"byte_end":713,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":714,"byte_end":721,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"deny(warnings, clippy :: pedantic)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":806,"byte_end":842,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"allow(clippy :: must_use_candidate, clippy :: use_self,)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":843,"byte_end":1008,"line_start":31,"line_end":34,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bits","qualname":"::bits","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":24},{"krate":0,"index":498},{"krate":0,"index":512},{"krate":0,"index":510},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" The `bits` module encodes binary data into raw bits used in a QR code.\n","sig":null,"attributes":[{"value":"/ The `bits` module encodes binary data into raw bits used in a QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":12994,"byte_end":13068,"line_start":1,"line_end":1,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":13471,"byte_end":13475,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"Bits","qualname":"::bits::Bits","value":"Bits {  }","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23}],"decl_id":null,"docs":" The `Bits` structure stores the encoded data for a QR code.\n","sig":null,"attributes":[{"value":"/ The `Bits` structure stores the encoded data for a QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":13396,"byte_end":13459,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":13616,"byte_end":13619,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<Bits>::new","value":"pub fn new(Version) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty bits structure.\n","sig":null,"attributes":[{"value":"/ Constructs a new, empty bits structure.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":13561,"byte_end":13604,"line_start":23,"line_end":23,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":15882,"byte_end":15892,"line_start":82,"line_end":82,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<Bits>::into_bytes","value":"pub fn into_bytes(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Convert the bits into a bytes vector.\n","sig":null,"attributes":[{"value":"/ Convert the bits into a bytes vector.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":15829,"byte_end":15870,"line_start":81,"line_end":81,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":15995,"byte_end":15998,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"len","qualname":"<Bits>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Total number of bits currently pushed.\n","sig":null,"attributes":[{"value":"/ Total number of bits currently pushed.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":15941,"byte_end":15983,"line_start":86,"line_end":86,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16227,"byte_end":16235,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Bits>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether there are any bits pushed.\n","sig":null,"attributes":[{"value":"/ Whether there are any bits pushed.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16177,"byte_end":16215,"line_start":95,"line_end":95,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16616,"byte_end":16623,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"max_len","qualname":"<Bits>::max_len","value":"pub fn max_len(&Self, EcLevel) -> QrResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of bits allowed by the provided QR code version and\n error correction level.","sig":null,"attributes":[{"value":"/ The maximum number of bits allowed by the provided QR code version and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16293,"byte_end":16367,"line_start":100,"line_end":100,"column_start":5,"column_end":79}},{"value":"/ error correction level.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16372,"byte_end":16399,"line_start":101,"line_end":101,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16404,"byte_end":16407,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16412,"byte_end":16424,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16429,"byte_end":16432,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QrError::InvalidVersion)` if it is not valid to use the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16437,"byte_end":16509,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ `ec_level` for the given version (e.g. `Version::Micro(1)` with","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16514,"byte_end":16581,"line_start":106,"line_end":106,"column_start":5,"column_end":72}},{"value":"/ `EcLevel::H`).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16586,"byte_end":16604,"line_start":107,"line_end":107,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16773,"byte_end":16780,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"version","qualname":"<Bits>::version","value":"pub fn version(&Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Version of the QR code.\n","sig":null,"attributes":[{"value":"/ Version of the QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":16734,"byte_end":16761,"line_start":112,"line_end":112,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18365,"byte_end":18368,"line_start":170,"line_end":170,"column_start":5,"column_end":8},"name":"Eci","qualname":"::bits::ExtendedMode::Eci","value":"ExtendedMode::Eci","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" ECI mode indicator, to introduce an ECI designator.\n","sig":null,"attributes":[{"value":"/ ECI mode indicator, to introduce an ECI designator.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18305,"byte_end":18360,"line_start":169,"line_end":169,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18418,"byte_end":18422,"line_start":173,"line_end":173,"column_start":5,"column_end":9},"name":"Data","qualname":"::bits::ExtendedMode::Data","value":"ExtendedMode::Data(Mode)","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" The normal mode to introduce data.\n","sig":null,"attributes":[{"value":"/ The normal mode to introduce data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18375,"byte_end":18413,"line_start":172,"line_end":172,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18477,"byte_end":18486,"line_start":176,"line_end":176,"column_start":5,"column_end":14},"name":"Fnc1First","qualname":"::bits::ExtendedMode::Fnc1First","value":"ExtendedMode::Fnc1First","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" FNC-1 mode in the first position.\n","sig":null,"attributes":[{"value":"/ FNC-1 mode in the first position.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18435,"byte_end":18472,"line_start":175,"line_end":175,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18536,"byte_end":18546,"line_start":179,"line_end":179,"column_start":5,"column_end":15},"name":"Fnc1Second","qualname":"::bits::ExtendedMode::Fnc1Second","value":"ExtendedMode::Fnc1Second","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" FNC-1 mode in the second position.\n","sig":null,"attributes":[{"value":"/ FNC-1 mode in the second position.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18493,"byte_end":18531,"line_start":178,"line_end":178,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18580,"byte_end":18596,"line_start":182,"line_end":182,"column_start":5,"column_end":21},"name":"StructuredAppend","qualname":"::bits::ExtendedMode::StructuredAppend","value":"ExtendedMode::StructuredAppend","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" Structured append.\n","sig":null,"attributes":[{"value":"/ Structured append.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18553,"byte_end":18575,"line_start":181,"line_end":181,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18286,"byte_end":18298,"line_start":168,"line_end":168,"column_start":10,"column_end":22},"name":"ExtendedMode","qualname":"::bits::ExtendedMode","value":"pub enum ExtendedMode {\n\n    /// ECI mode indicator, to introduce an ECI designator.\n    Eci,\n\n    /// The normal mode to introduce data.\n    Data(Mode),\n\n    /// FNC-1 mode in the first position.\n    Fnc1First,\n\n    /// FNC-1 mode in the second position.\n    Fnc1Second,\n\n    /// Structured append.\n    StructuredAppend,\n}","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508}],"decl_id":null,"docs":" An \"extended\" mode indicator, includes all indicators supported by QR code\n beyond those bearing data.\n","sig":null,"attributes":[{"value":"/ An \"extended\" mode indicator, includes all indicators supported by QR code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18144,"byte_end":18222,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ beyond those bearing data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18223,"byte_end":18253,"line_start":166,"line_end":166,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18844,"byte_end":18863,"line_start":192,"line_end":192,"column_start":12,"column_end":31},"name":"push_mode_indicator","qualname":"<Bits>::push_mode_indicator","value":"pub fn push_mode_indicator(&mut Self, ExtendedMode) -> QrResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Push the mode indicator to the end of the bits.","sig":null,"attributes":[{"value":"/ Push the mode indicator to the end of the bits.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18617,"byte_end":18668,"line_start":186,"line_end":186,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18673,"byte_end":18676,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18681,"byte_end":18693,"line_start":188,"line_end":188,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18698,"byte_end":18701,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If the mode is not supported in the provided version, this method","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18706,"byte_end":18775,"line_start":190,"line_end":190,"column_start":5,"column_end":74}},{"value":"/ returns `Err(QrError::UnsupportedCharacterSet)`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18780,"byte_end":18832,"line_start":191,"line_end":191,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21728,"byte_end":21747,"line_start":257,"line_end":257,"column_start":12,"column_end":31},"name":"push_eci_designator","qualname":"<Bits>::push_eci_designator","value":"pub fn push_eci_designator(&mut Self, u32) -> QrResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Push an ECI (Extended Channel Interpretation) designator to the bits.","sig":null,"attributes":[{"value":"/ Push an ECI (Extended Channel Interpretation) designator to the bits.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20204,"byte_end":20277,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20282,"byte_end":20285,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ An ECI designator is a 6-digit number to specify the character set of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20290,"byte_end":20363,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/ the following binary data. After calling this method, one could call","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20368,"byte_end":20440,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ `.push_byte_data()` or similar methods to insert the actual data, e.g.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20445,"byte_end":20519,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20524,"byte_end":20527,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/     #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20532,"byte_end":20566,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20571,"byte_end":20574,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/     use qrcode::bits::Bits;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20579,"byte_end":20610,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/     use qrcode::types::Version;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20615,"byte_end":20650,"line_start":229,"line_end":229,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20655,"byte_end":20658,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/     let mut bits = Bits::new(Version::Normal(1));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20663,"byte_end":20716,"line_start":231,"line_end":231,"column_start":5,"column_end":58}},{"value":"/     bits.push_eci_designator(9); // 9 = ISO-8859-7 (Greek).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20721,"byte_end":20784,"line_start":232,"line_end":232,"column_start":5,"column_end":68}},{"value":"/     bits.push_byte_data(b\"\\xa1\\xa2\\xa3\\xa4\\xa5\"); // ΑΒΓΔΕ","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20789,"byte_end":20856,"line_start":233,"line_end":233,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20861,"byte_end":20864,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20869,"byte_end":20872,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The full list of ECI designator values can be found from","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20877,"byte_end":20937,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/ <http://strokescribe.com/en/ECI.html>. Some example values are:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20942,"byte_end":21009,"line_start":237,"line_end":237,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21014,"byte_end":21017,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ECI # | Character set","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21022,"byte_end":21047,"line_start":239,"line_end":239,"column_start":5,"column_end":30}},{"value":"/ ------|-------------------------------------","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21052,"byte_end":21100,"line_start":240,"line_end":240,"column_start":5,"column_end":53}},{"value":"/ 3     | ISO-8859-1 (Western European)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21105,"byte_end":21146,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/ 20    | Shift JIS (Japanese)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21151,"byte_end":21183,"line_start":242,"line_end":242,"column_start":5,"column_end":37}},{"value":"/ 23    | Windows 1252 (Latin 1) (Western European)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21188,"byte_end":21241,"line_start":243,"line_end":243,"column_start":5,"column_end":58}},{"value":"/ 25    | UTF-16 Big Endian","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21246,"byte_end":21275,"line_start":244,"line_end":244,"column_start":5,"column_end":34}},{"value":"/ 26    | UTF-8","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21280,"byte_end":21297,"line_start":245,"line_end":245,"column_start":5,"column_end":22}},{"value":"/ 28    | Big 5 (Traditional Chinese)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21302,"byte_end":21341,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/ 29    | GB-18030 (Simplified Chinese)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21346,"byte_end":21387,"line_start":247,"line_end":247,"column_start":5,"column_end":46}},{"value":"/ 30    | EUC-KR (Korean)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21392,"byte_end":21419,"line_start":248,"line_end":248,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21424,"byte_end":21427,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21432,"byte_end":21444,"line_start":250,"line_end":250,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21449,"byte_end":21452,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ If the QR code version does not support ECI, this method will return","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21457,"byte_end":21529,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/ `Err(QrError::UnsupportedCharacterSet)`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21534,"byte_end":21578,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21583,"byte_end":21586,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ If the designator is outside of the expected range, this method will","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21591,"byte_end":21663,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/ return `Err(QrError::InvalidECIDesignator)`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":21668,"byte_end":21716,"line_start":256,"line_end":256,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":24465,"byte_end":24482,"line_start":338,"line_end":338,"column_start":12,"column_end":29},"name":"push_numeric_data","qualname":"<Bits>::push_numeric_data","value":"pub fn push_numeric_data(&mut Self, &[u8]) -> QrResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a numeric string to the bits.","sig":null,"attributes":[{"value":"/ Encodes a numeric string to the bits.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":24254,"byte_end":24295,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":24300,"byte_end":24303,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ The data should only contain the characters 0 to 9.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":24308,"byte_end":24363,"line_start":333,"line_end":333,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":24368,"byte_end":24371,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":24376,"byte_end":24388,"line_start":335,"line_end":335,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":24393,"byte_end":24396,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QrError::DataTooLong)` on overflow.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":24401,"byte_end":24453,"line_start":337,"line_end":337,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":27634,"byte_end":27656,"line_start":446,"line_end":446,"column_start":12,"column_end":34},"name":"push_alphanumeric_data","qualname":"<Bits>::push_alphanumeric_data","value":"pub fn push_alphanumeric_data(&mut Self, &[u8]) -> QrResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes an alphanumeric string to the bits.","sig":null,"attributes":[{"value":"/ Encodes an alphanumeric string to the bits.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":27331,"byte_end":27378,"line_start":438,"line_end":438,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":27383,"byte_end":27386,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The data should only contain the charaters A to Z (excluding lowercase),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":27391,"byte_end":27467,"line_start":440,"line_end":440,"column_start":5,"column_end":81}},{"value":"/ 0 to 9, space, `$`, `%`, `*`, `+`, `-`, `.`, `/` or `:`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":27472,"byte_end":27532,"line_start":441,"line_end":441,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":27537,"byte_end":27540,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":27545,"byte_end":27557,"line_start":443,"line_end":443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":27562,"byte_end":27565,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QrError::DataTooLong)` on overflow.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":27570,"byte_end":27622,"line_start":445,"line_end":445,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":29127,"byte_end":29141,"line_start":495,"line_end":495,"column_start":12,"column_end":26},"name":"push_byte_data","qualname":"<Bits>::push_byte_data","value":"pub fn push_byte_data(&mut Self, &[u8]) -> QrResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes 8-bit byte data to the bits.","sig":null,"attributes":[{"value":"/ Encodes 8-bit byte data to the bits.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":28985,"byte_end":29025,"line_start":490,"line_end":490,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":29030,"byte_end":29033,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":29038,"byte_end":29050,"line_start":492,"line_end":492,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":29055,"byte_end":29058,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QrError::DataTooLong)` on overflow.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":29063,"byte_end":29115,"line_start":494,"line_end":494,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":30832,"byte_end":30847,"line_start":556,"line_end":556,"column_start":12,"column_end":27},"name":"push_kanji_data","qualname":"<Bits>::push_kanji_data","value":"pub fn push_kanji_data(&mut Self, &[u8]) -> QrResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Shift JIS double-byte data to the bits.","sig":null,"attributes":[{"value":"/ Encodes Shift JIS double-byte data to the bits.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":30516,"byte_end":30567,"line_start":548,"line_end":548,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":30572,"byte_end":30575,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":30580,"byte_end":30592,"line_start":550,"line_end":550,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":30597,"byte_end":30600,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QrError::DataTooLong)` on overflow.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":30605,"byte_end":30657,"line_start":552,"line_end":552,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":30662,"byte_end":30665,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QrError::InvalidCharacter)` if the data is not Shift JIS","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":30670,"byte_end":30743,"line_start":554,"line_end":554,"column_start":5,"column_end":78}},{"value":"/ double-byte data (e.g. if the length of data is not an even number).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":30748,"byte_end":30820,"line_start":555,"line_end":555,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33058,"byte_end":33082,"line_start":620,"line_end":620,"column_start":12,"column_end":36},"name":"push_fnc1_first_position","qualname":"<Bits>::push_fnc1_first_position","value":"pub fn push_fnc1_first_position(&mut Self) -> QrResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes an indicator that the following data are formatted according to\n the UCC/EAN Application Identifiers standard.","sig":null,"attributes":[{"value":"/ Encodes an indicator that the following data are formatted according to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32296,"byte_end":32371,"line_start":601,"line_end":601,"column_start":5,"column_end":80}},{"value":"/ the UCC/EAN Application Identifiers standard.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32376,"byte_end":32425,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32430,"byte_end":32433,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/     #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32438,"byte_end":32472,"line_start":604,"line_end":604,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32477,"byte_end":32480,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/     use qrcode::bits::Bits;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32485,"byte_end":32516,"line_start":606,"line_end":606,"column_start":5,"column_end":36}},{"value":"/     use qrcode::types::Version;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32521,"byte_end":32556,"line_start":607,"line_end":607,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32561,"byte_end":32564,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/     let mut bits = Bits::new(Version::Normal(1));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32569,"byte_end":32622,"line_start":609,"line_end":609,"column_start":5,"column_end":58}},{"value":"/     bits.push_fnc1_first_position();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32627,"byte_end":32667,"line_start":610,"line_end":610,"column_start":5,"column_end":45}},{"value":"/     bits.push_numeric_data(b\"01049123451234591597033130128\");","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32672,"byte_end":32737,"line_start":611,"line_end":611,"column_start":5,"column_end":70}},{"value":"/     bits.push_alphanumeric_data(b\"%10ABC123\");","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32742,"byte_end":32792,"line_start":612,"line_end":612,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32797,"byte_end":32800,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ In QR code, the character `%` is used as the data field separator (0x1D).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32805,"byte_end":32882,"line_start":614,"line_end":614,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32887,"byte_end":32890,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32895,"byte_end":32907,"line_start":616,"line_end":616,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32912,"byte_end":32915,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ If the mode is not supported in the provided version, this method","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32920,"byte_end":32989,"line_start":618,"line_end":618,"column_start":5,"column_end":74}},{"value":"/ returns `Err(QrError::UnsupportedCharacterSet)`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32994,"byte_end":33046,"line_start":619,"line_end":619,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":34131,"byte_end":34156,"line_start":649,"line_end":649,"column_start":12,"column_end":37},"name":"push_fnc1_second_position","qualname":"<Bits>::push_fnc1_second_position","value":"pub fn push_fnc1_second_position(&mut Self, u8) -> QrResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes an indicator that the following data are formatted in accordance\n with specific industry or application specifications previously agreed\n with AIM International.","sig":null,"attributes":[{"value":"/ Encodes an indicator that the following data are formatted in accordance","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33181,"byte_end":33257,"line_start":624,"line_end":624,"column_start":5,"column_end":81}},{"value":"/ with specific industry or application specifications previously agreed","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33262,"byte_end":33336,"line_start":625,"line_end":625,"column_start":5,"column_end":79}},{"value":"/ with AIM International.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33341,"byte_end":33368,"line_start":626,"line_end":626,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33373,"byte_end":33376,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/     #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33381,"byte_end":33415,"line_start":628,"line_end":628,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33420,"byte_end":33423,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/     use qrcode::bits::Bits;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33428,"byte_end":33459,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/     use qrcode::types::Version;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33464,"byte_end":33499,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33504,"byte_end":33507,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     let mut bits = Bits::new(Version::Normal(1));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33512,"byte_end":33565,"line_start":633,"line_end":633,"column_start":5,"column_end":58}},{"value":"/     bits.push_fnc1_second_position(37);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33570,"byte_end":33613,"line_start":634,"line_end":634,"column_start":5,"column_end":48}},{"value":"/     bits.push_alphanumeric_data(b\"AA1234BBB112\");","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33618,"byte_end":33671,"line_start":635,"line_end":635,"column_start":5,"column_end":58}},{"value":"/     bits.push_byte_data(b\"text text text text\\r\");","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33676,"byte_end":33730,"line_start":636,"line_end":636,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33735,"byte_end":33738,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ If the application indicator is a single Latin alphabet (a–z / A–Z),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33743,"byte_end":33819,"line_start":638,"line_end":638,"column_start":5,"column_end":77}},{"value":"/ please pass in its ASCII value + 100:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33824,"byte_end":33865,"line_start":639,"line_end":639,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33870,"byte_end":33873,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33878,"byte_end":33891,"line_start":641,"line_end":641,"column_start":5,"column_end":18}},{"value":"/ bits.push_fnc1_second_position(b'A' + 100);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33896,"byte_end":33943,"line_start":642,"line_end":642,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33948,"byte_end":33955,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33960,"byte_end":33963,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33968,"byte_end":33980,"line_start":645,"line_end":645,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33985,"byte_end":33988,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ If the mode is not supported in the provided version, this method","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":33993,"byte_end":34062,"line_start":647,"line_end":647,"column_start":5,"column_end":74}},{"value":"/ returns `Err(QrError::UnsupportedCharacterSet)`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":34067,"byte_end":34119,"line_start":648,"line_end":648,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":36256,"byte_end":36271,"line_start":720,"line_end":720,"column_start":12,"column_end":27},"name":"push_terminator","qualname":"<Bits>::push_terminator","value":"pub fn push_terminator(&mut Self, EcLevel) -> QrResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Pushes the ending bits to indicate no more data.","sig":null,"attributes":[{"value":"/ Pushes the ending bits to indicate no more data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":35922,"byte_end":35974,"line_start":711,"line_end":711,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":35979,"byte_end":35982,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":35987,"byte_end":35999,"line_start":713,"line_end":713,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":36004,"byte_end":36007,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QrError::DataTooLong)` on overflow.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":36012,"byte_end":36064,"line_start":715,"line_end":715,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":36069,"byte_end":36072,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QrError::InvalidVersion)` if it is not valid to use the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":36077,"byte_end":36149,"line_start":717,"line_end":717,"column_start":5,"column_end":77}},{"value":"/ `ec_level` for the given version (e.g. `Version::Micro(1)` with","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":36154,"byte_end":36221,"line_start":718,"line_end":718,"column_start":5,"column_end":72}},{"value":"/ `EcLevel::H`).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":36226,"byte_end":36244,"line_start":719,"line_end":719,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":39868,"byte_end":39881,"line_start":827,"line_end":827,"column_start":12,"column_end":25},"name":"push_segments","qualname":"<Bits>::push_segments","value":"pub fn push_segments<I>(&mut Self, &[u8], I) -> QrResult<()> where\nI: Iterator<Item = Segment>","parent":null,"children":[],"decl_id":null,"docs":" Push a segmented data to the bits, and then terminate it.","sig":null,"attributes":[{"value":"/ Push a segmented data to the bits, and then terminate it.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":39585,"byte_end":39646,"line_start":819,"line_end":819,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":39651,"byte_end":39654,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":39659,"byte_end":39671,"line_start":821,"line_end":821,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":39676,"byte_end":39679,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QrError::DataTooLong)` on overflow.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":39684,"byte_end":39736,"line_start":823,"line_end":823,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":39741,"byte_end":39744,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QrError::InvalidData)` if the segment refers to incorrectly","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":39749,"byte_end":39825,"line_start":825,"line_end":825,"column_start":5,"column_end":81}},{"value":"/ encoded byte sequence.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":39830,"byte_end":39856,"line_start":826,"line_end":826,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":40594,"byte_end":40611,"line_start":848,"line_end":848,"column_start":12,"column_end":29},"name":"push_optimal_data","qualname":"<Bits>::push_optimal_data","value":"pub fn push_optimal_data(&mut Self, &[u8]) -> QrResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Pushes the data the bits, using the optimal encoding.","sig":null,"attributes":[{"value":"/ Pushes the data the bits, using the optimal encoding.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":40435,"byte_end":40492,"line_start":843,"line_end":843,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":40497,"byte_end":40500,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":40505,"byte_end":40517,"line_start":845,"line_end":845,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":40522,"byte_end":40525,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QrError::DataTooLong)` on overflow.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":40530,"byte_end":40582,"line_start":847,"line_end":847,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":42340,"byte_end":42351,"line_start":904,"line_end":904,"column_start":8,"column_end":19},"name":"encode_auto","qualname":"::bits::encode_auto","value":"pub fn encode_auto(&[u8], EcLevel) -> QrResult<Bits>","parent":null,"children":[],"decl_id":null,"docs":" Automatically determines the minimum version to store the data, and encode\n the result.","sig":null,"attributes":[{"value":"/ Automatically determines the minimum version to store the data, and encode","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":42042,"byte_end":42120,"line_start":895,"line_end":895,"column_start":1,"column_end":79}},{"value":"/ the result.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":42121,"byte_end":42136,"line_start":896,"line_end":896,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":42137,"byte_end":42140,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ This method will not consider any Micro QR code versions.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":42141,"byte_end":42202,"line_start":898,"line_end":898,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":42203,"byte_end":42206,"line_start":899,"line_end":899,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":42207,"byte_end":42219,"line_start":900,"line_end":900,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":42220,"byte_end":42223,"line_start":901,"line_end":901,"column_start":1,"column_end":4}},{"value":"/ Returns `Err(QrError::DataTooLong)` if the data is too long to fit even the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":42224,"byte_end":42303,"line_start":902,"line_end":902,"column_start":1,"column_end":80}},{"value":"/ highest QR code version.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":42304,"byte_end":42332,"line_start":903,"line_end":903,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"canvas","qualname":"::canvas","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":513},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":525},{"krate":0,"index":524},{"krate":0,"index":522},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":534},{"krate":0,"index":539},{"krate":0,"index":79},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":541},{"krate":0,"index":569},{"krate":0,"index":568},{"krate":0,"index":566},{"krate":0,"index":130},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167}],"decl_id":null,"docs":" The `canvas` module puts raw bits into the QR code canvas.","sig":null,"attributes":[{"value":"/ The `canvas` module puts raw bits into the QR code canvas.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":45830,"byte_end":45892,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":45893,"byte_end":45896,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/     use qrcode::types::{Version, EcLevel};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":45897,"byte_end":45943,"line_start":3,"line_end":3,"column_start":1,"column_end":47}},{"value":"/     use qrcode::canvas::{Canvas, MaskPattern};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":45944,"byte_end":45994,"line_start":4,"line_end":4,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":45995,"byte_end":45998,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/     let mut c = Canvas::new(Version::Normal(1), EcLevel::L);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":45999,"byte_end":46063,"line_start":6,"line_end":6,"column_start":1,"column_end":65}},{"value":"/     c.draw_all_functional_patterns();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46064,"byte_end":46105,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/     c.draw_data(b\"data_here\", b\"ec_code_here\");","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46106,"byte_end":46157,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/     c.apply_mask(MaskPattern::Checkerboard);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46158,"byte_end":46206,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"/     let bools = c.to_bools();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46207,"byte_end":46240,"line_start":10,"line_end":10,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46571,"byte_end":46576,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Empty","qualname":"::canvas::Module::Empty","value":"Module::Empty","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" The module is empty.\n","sig":null,"attributes":[{"value":"/ The module is empty.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46542,"byte_end":46566,"line_start":23,"line_end":23,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46694,"byte_end":46700,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Masked","qualname":"::canvas::Module::Masked","value":"Module::Masked(Color)","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" The module is of functional patterns which cannot be masked, or pixels\n which have been masked.\n","sig":null,"attributes":[{"value":"/ The module is of functional patterns which cannot be masked, or pixels","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46583,"byte_end":46657,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ which have been masked.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46662,"byte_end":46689,"line_start":27,"line_end":27,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46786,"byte_end":46794,"line_start":31,"line_end":31,"column_start":5,"column_end":13},"name":"Unmasked","qualname":"::canvas::Module::Unmasked","value":"Module::Unmasked(Color)","parent":{"krate":0,"index":513},"children":[],"decl_id":null,"docs":" The module is of data and error correction bits before masking.\n","sig":null,"attributes":[{"value":"/ The module is of data and error correction bits before masking.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46714,"byte_end":46781,"line_start":30,"line_end":30,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46529,"byte_end":46535,"line_start":22,"line_end":22,"column_start":10,"column_end":16},"name":"Module","qualname":"::canvas::Module","value":"pub enum Module {\n\n    /// The module is empty.\n    Empty,\n\n    /// The module is of functional patterns which cannot be masked, or pixels\n    /// which have been masked.\n    Masked(Color),\n\n    /// The module is of data and error correction bits before masking.\n    Unmasked(Color),\n}","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":519}],"decl_id":null,"docs":" The color of a module (pixel) in the QR code.\n","sig":null,"attributes":[{"value":"/ The color of a module (pixel) in the QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46425,"byte_end":46474,"line_start":20,"line_end":20,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47083,"byte_end":47090,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"is_dark","qualname":"<Module>::is_dark","value":"pub fn is_dark(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a module is dark.\n","sig":null,"attributes":[{"value":"/ Checks whether a module is dark.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47035,"byte_end":47071,"line_start":44,"line_end":44,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47791,"byte_end":47795,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"mask","qualname":"<Module>::mask","value":"pub fn mask(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Apply a mask to the unmasked modules.","sig":null,"attributes":[{"value":"/ Apply a mask to the unmasked modules.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47159,"byte_end":47200,"line_start":49,"line_end":49,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47205,"byte_end":47208,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/     use qrcode::canvas::Module;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47213,"byte_end":47248,"line_start":51,"line_end":51,"column_start":5,"column_end":40}},{"value":"/     use qrcode::types::Color;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47253,"byte_end":47286,"line_start":52,"line_end":52,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47291,"byte_end":47294,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Module::Unmasked(Color::Light).mask(true), Module::Masked(Color::Dark));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47299,"byte_end":47390,"line_start":54,"line_end":54,"column_start":5,"column_end":96}},{"value":"/     assert_eq!(Module::Unmasked(Color::Dark).mask(true), Module::Masked(Color::Light));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47395,"byte_end":47486,"line_start":55,"line_end":55,"column_start":5,"column_end":96}},{"value":"/     assert_eq!(Module::Unmasked(Color::Light).mask(false), Module::Masked(Color::Light));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47491,"byte_end":47584,"line_start":56,"line_end":56,"column_start":5,"column_end":98}},{"value":"/     assert_eq!(Module::Masked(Color::Dark).mask(true), Module::Masked(Color::Dark));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47589,"byte_end":47677,"line_start":57,"line_end":57,"column_start":5,"column_end":93}},{"value":"/     assert_eq!(Module::Masked(Color::Dark).mask(false), Module::Masked(Color::Dark));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47682,"byte_end":47771,"line_start":58,"line_end":58,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47776,"byte_end":47779,"line_start":59,"line_end":59,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":48404,"byte_end":48410,"line_start":77,"line_end":77,"column_start":12,"column_end":18},"name":"Canvas","qualname":"::canvas::Canvas","value":"Canvas {  }","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"decl_id":null,"docs":" `Canvas` is an intermediate helper structure to render error-corrected data\n into a QR code.\n","sig":null,"attributes":[{"value":"/ `Canvas` is an intermediate helper structure to render error-corrected data","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":48276,"byte_end":48355,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ into a QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":48356,"byte_end":48375,"line_start":75,"line_end":75,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":48886,"byte_end":48889,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Canvas>::new","value":"pub fn new(Version, EcLevel) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new canvas big enough for a QR code of the given version.\n","sig":null,"attributes":[{"value":"/ Constructs a new canvas big enough for a QR code of the given version.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":48800,"byte_end":48874,"line_start":93,"line_end":93,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":50137,"byte_end":50140,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"get","qualname":"<Canvas>::get","value":"pub fn get(&Self, i16, i16) -> Module","parent":null,"children":[],"decl_id":null,"docs":" Obtains a module at the given coordinates. For convenience, negative\n coordinates will wrap around.\n","sig":null,"attributes":[{"value":"/ Obtains a module at the given coordinates. For convenience, negative","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":50015,"byte_end":50087,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ coordinates will wrap around.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":50092,"byte_end":50125,"line_start":126,"line_end":126,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":50366,"byte_end":50373,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Canvas>::get_mut","value":"pub fn get_mut(&mut Self, i16, i16) -> &mut Module","parent":null,"children":[],"decl_id":null,"docs":" Obtains a mutable module at the given coordinates. For convenience,\n negative coordinates will wrap around.\n","sig":null,"attributes":[{"value":"/ Obtains a mutable module at the given coordinates. For convenience,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":50236,"byte_end":50307,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ negative coordinates will wrap around.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":50312,"byte_end":50354,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":50653,"byte_end":50656,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"put","qualname":"<Canvas>::put","value":"pub fn put(&mut Self, i16, i16, Color)","parent":null,"children":[],"decl_id":null,"docs":" Sets the color of a functional module at the given coordinates. For\n convenience, negative coordinates will wrap around.\n","sig":null,"attributes":[{"value":"/ Sets the color of a functional module at the given coordinates. For","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":50510,"byte_end":50581,"line_start":138,"line_end":138,"column_start":5,"column_end":76}},{"value":"/ convenience, negative coordinates will wrap around.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":50586,"byte_end":50641,"line_start":139,"line_end":139,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":78792,"byte_end":78820,"line_start":967,"line_end":967,"column_start":12,"column_end":40},"name":"draw_all_functional_patterns","qualname":"<Canvas>::draw_all_functional_patterns","value":"pub fn draw_all_functional_patterns(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Draw all functional patterns, before data placement.","sig":null,"attributes":[{"value":"/ Draw all functional patterns, before data placement.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":78449,"byte_end":78505,"line_start":961,"line_end":961,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":78510,"byte_end":78513,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ All functional patterns (e.g. the finder pattern) *except* the format","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":78518,"byte_end":78591,"line_start":963,"line_end":963,"column_start":5,"column_end":78}},{"value":"/ info pattern will be filled in. The format info pattern will be filled","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":78596,"byte_end":78670,"line_start":964,"line_end":964,"column_start":5,"column_end":79}},{"value":"/ with light modules instead. Data bits can then put in the empty modules.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":78675,"byte_end":78751,"line_start":965,"line_end":965,"column_start":5,"column_end":81}},{"value":"/ with `.draw_data()`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":78756,"byte_end":78780,"line_start":966,"line_end":966,"column_start":5,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":79147,"byte_end":79160,"line_start":978,"line_end":978,"column_start":8,"column_end":21},"name":"is_functional","qualname":"::canvas::is_functional","value":"pub fn is_functional(Version, i16, i16, i16) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the module at the given coordinates represents a functional\n module.\n","sig":null,"attributes":[{"value":"/ Gets whether the module at the given coordinates represents a functional","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":79051,"byte_end":79127,"line_start":976,"line_end":976,"column_start":1,"column_end":77}},{"value":"/ module.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":79128,"byte_end":79139,"line_start":977,"line_end":977,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":95669,"byte_end":95678,"line_start":1380,"line_end":1380,"column_start":12,"column_end":21},"name":"draw_data","qualname":"<Canvas>::draw_data","value":"pub fn draw_data(&mut Self, &[u8], &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Draws the encoded data and error correction codes to the empty modules.\n","sig":null,"attributes":[{"value":"/ Draws the encoded data and error correction codes to the empty modules.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":95582,"byte_end":95657,"line_start":1379,"line_end":1379,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98624,"byte_end":98636,"line_start":1468,"line_end":1468,"column_start":5,"column_end":17},"name":"Checkerboard","qualname":"::canvas::MaskPattern::Checkerboard","value":"MaskPattern::Checkerboard","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":" QR code pattern 000: `(x + y) % 2 == 0`.\n","sig":null,"attributes":[{"value":"/ QR code pattern 000: `(x + y) % 2 == 0`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98575,"byte_end":98619,"line_start":1467,"line_end":1467,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98694,"byte_end":98709,"line_start":1471,"line_end":1471,"column_start":5,"column_end":20},"name":"HorizontalLines","qualname":"::canvas::MaskPattern::HorizontalLines","value":"MaskPattern::HorizontalLines","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":" QR code pattern 001: `y % 2 == 0`.\n","sig":null,"attributes":[{"value":"/ QR code pattern 001: `y % 2 == 0`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98651,"byte_end":98689,"line_start":1470,"line_end":1470,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98767,"byte_end":98780,"line_start":1474,"line_end":1474,"column_start":5,"column_end":18},"name":"VerticalLines","qualname":"::canvas::MaskPattern::VerticalLines","value":"MaskPattern::VerticalLines","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":" QR code pattern 010: `x % 3 == 0`.\n","sig":null,"attributes":[{"value":"/ QR code pattern 010: `x % 3 == 0`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98724,"byte_end":98762,"line_start":1473,"line_end":1473,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98844,"byte_end":98857,"line_start":1477,"line_end":1477,"column_start":5,"column_end":18},"name":"DiagonalLines","qualname":"::canvas::MaskPattern::DiagonalLines","value":"MaskPattern::DiagonalLines","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":" QR code pattern 011: `(x + y) % 3 == 0`.\n","sig":null,"attributes":[{"value":"/ QR code pattern 011: `(x + y) % 3 == 0`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98795,"byte_end":98839,"line_start":1476,"line_end":1476,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98929,"byte_end":98946,"line_start":1480,"line_end":1480,"column_start":5,"column_end":22},"name":"LargeCheckerboard","qualname":"::canvas::MaskPattern::LargeCheckerboard","value":"MaskPattern::LargeCheckerboard","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":" QR code pattern 100: `((x/3) + (y/2)) % 2 == 0`.\n","sig":null,"attributes":[{"value":"/ QR code pattern 100: `((x/3) + (y/2)) % 2 == 0`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98872,"byte_end":98924,"line_start":1479,"line_end":1479,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":99016,"byte_end":99022,"line_start":1483,"line_end":1483,"column_start":5,"column_end":11},"name":"Fields","qualname":"::canvas::MaskPattern::Fields","value":"MaskPattern::Fields","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":" QR code pattern 101: `(x*y)%2 + (x*y)%3 == 0`.\n","sig":null,"attributes":[{"value":"/ QR code pattern 101: `(x*y)%2 + (x*y)%3 == 0`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98961,"byte_end":99011,"line_start":1482,"line_end":1482,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":99098,"byte_end":99106,"line_start":1486,"line_end":1486,"column_start":5,"column_end":13},"name":"Diamonds","qualname":"::canvas::MaskPattern::Diamonds","value":"MaskPattern::Diamonds","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":" QR code pattern 110: `((x*y)%2 + (x*y)%3) % 2 == 0`.\n","sig":null,"attributes":[{"value":"/ QR code pattern 110: `((x*y)%2 + (x*y)%3) % 2 == 0`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":99037,"byte_end":99093,"line_start":1485,"line_end":1485,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":99182,"byte_end":99188,"line_start":1489,"line_end":1489,"column_start":5,"column_end":11},"name":"Meadow","qualname":"::canvas::MaskPattern::Meadow","value":"MaskPattern::Meadow","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":" QR code pattern 111: `((x+y)%2 + (x*y)%3) % 2 == 0`.\n","sig":null,"attributes":[{"value":"/ QR code pattern 111: `((x+y)%2 + (x*y)%3) % 2 == 0`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":99121,"byte_end":99177,"line_start":1488,"line_end":1488,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98557,"byte_end":98568,"line_start":1466,"line_end":1466,"column_start":10,"column_end":21},"name":"MaskPattern","qualname":"::canvas::MaskPattern","value":"pub enum MaskPattern {\n\n    /// QR code pattern 000: `(x + y) % 2 == 0`.\n    Checkerboard = ,\n\n    /// QR code pattern 001: `y % 2 == 0`.\n    HorizontalLines = ,\n\n    /// QR code pattern 010: `x % 3 == 0`.\n    VerticalLines = ,\n\n    /// QR code pattern 011: `(x + y) % 3 == 0`.\n    DiagonalLines = ,\n\n    /// QR code pattern 100: `((x/3) + (y/2)) % 2 == 0`.\n    LargeCheckerboard = ,\n\n    /// QR code pattern 101: `(x*y)%2 + (x*y)%3 == 0`.\n    Fields = ,\n\n    /// QR code pattern 110: `((x*y)%2 + (x*y)%3) % 2 == 0`.\n    Diamonds = ,\n\n    /// QR code pattern 111: `((x+y)%2 + (x*y)%3) % 2 == 0`.\n    Meadow = ,\n}","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563}],"decl_id":null,"docs":" The mask patterns. Since QR code and Micro QR code do not use the same\n pattern number, we name them according to their shape instead of the number.\n","sig":null,"attributes":[{"value":"/ The mask patterns. Since QR code and Micro QR code do not use the same","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98362,"byte_end":98436,"line_start":1463,"line_end":1463,"column_start":1,"column_end":75}},{"value":"/ pattern number, we name them according to their shape instead of the number.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":98437,"byte_end":98517,"line_start":1464,"line_end":1464,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":100675,"byte_end":100685,"line_start":1535,"line_end":1535,"column_start":12,"column_end":22},"name":"apply_mask","qualname":"<Canvas>::apply_mask","value":"pub fn apply_mask(&mut Self, MaskPattern)","parent":null,"children":[],"decl_id":null,"docs":" Applies a mask to the canvas. This method will also draw the format info\n patterns.\n","sig":null,"attributes":[{"value":"/ Applies a mask to the canvas. This method will also draw the format info","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":100569,"byte_end":100645,"line_start":1533,"line_end":1533,"column_start":5,"column_end":81}},{"value":"/ patterns.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":100650,"byte_end":100663,"line_start":1534,"line_end":1534,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":115984,"byte_end":115999,"line_start":1974,"line_end":1974,"column_start":12,"column_end":27},"name":"apply_best_mask","qualname":"<Canvas>::apply_best_mask","value":"pub fn apply_best_mask(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new canvas and apply the best masking that gives the lowest\n penalty score.\n","sig":null,"attributes":[{"value":"/ Construct a new canvas and apply the best masking that gives the lowest","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":115874,"byte_end":115949,"line_start":1972,"line_end":1972,"column_start":5,"column_end":80}},{"value":"/ penalty score.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":115954,"byte_end":115972,"line_start":1973,"line_end":1973,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":116535,"byte_end":116543,"line_start":1990,"line_end":1990,"column_start":12,"column_end":20},"name":"to_bools","qualname":"<Canvas>::to_bools","value":"pub fn to_bools(&Self) -> Vec<bool>","parent":null,"children":[],"decl_id":null,"docs":" Convert the modules into a vector of booleans.\n","sig":null,"attributes":[{"value":"/ Convert the modules into a vector of booleans.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":116400,"byte_end":116450,"line_start":1988,"line_end":1988,"column_start":5,"column_end":55}},{"value":"deprecated(since = \"0.4.0\", note = \"use `into_colors()` instead\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":116455,"byte_end":116523,"line_start":1989,"line_end":1989,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":116696,"byte_end":116707,"line_start":1995,"line_end":1995,"column_start":12,"column_end":23},"name":"into_colors","qualname":"<Canvas>::into_colors","value":"pub fn into_colors(Self) -> Vec<Color>","parent":null,"children":[],"decl_id":null,"docs":" Convert the modules into a vector of colors.\n","sig":null,"attributes":[{"value":"/ Convert the modules into a vector of colors.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":116636,"byte_end":116684,"line_start":1994,"line_end":1994,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\cast.rs","byte_start":117378,"byte_end":117384,"line_start":26,"line_end":26,"column_start":10,"column_end":16},"name":"Output","qualname":"::cast::ExpectOrOverflow::Output","value":"type Output;","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ec","qualname":"::ec","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":595},{"krate":0,"index":217},{"krate":0,"index":220}],"decl_id":null,"docs":" The `ec` module applies the Reed-Solomon error correction codes.\n","sig":null,"attributes":[{"value":"/ The `ec` module applies the Reed-Solomon error correction codes.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":119030,"byte_end":119098,"line_start":1,"line_end":1,"column_start":1,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":119735,"byte_end":119763,"line_start":19,"line_end":19,"column_start":8,"column_end":36},"name":"create_error_correction_code","qualname":"::ec::create_error_correction_code","value":"pub fn create_error_correction_code(&[u8], usize) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Creates the error correction code in N bytes.","sig":null,"attributes":[{"value":"/ Creates the error correction code in N bytes.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":119286,"byte_end":119335,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":119336,"byte_end":119339,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This method only supports computing the error-correction code up to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":119340,"byte_end":119411,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ 69 bytes. Longer blocks will result in task panic.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":119412,"byte_end":119466,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":119467,"byte_end":119470,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This method treats the data as a polynomial of the form","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":119471,"byte_end":119530,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/ (a\\[0\\] x<sup>m+n</sup> + a\\[1\\] x<sup>m+n-1</sup> + … + a\\[m\\] x<sup>n</sup>)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":119531,"byte_end":119615,"line_start":16,"line_end":16,"column_start":1,"column_end":83}},{"value":"/ in GF(2<sup>8</sup>), and then computes the polynomial modulus with a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":119616,"byte_end":119689,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ generator polynomial of degree N.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":119690,"byte_end":119727,"line_start":18,"line_end":18,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":122470,"byte_end":122489,"line_start":107,"line_end":107,"column_start":8,"column_end":27},"name":"construct_codewords","qualname":"::ec::construct_codewords","value":"pub fn construct_codewords(&[u8], Version, EcLevel)\n-> QrResult<(Vec<u8>, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Constructs data and error correction codewords ready to be put in the QR\n code matrix.","sig":null,"attributes":[{"value":"/ Constructs data and error correction codewords ready to be put in the QR","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":122187,"byte_end":122263,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ code matrix.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":122264,"byte_end":122280,"line_start":100,"line_end":100,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":122281,"byte_end":122284,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":122285,"byte_end":122297,"line_start":102,"line_end":102,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":122298,"byte_end":122301,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ Returns `Err(QrError::InvalidVersion)` if it is not valid to use the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":122302,"byte_end":122374,"line_start":104,"line_end":104,"column_start":1,"column_end":73}},{"value":"/  `ec_level` for the given version (e.g. `Version::Micro(1)` with","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":122375,"byte_end":122443,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ `EcLevel::H`).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":122444,"byte_end":122462,"line_start":106,"line_end":106,"column_start":1,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":125507,"byte_end":125525,"line_start":177,"line_end":177,"column_start":8,"column_end":26},"name":"max_allowed_errors","qualname":"::ec::max_allowed_errors","value":"pub fn max_allowed_errors(Version, EcLevel) -> QrResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Computes the maximum allowed number of erratic modules can be introduced to\n the QR code, before the data becomes truly corrupted.","sig":null,"attributes":[{"value":"/ Computes the maximum allowed number of erratic modules can be introduced to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":125180,"byte_end":125259,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ the QR code, before the data becomes truly corrupted.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":125260,"byte_end":125317,"line_start":170,"line_end":170,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":125318,"byte_end":125321,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":125322,"byte_end":125334,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":125335,"byte_end":125338,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Returns `Err(QrError::InvalidVersion)` if it is not valid to use the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":125339,"byte_end":125411,"line_start":174,"line_end":174,"column_start":1,"column_end":73}},{"value":"/  `ec_level` for the given version (e.g. `Version::Micro(1)` with","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":125412,"byte_end":125480,"line_start":175,"line_end":175,"column_start":1,"column_end":69}},{"value":"/ `EcLevel::H`).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\ec.rs","byte_start":125481,"byte_end":125499,"line_start":176,"line_end":176,"column_start":1,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"optimize","qualname":"::optimize","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":597},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":604},{"krate":0,"index":603},{"krate":0,"index":601},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":235},{"krate":0,"index":240},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":253},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":270},{"krate":0,"index":613},{"krate":0,"index":646},{"krate":0,"index":644},{"krate":0,"index":272},{"krate":0,"index":647},{"krate":0,"index":671},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":687},{"krate":0,"index":685},{"krate":0,"index":274}],"decl_id":null,"docs":" Find the optimal data mode sequence to encode a piece of data.\n","sig":null,"attributes":[{"value":"/ Find the optimal data mode sequence to encode a piece of data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":147714,"byte_end":147780,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148090,"byte_end":148097,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Segment","qualname":"::optimize::Segment","value":"Segment { mode, begin, end }","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600}],"decl_id":null,"docs":" A segment of data committed to an encoding mode.\n","sig":null,"attributes":[{"value":"/ A segment of data committed to an encoding mode.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":147981,"byte_end":148033,"line_start":11,"line_end":11,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148158,"byte_end":148162,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"mode","qualname":"::optimize::Segment::mode","value":"types::Mode","parent":{"krate":0,"index":597},"children":[],"decl_id":null,"docs":" The encoding mode of the segment of data.\n","sig":null,"attributes":[{"value":"/ The encoding mode of the segment of data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148104,"byte_end":148149,"line_start":14,"line_end":14,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148219,"byte_end":148224,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"begin","qualname":"::optimize::Segment::begin","value":"usize","parent":{"krate":0,"index":597},"children":[],"decl_id":null,"docs":" The start index of the segment.\n","sig":null,"attributes":[{"value":"/ The start index of the segment.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148175,"byte_end":148210,"line_start":17,"line_end":17,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148292,"byte_end":148295,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"name":"end","qualname":"::optimize::Segment::end","value":"usize","parent":{"krate":0,"index":597},"children":[],"decl_id":null,"docs":" The end index (exclusive) of the segment.\n","sig":null,"attributes":[{"value":"/ The end index (exclusive) of the segment.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148238,"byte_end":148283,"line_start":20,"line_end":20,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148465,"byte_end":148476,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"<Segment>::encoded_len","value":"pub fn encoded_len(&Self, Version) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Compute the number of bits (including the size of the mode indicator and\n length bits) when this segment is encoded.\n","sig":null,"attributes":[{"value":"/ Compute the number of bits (including the size of the mode indicator and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148326,"byte_end":148402,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/ length bits) when this segment is encoded.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148407,"byte_end":148453,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":149998,"byte_end":150004,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"Parser","qualname":"::optimize::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" QR code data parser to classify the input into distinct segments.\n","sig":null,"attributes":[{"value":"/ QR code data parser to classify the input into distinct segments.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":149917,"byte_end":149986,"line_start":81,"line_end":81,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150792,"byte_end":150795,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"pub fn new(&[u8]) -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator which parse the data into segments that only\n contains their exclusive subsets. No optimization is done at this point.","sig":null,"attributes":[{"value":"/ Creates a new iterator which parse the data into segments that only","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150144,"byte_end":150215,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ contains their exclusive subsets. No optimization is done at this point.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150220,"byte_end":150296,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150301,"byte_end":150304,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     use qrcode::optimize::{Parser, Segment};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150309,"byte_end":150357,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/     use qrcode::types::Mode::{Alphanumeric, Numeric, Byte};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150362,"byte_end":150425,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150430,"byte_end":150433,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/     let parse_res = Parser::new(b\"ABC123abcd\").collect::<Vec<Segment>>();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150438,"byte_end":150515,"line_start":96,"line_end":96,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(parse_res, vec![Segment { mode: Alphanumeric, begin: 0, end: 3 },","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150520,"byte_end":150604,"line_start":97,"line_end":97,"column_start":5,"column_end":89}},{"value":"/                                Segment { mode: Numeric, begin: 3, end: 6 },","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150609,"byte_end":150688,"line_start":98,"line_end":98,"column_start":5,"column_end":84}},{"value":"/                                Segment { mode: Byte, begin: 6, end: 10 }]);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150693,"byte_end":150772,"line_start":99,"line_end":99,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150777,"byte_end":150780,"line_start":100,"line_end":100,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":155661,"byte_end":155670,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"Optimizer","qualname":"::optimize::Optimizer","value":"Optimizer {  }","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":156156,"byte_end":156159,"line_start":267,"line_end":267,"column_start":12,"column_end":15},"name":"new","qualname":"<Optimizer<I>>::new","value":"pub fn new(I, Version) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Optimize the segments by combining adjacent segments when possible.","sig":null,"attributes":[{"value":"/ Optimize the segments by combining adjacent segments when possible.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":155843,"byte_end":155914,"line_start":261,"line_end":261,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":155919,"byte_end":155922,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Currently this method uses a greedy algorithm by combining segments from","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":155927,"byte_end":156003,"line_start":263,"line_end":263,"column_start":5,"column_end":81}},{"value":"/ left to right until the new segment is longer than before. This method","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":156008,"byte_end":156082,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ does *not* use Annex J from the ISO standard.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":156087,"byte_end":156136,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":156141,"byte_end":156144,"line_start":266,"line_end":266,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":156782,"byte_end":156790,"line_start":288,"line_end":288,"column_start":12,"column_end":20},"name":"optimize","qualname":"<Parser>::optimize","value":"pub fn optimize(Self, Version) -> Optimizer<Parser>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":158266,"byte_end":158283,"line_start":333,"line_end":333,"column_start":8,"column_end":25},"name":"total_encoded_len","qualname":"::optimize::total_encoded_len","value":"pub fn total_encoded_len(&[Segment], Version) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the total encoded length of all segments.\n","sig":null,"attributes":[{"value":"/ Computes the total encoded length of all segments.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":158204,"byte_end":158258,"line_start":332,"line_end":332,"column_start":1,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"render","qualname":"::render","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":301},{"krate":0,"index":340},{"krate":0,"index":364},{"krate":0,"index":392},{"krate":0,"index":397},{"krate":0,"index":404},{"krate":0,"index":414}],"decl_id":null,"docs":" Render a QR code into image.\n","sig":null,"attributes":[{"value":"/ Render a QR code into image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172136,"byte_end":172168,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"image","qualname":"::render::image","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":947},{"krate":0,"index":288},{"krate":0,"index":949},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":955},{"krate":0,"index":292},{"krate":0,"index":957},{"krate":0,"index":688},{"krate":0,"index":693},{"krate":0,"index":698},{"krate":0,"index":703},{"krate":0,"index":294}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"image\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\image.rs","byte_start":178989,"byte_end":179013,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"string","qualname":"::render::string","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":320},{"krate":0,"index":327},{"krate":0,"index":333}],"decl_id":null,"docs":" String rendering support.\n","sig":null,"attributes":[{"value":"/ String rendering support.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":183707,"byte_end":183736,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":183847,"byte_end":183854,"line_start":7,"line_end":7,"column_start":11,"column_end":18},"name":"Element","qualname":"::render::string::Element","value":"Element: Copy","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":183870,"byte_end":183883,"line_start":8,"line_end":8,"column_start":8,"column_end":21},"name":"default_color","qualname":"::render::string::Element::default_color","value":"pub fn default_color(Color) -> Self","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":183914,"byte_end":183920,"line_start":9,"line_end":9,"column_start":8,"column_end":14},"name":"strlen","qualname":"::render::string::Element::strlen","value":"pub fn strlen(Self) -> usize","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":183944,"byte_end":183960,"line_start":10,"line_end":10,"column_start":8,"column_end":24},"name":"append_to_string","qualname":"::render::string::Element::append_to_string","value":"pub fn append_to_string(Self, &mut String)","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":184552,"byte_end":184558,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Canvas","qualname":"::render::string::Canvas","value":"Canvas {  }","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"svg","qualname":"::render::svg","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":969},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":708},{"krate":0,"index":743},{"krate":0,"index":740},{"krate":0,"index":737},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":719},{"krate":0,"index":716},{"krate":0,"index":712},{"krate":0,"index":347},{"krate":0,"index":352},{"krate":0,"index":356}],"decl_id":null,"docs":" SVG rendering support.","sig":null,"attributes":[{"value":"/ SVG rendering support.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186752,"byte_end":186778,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186779,"byte_end":186782,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186783,"byte_end":186796,"line_start":3,"line_end":3,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186797,"byte_end":186800,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186801,"byte_end":186808,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use qrcode::QrCode;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186809,"byte_end":186832,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"/ use qrcode::render::svg;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186833,"byte_end":186861,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186862,"byte_end":186865,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ let code = QrCode::new(b\"Hello\").unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186866,"byte_end":186912,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/ let svg_xml = code.render::<svg::Color>().build();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186913,"byte_end":186967,"line_start":10,"line_end":10,"column_start":1,"column_end":55}},{"value":"/ println!(\"{}\", svg_xml);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186968,"byte_end":186996,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"svg\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":186998,"byte_end":187020,"line_start":13,"line_end":13,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":187266,"byte_end":187271,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Color","qualname":"::render::svg::Color","value":"","parent":null,"children":[],"decl_id":null,"docs":" An SVG color.\n","sig":null,"attributes":[{"value":"/ An SVG color.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":187167,"byte_end":187184,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":187276,"byte_end":187287,"line_start":23,"line_end":23,"column_start":22,"column_end":33},"name":"0","qualname":"::render::svg::Color::0","value":"&'a str","parent":{"krate":0,"index":708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":187508,"byte_end":187514,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"name":"Canvas","qualname":"::render::svg::Canvas","value":"Canvas {  }","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unicode","qualname":"::render::unicode","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":745},{"krate":0,"index":755},{"krate":0,"index":753},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":371},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":383}],"decl_id":null,"docs":" UTF-8 rendering, with 2 pixels per symbol.\n","sig":null,"attributes":[{"value":"/ UTF-8 rendering, with 2 pixels per symbol.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":188848,"byte_end":188894,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":189086,"byte_end":189090,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Dark","qualname":"::render::unicode::Dense1x2::Dark","value":"Dense1x2::Dark","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":189096,"byte_end":189101,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Light","qualname":"::render::unicode::Dense1x2::Light","value":"Dense1x2::Light","parent":{"krate":0,"index":745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":189071,"byte_end":189079,"line_start":8,"line_end":8,"column_start":10,"column_end":18},"name":"Dense1x2","qualname":"::render::unicode::Dense1x2","value":"pub enum Dense1x2 { Dark, Light, }","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":748}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":189611,"byte_end":189620,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"Canvas1x2","qualname":"::render::unicode::Canvas1x2","value":"Canvas1x2 {  }","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172443,"byte_end":172448,"line_start":16,"line_end":16,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::render::Pixel","value":"Pixel: Copy + Sized","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396}],"decl_id":null,"docs":" Abstraction of an image pixel.\n","sig":null,"attributes":[{"value":"/ Abstraction of an image pixel.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172398,"byte_end":172432,"line_start":15,"line_end":15,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172511,"byte_end":172516,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Image","qualname":"::render::Pixel::Image","value":"type Image: Sized + 'static;","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Type of the finalized image.\n","sig":null,"attributes":[{"value":"/ Type of the finalized image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172469,"byte_end":172501,"line_start":17,"line_end":17,"column_start":5,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172643,"byte_end":172649,"line_start":22,"line_end":22,"column_start":10,"column_end":16},"name":"Canvas","qualname":"::render::Pixel::Canvas","value":"type Canvas: Canvas<Pixel = Self, Image = Self::Image>;","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" The type that stores an intermediate buffer before finalizing to a\n concrete image\n","sig":null,"attributes":[{"value":"/ The type that stores an intermediate buffer before finalizing to a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172540,"byte_end":172610,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ concrete image","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172615,"byte_end":172633,"line_start":21,"line_end":21,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172777,"byte_end":172794,"line_start":25,"line_end":25,"column_start":8,"column_end":25},"name":"default_unit_size","qualname":"::render::Pixel::default_unit_size","value":"pub fn default_unit_size() -> (u32, u32)","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Obtains the default module size. The result must be at least 1×1.\n","sig":null,"attributes":[{"value":"/ Obtains the default module size. The result must be at least 1×1.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172699,"byte_end":172769,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172914,"byte_end":172927,"line_start":30,"line_end":30,"column_start":8,"column_end":21},"name":"default_color","qualname":"::render::Pixel::default_color","value":"pub fn default_color(Color) -> Self","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Obtains the default pixel color when a module is dark or light.\n","sig":null,"attributes":[{"value":"/ Obtains the default pixel color when a module is dark or light.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172839,"byte_end":172906,"line_start":29,"line_end":29,"column_start":5,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173005,"byte_end":173011,"line_start":34,"line_end":34,"column_start":11,"column_end":17},"name":"Canvas","qualname":"::render::Canvas","value":"Canvas: Sized","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"decl_id":null,"docs":" Rendering canvas of a QR code image.\n","sig":null,"attributes":[{"value":"/ Rendering canvas of a QR code image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172954,"byte_end":172994,"line_start":33,"line_end":33,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173030,"byte_end":173035,"line_start":35,"line_end":35,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::render::Canvas::Pixel","value":"type Pixel: Sized;","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173053,"byte_end":173058,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Image","qualname":"::render::Canvas::Image","value":"type Image: Sized;","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173132,"byte_end":173135,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"new","qualname":"::render::Canvas::new","value":"pub fn new(u32, u32, Self::Pixel, Self::Pixel) -> Self","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Constructs a new canvas of the given dimensions.\n","sig":null,"attributes":[{"value":"/ Constructs a new canvas of the given dimensions.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173072,"byte_end":173124,"line_start":38,"line_end":38,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173289,"byte_end":173304,"line_start":42,"line_end":42,"column_start":8,"column_end":23},"name":"draw_dark_pixel","qualname":"::render::Canvas::draw_dark_pixel","value":"pub fn draw_dark_pixel(&mut Self, u32, u32)","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Draws a single dark pixel at the (x, y) coordinate.\n","sig":null,"attributes":[{"value":"/ Draws a single dark pixel at the (x, y) coordinate.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173226,"byte_end":173281,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173341,"byte_end":173355,"line_start":44,"line_end":44,"column_start":8,"column_end":22},"name":"draw_dark_rect","qualname":"::render::Canvas::draw_dark_rect","value":"pub fn draw_dark_rect(&mut Self, u32, u32, u32, u32)","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173625,"byte_end":173635,"line_start":53,"line_end":53,"column_start":8,"column_end":18},"name":"into_image","qualname":"::render::Canvas::into_image","value":"pub fn into_image(Self) -> Self::Image","parent":{"krate":0,"index":397},"children":[],"decl_id":null,"docs":" Finalize the canvas to a real image.\n","sig":null,"attributes":[{"value":"/ Finalize the canvas to a real image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173577,"byte_end":173617,"line_start":52,"line_end":52,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173870,"byte_end":173878,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"Renderer","qualname":"::render::Renderer","value":"Renderer {  }","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"decl_id":null,"docs":" A QR code renderer. This is a builder type which converts a bool-vector into\n an image.\n","sig":null,"attributes":[{"value":"/ A QR code renderer. This is a builder type which converts a bool-vector into","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173764,"byte_end":173844,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ an image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173845,"byte_end":173858,"line_start":61,"line_end":61,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":174213,"byte_end":174216,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Renderer>::new","value":"pub fn new(&'a [Color], usize, u32) -> Renderer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new renderer.\n","sig":null,"attributes":[{"value":"/ Creates a new renderer.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":174174,"byte_end":174201,"line_start":74,"line_end":74,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":174764,"byte_end":174774,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"dark_color","qualname":"<Renderer>::dark_color","value":"pub fn dark_color(&mut Self, P) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets color of a dark module. Default is opaque black.\n","sig":null,"attributes":[{"value":"/ Sets color of a dark module. Default is opaque black.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":174695,"byte_end":174752,"line_start":88,"line_end":88,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":174938,"byte_end":174949,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"light_color","qualname":"<Renderer>::light_color","value":"pub fn light_color(&mut Self, P) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets color of a light module. Default is opaque white.\n","sig":null,"attributes":[{"value":"/ Sets color of a light module. Default is opaque white.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":174868,"byte_end":174926,"line_start":94,"line_end":94,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":175117,"byte_end":175127,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"quiet_zone","qualname":"<Renderer>::quiet_zone","value":"pub fn quiet_zone(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to include the quiet zone in the generated image.\n","sig":null,"attributes":[{"value":"/ Whether to include the quiet zone in the generated image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":175044,"byte_end":175105,"line_start":100,"line_end":100,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":175409,"byte_end":175420,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"module_size","qualname":"<Renderer>::module_size","value":"pub fn module_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of each module in pixels. Default is 8px.\n","sig":null,"attributes":[{"value":"/ Sets the size of each module in pixels. Default is 8px.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":175246,"byte_end":175305,"line_start":106,"line_end":106,"column_start":5,"column_end":64}},{"value":"deprecated(since = \"0.4.0\", note =\n             \"use `.module_dimensions(width, width)` instead\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":175310,"byte_end":175397,"line_start":107,"line_end":107,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":175587,"byte_end":175604,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"name":"module_dimensions","qualname":"<Renderer>::module_dimensions","value":"pub fn module_dimensions(&mut Self, u32, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of each module in pixels. Default is 8×8.\n","sig":null,"attributes":[{"value":"/ Sets the size of each module in pixels. Default is 8×8.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":175515,"byte_end":175575,"line_start":112,"line_end":112,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":175836,"byte_end":175845,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"min_width","qualname":"<Renderer>::min_width","value":"pub fn min_width(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.4.0\", note =\n             \"use `.min_dimensions(width, width)` instead\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":175740,"byte_end":175824,"line_start":118,"line_end":118,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":176448,"byte_end":176462,"line_start":131,"line_end":131,"column_start":12,"column_end":26},"name":"min_dimensions","qualname":"<Renderer>::min_dimensions","value":"pub fn min_dimensions(&mut Self, u32, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the minimum total image size in pixels, including the quiet zone if\n applicable. The renderer will try to find the dimension as small as\n possible, such that each module in the QR code has uniform size (no\n distortion).","sig":null,"attributes":[{"value":"/ Sets the minimum total image size in pixels, including the quiet zone if","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":175937,"byte_end":176013,"line_start":123,"line_end":123,"column_start":5,"column_end":81}},{"value":"/ applicable. The renderer will try to find the dimension as small as","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":176018,"byte_end":176089,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ possible, such that each module in the QR code has uniform size (no","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":176094,"byte_end":176165,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"/ distortion).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":176170,"byte_end":176186,"line_start":126,"line_end":126,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":176191,"byte_end":176194,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ For instance, a version 1 QR code has 19 modules across including the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":176199,"byte_end":176272,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/ quiet zone. If we request an image of size ≥200×200, we get that each","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":176277,"byte_end":176353,"line_start":129,"line_end":129,"column_start":5,"column_end":78}},{"value":"/ module's size should be 11×11, so the actual image size will be 209×209.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":176358,"byte_end":176436,"line_start":130,"line_end":130,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177536,"byte_end":177550,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"max_dimensions","qualname":"<Renderer>::max_dimensions","value":"pub fn max_dimensions(&mut Self, u32, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum total image size in pixels, including the quiet zone if\n applicable. The renderer will try to find the dimension as large as\n possible, such that each module in the QR code has uniform size (no\n distortion).","sig":null,"attributes":[{"value":"/ Sets the maximum total image size in pixels, including the quiet zone if","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":176883,"byte_end":176959,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/ applicable. The renderer will try to find the dimension as large as","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":176964,"byte_end":177035,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ possible, such that each module in the QR code has uniform size (no","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177040,"byte_end":177111,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ distortion).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177116,"byte_end":177132,"line_start":142,"line_end":142,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177137,"byte_end":177140,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ For instance, a version 1 QR code has 19 modules across including the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177145,"byte_end":177218,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ quiet zone. If we request an image of size ≤200×200, we get that each","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177223,"byte_end":177299,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ module's size should be 10×10, so the actual image size will be 190×190.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177304,"byte_end":177382,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177387,"byte_end":177390,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The module size is at least 1×1, so if the restriction is too small, the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177395,"byte_end":177472,"line_start":148,"line_end":148,"column_start":5,"column_end":81}},{"value":"/ final image *can* be larger than the input.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177477,"byte_end":177524,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":178075,"byte_end":178083,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"to_image","qualname":"<Renderer>::to_image","value":"pub fn to_image(&Self) -> P::Image","parent":null,"children":[],"decl_id":null,"docs":" Renders the QR code into an image.\n","sig":null,"attributes":[{"value":"/ Renders the QR code into an image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177921,"byte_end":177959,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"deprecated(since = \"0.4.0\", note =\n             \"renamed to `.build()` to de-emphasize the image connection\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":177964,"byte_end":178063,"line_start":159,"line_end":159,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":178187,"byte_end":178192,"line_start":165,"line_end":165,"column_start":12,"column_end":17},"name":"build","qualname":"<Renderer>::build","value":"pub fn build(&Self) -> P::Image","parent":null,"children":[],"decl_id":null,"docs":" Renders the QR code into an image.\n","sig":null,"attributes":[{"value":"/ Renders the QR code into an image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":178137,"byte_end":178175,"line_start":164,"line_end":164,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":987},{"krate":0,"index":433},{"krate":0,"index":989},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":993},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":756},{"krate":0,"index":776},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":769},{"krate":0,"index":767},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":778},{"krate":0,"index":796},{"krate":0,"index":794},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":785},{"krate":0,"index":783},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":797},{"krate":0,"index":823},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":816},{"krate":0,"index":814},{"krate":0,"index":812},{"krate":0,"index":810},{"krate":0,"index":825},{"krate":0,"index":842},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":834},{"krate":0,"index":832},{"krate":0,"index":450},{"krate":0,"index":844},{"krate":0,"index":862},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":855},{"krate":0,"index":853},{"krate":0,"index":457},{"krate":0,"index":461}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":757},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":193822,"byte_end":193833,"line_start":14,"line_end":14,"column_start":5,"column_end":16},"name":"DataTooLong","qualname":"::types::QrError::DataTooLong","value":"QrError::DataTooLong","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" The data is too long to encode into a QR code for the given version.\n","sig":null,"attributes":[{"value":"/ The data is too long to encode into a QR code for the given version.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":193745,"byte_end":193817,"line_start":13,"line_end":13,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":193918,"byte_end":193932,"line_start":17,"line_end":17,"column_start":5,"column_end":19},"name":"InvalidVersion","qualname":"::types::QrError::InvalidVersion","value":"QrError::InvalidVersion","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" The provided version / error correction level combination is invalid.\n","sig":null,"attributes":[{"value":"/ The provided version / error correction level combination is invalid.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":193840,"byte_end":193913,"line_start":16,"line_end":16,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194036,"byte_end":194059,"line_start":21,"line_end":21,"column_start":5,"column_end":28},"name":"UnsupportedCharacterSet","qualname":"::types::QrError::UnsupportedCharacterSet","value":"QrError::UnsupportedCharacterSet","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Some characters in the data cannot be supported by the provided QR code\n version.\n","sig":null,"attributes":[{"value":"/ Some characters in the data cannot be supported by the provided QR code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":193939,"byte_end":194014,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ version.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194019,"byte_end":194031,"line_start":20,"line_end":20,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194173,"byte_end":194193,"line_start":25,"line_end":25,"column_start":5,"column_end":25},"name":"InvalidEciDesignator","qualname":"::types::QrError::InvalidEciDesignator","value":"QrError::InvalidEciDesignator","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" The provided ECI designator is invalid. A valid designator should be\n between 0 and 999999.\n","sig":null,"attributes":[{"value":"/ The provided ECI designator is invalid. A valid designator should be","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194066,"byte_end":194138,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"/ between 0 and 999999.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194143,"byte_end":194168,"line_start":24,"line_end":24,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194265,"byte_end":194281,"line_start":28,"line_end":28,"column_start":5,"column_end":21},"name":"InvalidCharacter","qualname":"::types::QrError::InvalidCharacter","value":"QrError::InvalidCharacter","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" A character not belonging to the character set is found.\n","sig":null,"attributes":[{"value":"/ A character not belonging to the character set is found.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194200,"byte_end":194260,"line_start":27,"line_end":27,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":193731,"byte_end":193738,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"QrError","qualname":"::types::QrError","value":"pub enum QrError {\n\n    /// The data is too long to encode into a QR code for the given version.\n    DataTooLong,\n\n    /// The provided version / error correction level combination is invalid.\n    InvalidVersion,\n\n    /// Some characters in the data cannot be supported by the provided QR code\n    /// version.\n    UnsupportedCharacterSet,\n\n    /// The provided ECI designator is invalid. A valid designator should be\n    /// between 0 and 999999.\n    InvalidEciDesignator,\n\n    /// A character not belonging to the character set is found.\n    InvalidCharacter,\n}","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":761},{"krate":0,"index":763},{"krate":0,"index":765}],"decl_id":null,"docs":" `QrError` encodes the error encountered when generating a QR code.\n","sig":null,"attributes":[{"value":"/ `QrError` encodes the error encountered when generating a QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":193606,"byte_end":193676,"line_start":10,"line_end":10,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194895,"byte_end":194903,"line_start":47,"line_end":47,"column_start":10,"column_end":18},"name":"QrResult","qualname":"::types::QrResult","value":"Result<T, QrError>","parent":null,"children":[],"decl_id":null,"docs":" `QrResult` is a convenient alias for a QR code generation result.\n","sig":null,"attributes":[{"value":"/ `QrResult` is a convenient alias for a QR code generation result.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194816,"byte_end":194885,"line_start":46,"line_end":46,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":779},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195166,"byte_end":195171,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Light","qualname":"::types::Color::Light","value":"Color::Light","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" The module is light colored.\n","sig":null,"attributes":[{"value":"/ The module is light colored.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195129,"byte_end":195161,"line_start":56,"line_end":56,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195213,"byte_end":195217,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Dark","qualname":"::types::Color::Dark","value":"Color::Dark","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" The module is dark colored.\n","sig":null,"attributes":[{"value":"/ The module is dark colored.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195177,"byte_end":195208,"line_start":58,"line_end":58,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195117,"byte_end":195122,"line_start":55,"line_end":55,"column_start":10,"column_end":15},"name":"Color","qualname":"::types::Color","value":"pub enum Color {\n\n    /// The module is light colored.\n    Light,\n\n    /// The module is dark colored.\n    Dark,\n}","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":781}],"decl_id":null,"docs":" The color of a module.\n","sig":null,"attributes":[{"value":"/ The color of a module.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195030,"byte_end":195056,"line_start":53,"line_end":53,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195593,"byte_end":195599,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"select","qualname":"<Color>::select","value":"pub fn select<T>(Self, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Selects a value according to color of the module. Equivalent to\n `if self != Color::Light { dark } else { light }`.","sig":null,"attributes":[{"value":"/ Selects a value according to color of the module. Equivalent to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195239,"byte_end":195306,"line_start":63,"line_end":63,"column_start":5,"column_end":72}},{"value":"/ `if self != Color::Light { dark } else { light }`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195311,"byte_end":195365,"line_start":64,"line_end":64,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195370,"byte_end":195373,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195378,"byte_end":195392,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195397,"byte_end":195400,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195405,"byte_end":195416,"line_start":68,"line_end":68,"column_start":5,"column_end":16}},{"value":"/ # use qrcode::types::Color;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195421,"byte_end":195452,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(Color::Light.select(1, 0), 0);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195457,"byte_end":195502,"line_start":70,"line_end":70,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Color::Dark.select(\"black\", \"white\"), \"black\");","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195507,"byte_end":195569,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195574,"byte_end":195581,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196324,"byte_end":196325,"line_start":100,"line_end":100,"column_start":5,"column_end":6},"name":"L","qualname":"::types::EcLevel::L","value":"EcLevel::L","parent":{"krate":0,"index":797},"children":[],"decl_id":null,"docs":" Low error correction. Allows up to 7% of wrong blocks.\n","sig":null,"attributes":[{"value":"/ Low error correction. Allows up to 7% of wrong blocks.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196261,"byte_end":196319,"line_start":99,"line_end":99,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":801},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196413,"byte_end":196414,"line_start":103,"line_end":103,"column_start":5,"column_end":6},"name":"M","qualname":"::types::EcLevel::M","value":"EcLevel::M","parent":{"krate":0,"index":797},"children":[],"decl_id":null,"docs":" Medium error correction (default). Allows up to 15% of wrong blocks.\n","sig":null,"attributes":[{"value":"/ Medium error correction (default). Allows up to 15% of wrong blocks.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196336,"byte_end":196408,"line_start":102,"line_end":102,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196496,"byte_end":196497,"line_start":106,"line_end":106,"column_start":5,"column_end":6},"name":"Q","qualname":"::types::EcLevel::Q","value":"EcLevel::Q","parent":{"krate":0,"index":797},"children":[],"decl_id":null,"docs":" \"Quartile\" error correction. Allows up to 25% of wrong blocks.\n","sig":null,"attributes":[{"value":"/ \"Quartile\" error correction. Allows up to 25% of wrong blocks.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196425,"byte_end":196491,"line_start":105,"line_end":105,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196573,"byte_end":196574,"line_start":109,"line_end":109,"column_start":5,"column_end":6},"name":"H","qualname":"::types::EcLevel::H","value":"EcLevel::H","parent":{"krate":0,"index":797},"children":[],"decl_id":null,"docs":" High error correction. Allows up to 30% of wrong blocks.\n","sig":null,"attributes":[{"value":"/ High error correction. Allows up to 30% of wrong blocks.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196508,"byte_end":196568,"line_start":108,"line_end":108,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196247,"byte_end":196254,"line_start":98,"line_end":98,"column_start":10,"column_end":17},"name":"EcLevel","qualname":"::types::EcLevel","value":"pub enum EcLevel {\n\n    /// Low error correction. Allows up to 7% of wrong blocks.\n    L = ,\n\n    /// Medium error correction (default). Allows up to 15% of wrong blocks.\n    M = ,\n\n    /// \"Quartile\" error correction. Allows up to 25% of wrong blocks.\n    Q = ,\n\n    /// High error correction. Allows up to 30% of wrong blocks.\n    H = ,\n}","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807}],"decl_id":null,"docs":" The error correction level. It allows the original information be recovered\n even if parts of the code is damaged.\n","sig":null,"attributes":[{"value":"/ The error correction level. It allows the original information be recovered","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196054,"byte_end":196133,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/ even if parts of the code is damaged.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196134,"byte_end":196175,"line_start":96,"line_end":96,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197137,"byte_end":197143,"line_start":125,"line_end":125,"column_start":5,"column_end":11},"name":"Normal","qualname":"::types::Version::Normal","value":"Version::Normal(i16)","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" A normal QR code version. The parameter should be between 1 and 40.\n","sig":null,"attributes":[{"value":"/ A normal QR code version. The parameter should be between 1 and 40.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197061,"byte_end":197132,"line_start":124,"line_end":124,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197229,"byte_end":197234,"line_start":128,"line_end":128,"column_start":5,"column_end":10},"name":"Micro","qualname":"::types::Version::Micro","value":"Version::Micro(i16)","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" A Micro QR code version. The parameter should be between 1 and 4.\n","sig":null,"attributes":[{"value":"/ A Micro QR code version. The parameter should be between 1 and 4.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197155,"byte_end":197224,"line_start":127,"line_end":127,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197047,"byte_end":197054,"line_start":123,"line_end":123,"column_start":10,"column_end":17},"name":"Version","qualname":"::types::Version","value":"pub enum Version {\n\n    /// A normal QR code version. The parameter should be between 1 and 40.\n    Normal(i16),\n\n    /// A Micro QR code version. The parameter should be between 1 and 4.\n    Micro(i16),\n}","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":829}],"decl_id":null,"docs":" In QR code terminology, `Version` means the size of the generated image.\n Larger version means the size of code is larger, and therefore can carry\n more information.","sig":null,"attributes":[{"value":"/ In QR code terminology, `Version` means the size of the generated image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196685,"byte_end":196761,"line_start":116,"line_end":116,"column_start":1,"column_end":77}},{"value":"/ Larger version means the size of code is larger, and therefore can carry","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196762,"byte_end":196838,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ more information.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196839,"byte_end":196860,"line_start":118,"line_end":118,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196861,"byte_end":196864,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The smallest version is `Version::Normal(1)` of size 21×21, and the largest","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196865,"byte_end":196945,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/ is `Version::Normal(40)` of size 177×177.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":196946,"byte_end":196992,"line_start":121,"line_end":121,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197382,"byte_end":197387,"line_start":134,"line_end":134,"column_start":12,"column_end":17},"name":"width","qualname":"<Version>::width","value":"pub fn width(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of \"modules\" on each size of the QR code, i.e. the width\n and height of the code.\n","sig":null,"attributes":[{"value":"/ Get the number of \"modules\" on each size of the QR code, i.e. the width","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197263,"byte_end":197338,"line_start":132,"line_end":132,"column_start":5,"column_end":80}},{"value":"/ and height of the code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197343,"byte_end":197370,"line_start":133,"line_end":133,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":198107,"byte_end":198112,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"fetch","qualname":"<Version>::fetch","value":"pub fn fetch<T>(Self, EcLevel, &[[T; ]]) -> QrResult<T> where T: PartialEq +\nDefault + Copy","parent":null,"children":[],"decl_id":null,"docs":" Obtains an object from a hard-coded table.","sig":null,"attributes":[{"value":"/ Obtains an object from a hard-coded table.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197535,"byte_end":197581,"line_start":141,"line_end":141,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197586,"byte_end":197589,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ The table must be a 44×4 array. The outer array represents the content","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197594,"byte_end":197669,"line_start":143,"line_end":143,"column_start":5,"column_end":79}},{"value":"/ for each version. The first 40 entry corresponds to QR code versions 1","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197674,"byte_end":197748,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ to 40, and the last 4 corresponds to Micro QR code version 1 to 4. The","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197753,"byte_end":197827,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ inner array represents the content in each error correction level, in","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197832,"byte_end":197905,"line_start":146,"line_end":146,"column_start":5,"column_end":78}},{"value":"/ the order [L, M, Q, H].","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197910,"byte_end":197937,"line_start":147,"line_end":147,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197942,"byte_end":197945,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197950,"byte_end":197962,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197967,"byte_end":197970,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ If the entry compares equal to the default value of `T`, this method","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197975,"byte_end":198047,"line_start":151,"line_end":151,"column_start":5,"column_end":77}},{"value":"/ returns `Err(QrError::InvalidVersion)`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":198052,"byte_end":198095,"line_start":152,"line_end":152,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":198756,"byte_end":198771,"line_start":173,"line_end":173,"column_start":12,"column_end":27},"name":"mode_bits_count","qualname":"<Version>::mode_bits_count","value":"pub fn mode_bits_count(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bits needed to encode the mode indicator.\n","sig":null,"attributes":[{"value":"/ The number of bits needed to encode the mode indicator.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":198685,"byte_end":198744,"line_start":172,"line_end":172,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":198972,"byte_end":198980,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"is_micro","qualname":"<Version>::is_micro","value":"pub fn is_micro(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether is version refers to a Micro QR code.\n","sig":null,"attributes":[{"value":"/ Checks whether is version refers to a Micro QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":198904,"byte_end":198960,"line_start":180,"line_end":180,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199420,"byte_end":199427,"line_start":197,"line_end":197,"column_start":5,"column_end":12},"name":"Numeric","qualname":"::types::Mode::Numeric","value":"Mode::Numeric","parent":{"krate":0,"index":844},"children":[],"decl_id":null,"docs":" The data contains only characters 0 to 9.\n","sig":null,"attributes":[{"value":"/ The data contains only characters 0 to 9.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199370,"byte_end":199415,"line_start":196,"line_end":196,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199594,"byte_end":199606,"line_start":201,"line_end":201,"column_start":5,"column_end":17},"name":"Alphanumeric","qualname":"::types::Mode::Alphanumeric","value":"Mode::Alphanumeric","parent":{"krate":0,"index":844},"children":[],"decl_id":null,"docs":" The data contains only uppercase letters (A–Z), numbers (0–9) and a few\n punctuations marks (space, `$`, `%`, `*`, `+`, `-`, `.`, `/`, `:`).\n","sig":null,"attributes":[{"value":"/ The data contains only uppercase letters (A–Z), numbers (0–9) and a few","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199434,"byte_end":199513,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/ punctuations marks (space, `$`, `%`, `*`, `+`, `-`, `.`, `/`, `:`).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199518,"byte_end":199589,"line_start":200,"line_end":200,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199662,"byte_end":199666,"line_start":204,"line_end":204,"column_start":5,"column_end":9},"name":"Byte","qualname":"::types::Mode::Byte","value":"Mode::Byte","parent":{"krate":0,"index":844},"children":[],"decl_id":null,"docs":" The data contains arbitrary binary data.\n","sig":null,"attributes":[{"value":"/ The data contains arbitrary binary data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199613,"byte_end":199657,"line_start":203,"line_end":203,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199735,"byte_end":199740,"line_start":207,"line_end":207,"column_start":5,"column_end":10},"name":"Kanji","qualname":"::types::Mode::Kanji","value":"Mode::Kanji","parent":{"krate":0,"index":844},"children":[],"decl_id":null,"docs":" The data contains Shift-JIS-encoded double-byte text.\n","sig":null,"attributes":[{"value":"/ The data contains Shift-JIS-encoded double-byte text.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199673,"byte_end":199730,"line_start":206,"line_end":206,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199359,"byte_end":199363,"line_start":195,"line_end":195,"column_start":10,"column_end":14},"name":"Mode","qualname":"::types::Mode","value":"pub enum Mode {\n\n    /// The data contains only characters 0 to 9.\n    Numeric,\n\n    /// The data contains only uppercase letters (A–Z), numbers (0–9) and a few\n    /// punctuations marks (space, `$`, `%`, `*`, `+`, `-`, `.`, `/`, `:`).\n    Alphanumeric,\n\n    /// The data contains arbitrary binary data.\n    Byte,\n\n    /// The data contains Shift-JIS-encoded double-byte text.\n    Kanji,\n}","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":851}],"decl_id":null,"docs":" The mode indicator, which specifies the character set of the encoded data.\n","sig":null,"attributes":[{"value":"/ The mode indicator, which specifies the character set of the encoded data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199226,"byte_end":199304,"line_start":193,"line_end":193,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":200122,"byte_end":200139,"line_start":219,"line_end":219,"column_start":12,"column_end":29},"name":"length_bits_count","qualname":"<Mode>::length_bits_count","value":"pub fn length_bits_count(Self, Version) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the number of bits needed to encode the data length.","sig":null,"attributes":[{"value":"/ Computes the number of bits needed to encode the data length.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199761,"byte_end":199826,"line_start":211,"line_end":211,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199831,"byte_end":199834,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/     use qrcode::types::{Version, Mode};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199839,"byte_end":199882,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199887,"byte_end":199890,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Mode::Numeric.length_bits_count(Version::Normal(1)), 10);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199895,"byte_end":199971,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199976,"byte_end":199979,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This method will return `Err(QrError::UnsupportedCharacterSet)` if the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199984,"byte_end":200058,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ mode is not supported in the given version.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":200063,"byte_end":200110,"line_start":218,"line_end":218,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201444,"byte_end":201459,"line_start":257,"line_end":257,"column_start":12,"column_end":27},"name":"data_bits_count","qualname":"<Mode>::data_bits_count","value":"pub fn data_bits_count(Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the number of bits needed to some data of a given raw length.","sig":null,"attributes":[{"value":"/ Computes the number of bits needed to some data of a given raw length.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201115,"byte_end":201189,"line_start":249,"line_end":249,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201194,"byte_end":201197,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/     use qrcode::types::Mode;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201202,"byte_end":201234,"line_start":251,"line_end":251,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201239,"byte_end":201242,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Mode::Numeric.data_bits_count(7), 24);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201247,"byte_end":201304,"line_start":253,"line_end":253,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201309,"byte_end":201312,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Note that in Kanji mode, the `raw_data_len` is the number of Kanjis,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201317,"byte_end":201389,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/ i.e. half the total size of bytes.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201394,"byte_end":201432,"line_start":256,"line_end":256,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":202049,"byte_end":202052,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"max","qualname":"<Mode>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Find the lowest common mode which both modes are compatible with.","sig":null,"attributes":[{"value":"/ Find the lowest common mode which both modes are compatible with.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201751,"byte_end":201820,"line_start":266,"line_end":266,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201825,"byte_end":201828,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/     use qrcode::types::Mode;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201833,"byte_end":201865,"line_start":268,"line_end":268,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201870,"byte_end":201873,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     let a = Mode::Numeric;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201878,"byte_end":201908,"line_start":270,"line_end":270,"column_start":5,"column_end":35}},{"value":"/     let b = Mode::Kanji;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201913,"byte_end":201941,"line_start":271,"line_end":271,"column_start":5,"column_end":33}},{"value":"/     let c = a.max(b);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201946,"byte_end":201971,"line_start":272,"line_end":272,"column_start":5,"column_end":30}},{"value":"/     assert!(a <= c);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":201976,"byte_end":202000,"line_start":273,"line_end":273,"column_start":5,"column_end":29}},{"value":"/     assert!(b <= c);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":202005,"byte_end":202029,"line_start":274,"line_end":274,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":202034,"byte_end":202037,"line_start":275,"line_end":275,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1457,"byte_end":1463,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"QrCode","qualname":"::QrCode","value":"QrCode {  }","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868}],"decl_id":null,"docs":" The encoded QR code symbol.\n","sig":null,"attributes":[{"value":"/ The encoded QR code symbol.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1397,"byte_end":1428,"line_start":54,"line_end":54,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2024,"byte_end":2027,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<QrCode>::new","value":"pub fn new<D: AsRef<[u8]>>(D) -> QrResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new QR code which automatically encodes the given data.","sig":null,"attributes":[{"value":"/ Constructs a new QR code which automatically encodes the given data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1575,"byte_end":1647,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1652,"byte_end":1655,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This method uses the \"medium\" error correction level and automatically","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1660,"byte_end":1734,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ chooses the smallest QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1739,"byte_end":1772,"line_start":67,"line_end":67,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1777,"byte_end":1780,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/     use qrcode::QrCode;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1785,"byte_end":1812,"line_start":69,"line_end":69,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1817,"byte_end":1820,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/     let code = QrCode::new(b\"Some data\").unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1825,"byte_end":1879,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1884,"byte_end":1887,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1892,"byte_end":1904,"line_start":73,"line_end":73,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1909,"byte_end":1912,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Returns error if the QR code cannot be constructed, e.g. when the data","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1917,"byte_end":1991,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ is too long.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1996,"byte_end":2012,"line_start":76,"line_end":76,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2632,"byte_end":2659,"line_start":94,"line_end":94,"column_start":12,"column_end":39},"name":"with_error_correction_level","qualname":"<QrCode>::with_error_correction_level","value":"pub fn with_error_correction_level<D: AsRef<[u8]>>(D, EcLevel)\n-> QrResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new QR code which automatically encodes the given data at a\n specific error correction level.","sig":null,"attributes":[{"value":"/ Constructs a new QR code which automatically encodes the given data at a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2144,"byte_end":2220,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/ specific error correction level.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2225,"byte_end":2261,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2266,"byte_end":2269,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This method automatically chooses the smallest QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2274,"byte_end":2333,"line_start":84,"line_end":84,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2338,"byte_end":2341,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/     use qrcode::{QrCode, EcLevel};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2346,"byte_end":2384,"line_start":86,"line_end":86,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2389,"byte_end":2392,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/     let code = QrCode::with_error_correction_level(b\"Some data\", EcLevel::H).unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2397,"byte_end":2487,"line_start":88,"line_end":88,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2492,"byte_end":2495,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2500,"byte_end":2512,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2517,"byte_end":2520,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Returns error if the QR code cannot be constructed, e.g. when the data","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2525,"byte_end":2599,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ is too long.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2604,"byte_end":2620,"line_start":93,"line_end":93,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3550,"byte_end":3562,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"with_version","qualname":"<QrCode>::with_version","value":"pub fn with_version<D: AsRef<[u8]>>(D, Version, EcLevel) -> QrResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new QR code for the given version and error correction\n level.","sig":null,"attributes":[{"value":"/ Constructs a new QR code for the given version and error correction","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2839,"byte_end":2910,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ level.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2915,"byte_end":2925,"line_start":100,"line_end":100,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2930,"byte_end":2933,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/     use qrcode::{QrCode, Version, EcLevel};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2938,"byte_end":2985,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2990,"byte_end":2993,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/     let code = QrCode::with_version(b\"Some data\", Version::Normal(5), EcLevel::M).unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":2998,"byte_end":3093,"line_start":104,"line_end":104,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3098,"byte_end":3101,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This method can also be used to generate Micro QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3106,"byte_end":3165,"line_start":106,"line_end":106,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3170,"byte_end":3173,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     use qrcode::{QrCode, Version, EcLevel};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3178,"byte_end":3225,"line_start":108,"line_end":108,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3230,"byte_end":3233,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/     let micro_code = QrCode::with_version(b\"123\", Version::Micro(1), EcLevel::L).unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3238,"byte_end":3332,"line_start":110,"line_end":110,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3337,"byte_end":3340,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3345,"byte_end":3357,"line_start":112,"line_end":112,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3362,"byte_end":3365,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Returns error if the QR code cannot be constructed, e.g. when the data","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3370,"byte_end":3444,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ is too long, or when the version and error correction level are","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3449,"byte_end":3516,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/ incompatible.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3521,"byte_end":3538,"line_start":116,"line_end":116,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4867,"byte_end":4876,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"with_bits","qualname":"<QrCode>::with_bits","value":"pub fn with_bits(bits::Bits, EcLevel) -> QrResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new QR code with encoded bits.","sig":null,"attributes":[{"value":"/ Constructs a new QR code with encoded bits.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3834,"byte_end":3881,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3886,"byte_end":3889,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Use this method only if there are very special need to manipulate the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3894,"byte_end":3967,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ raw bits before encoding. Some examples are:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":3972,"byte_end":4020,"line_start":127,"line_end":127,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4025,"byte_end":4028,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ * Encode data using specific character set with ECI","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4033,"byte_end":4088,"line_start":129,"line_end":129,"column_start":5,"column_end":60}},{"value":"/ * Use the FNC1 modes","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4093,"byte_end":4117,"line_start":130,"line_end":130,"column_start":5,"column_end":29}},{"value":"/ * Avoid the optimal segmentation algorithm","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4122,"byte_end":4168,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4173,"byte_end":4176,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ See the `Bits` structure for detail.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4181,"byte_end":4221,"line_start":133,"line_end":133,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4226,"byte_end":4229,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/     #![allow(unused_must_use)]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4234,"byte_end":4268,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4273,"byte_end":4276,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/     use qrcode::{QrCode, Version, EcLevel};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4281,"byte_end":4328,"line_start":137,"line_end":137,"column_start":5,"column_end":52}},{"value":"/     use qrcode::bits::Bits;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4333,"byte_end":4364,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4369,"byte_end":4372,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     let mut bits = Bits::new(Version::Normal(1));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4377,"byte_end":4430,"line_start":140,"line_end":140,"column_start":5,"column_end":58}},{"value":"/     bits.push_eci_designator(9);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4435,"byte_end":4471,"line_start":141,"line_end":141,"column_start":5,"column_end":41}},{"value":"/     bits.push_byte_data(b\"\\xca\\xfe\\xe4\\xe9\\xea\\xe1\\xf2 QR\");","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4476,"byte_end":4540,"line_start":142,"line_end":142,"column_start":5,"column_end":69}},{"value":"/     bits.push_terminator(EcLevel::L);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4545,"byte_end":4586,"line_start":143,"line_end":143,"column_start":5,"column_end":46}},{"value":"/     let qrcode = QrCode::with_bits(bits, EcLevel::L);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4591,"byte_end":4648,"line_start":144,"line_end":144,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4653,"byte_end":4656,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4661,"byte_end":4673,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4678,"byte_end":4681,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns error if the QR code cannot be constructed, e.g. when the bits","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4686,"byte_end":4760,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ are too long, or when the version and error correction level are","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4765,"byte_end":4833,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/ incompatible.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":4838,"byte_end":4855,"line_start":150,"line_end":150,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":5478,"byte_end":5485,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"version","qualname":"<QrCode>::version","value":"pub fn version(&Self) -> Version","parent":null,"children":[],"decl_id":null,"docs":" Gets the version of this QR code.\n","sig":null,"attributes":[{"value":"/ Gets the version of this QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":5429,"byte_end":5466,"line_start":162,"line_end":162,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":5602,"byte_end":5624,"line_start":168,"line_end":168,"column_start":12,"column_end":34},"name":"error_correction_level","qualname":"<QrCode>::error_correction_level","value":"pub fn error_correction_level(&Self) -> EcLevel","parent":null,"children":[],"decl_id":null,"docs":" Gets the error correction level of this QR code.\n","sig":null,"attributes":[{"value":"/ Gets the error correction level of this QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":5538,"byte_end":5590,"line_start":167,"line_end":167,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":5835,"byte_end":5840,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"width","qualname":"<QrCode>::width","value":"pub fn width(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of modules per side, i.e. the width of this QR code.","sig":null,"attributes":[{"value":"/ Gets the number of modules per side, i.e. the width of this QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":5678,"byte_end":5750,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":5755,"byte_end":5758,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The width here does not contain the quiet zone paddings.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":5763,"byte_end":5823,"line_start":174,"line_end":174,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":6089,"byte_end":6107,"line_start":182,"line_end":182,"column_start":12,"column_end":30},"name":"max_allowed_errors","qualname":"<QrCode>::max_allowed_errors","value":"pub fn max_allowed_errors(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the maximum number of allowed erratic modules can be introduced\n before the data becomes corrupted. Note that errors should not be\n introduced to functional modules.\n","sig":null,"attributes":[{"value":"/ Gets the maximum number of allowed erratic modules can be introduced","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":5889,"byte_end":5961,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ before the data becomes corrupted. Note that errors should not be","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":5966,"byte_end":6035,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ introduced to functional modules.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":6040,"byte_end":6077,"line_start":181,"line_end":181,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":6334,"byte_end":6347,"line_start":188,"line_end":188,"column_start":12,"column_end":25},"name":"is_functional","qualname":"<QrCode>::is_functional","value":"pub fn is_functional(&Self, usize, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether a module at coordinate (x, y) is a functional module or\n not.\n","sig":null,"attributes":[{"value":"/ Checks whether a module at coordinate (x, y) is a functional module or","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":6235,"byte_end":6309,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ not.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":6314,"byte_end":6322,"line_start":187,"line_end":187,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":6741,"byte_end":6753,"line_start":196,"line_end":196,"column_start":12,"column_end":24},"name":"to_debug_str","qualname":"<QrCode>::to_debug_str","value":"pub fn to_debug_str(&Self, char, char) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts the QR code into a human-readable string. This is mainly for\n debugging only.\n","sig":null,"attributes":[{"value":"/ Converts the QR code into a human-readable string. This is mainly for","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":6632,"byte_end":6705,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ debugging only.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":6710,"byte_end":6729,"line_start":195,"line_end":195,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7140,"byte_end":7146,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<QrCode>::to_vec","value":"pub fn to_vec(&Self) -> Vec<bool>","parent":null,"children":[],"decl_id":null,"docs":" Converts the QR code to a vector of booleans. Each entry represents the\n color of the module, with \"true\" means dark and \"false\" means light.\n","sig":null,"attributes":[{"value":"/ Converts the QR code to a vector of booleans. Each entry represents the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":6905,"byte_end":6980,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ color of the module, with \"true\" means dark and \"false\" means light.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":6985,"byte_end":7057,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"deprecated(since = \"0.4.0\", note = \"use `to_colors()` instead\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7062,"byte_end":7128,"line_start":202,"line_end":202,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7483,"byte_end":7491,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<QrCode>::into_vec","value":"pub fn into_vec(Self) -> Vec<bool>","parent":null,"children":[],"decl_id":null,"docs":" Converts the QR code to a vector of booleans. Each entry represents the\n color of the module, with \"true\" means dark and \"false\" means light.\n","sig":null,"attributes":[{"value":"/ Converts the QR code to a vector of booleans. Each entry represents the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7246,"byte_end":7321,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ color of the module, with \"true\" means dark and \"false\" means light.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7326,"byte_end":7398,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"deprecated(since = \"0.4.0\", note = \"use `into_colors()` instead\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7403,"byte_end":7471,"line_start":209,"line_end":209,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7653,"byte_end":7662,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"to_colors","qualname":"<QrCode>::to_colors","value":"pub fn to_colors(&Self) -> Vec<Color>","parent":null,"children":[],"decl_id":null,"docs":" Converts the QR code to a vector of colors.\n","sig":null,"attributes":[{"value":"/ Converts the QR code to a vector of colors.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7594,"byte_end":7641,"line_start":214,"line_end":214,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7785,"byte_end":7796,"line_start":220,"line_end":220,"column_start":12,"column_end":23},"name":"into_colors","qualname":"<QrCode>::into_colors","value":"pub fn into_colors(Self) -> Vec<Color>","parent":null,"children":[],"decl_id":null,"docs":" Converts the QR code to a vector of colors.\n","sig":null,"attributes":[{"value":"/ Converts the QR code to a vector of colors.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7726,"byte_end":7773,"line_start":219,"line_end":219,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8840,"byte_end":8846,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"render","qualname":"<QrCode>::render","value":"pub fn render<P: Pixel>(&Self) -> Renderer<, P>","parent":null,"children":[],"decl_id":null,"docs":" Renders the QR code into an image. The result is an image builder, which\n you may do some additional configuration before copying it into a\n concrete image.","sig":null,"attributes":[{"value":"/ Renders the QR code into an image. The result is an image builder, which","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7851,"byte_end":7927,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ you may do some additional configuration before copying it into a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":7932,"byte_end":8001,"line_start":225,"line_end":225,"column_start":5,"column_end":74}},{"value":"/ concrete image.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8006,"byte_end":8025,"line_start":226,"line_end":226,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8030,"byte_end":8033,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8038,"byte_end":8052,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8057,"byte_end":8060,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # use qrcode::QrCode;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8178,"byte_end":8203,"line_start":232,"line_end":232,"column_start":5,"column_end":30}},{"value":"/ # use image::Rgb;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8208,"byte_end":8229,"line_start":233,"line_end":233,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8234,"byte_end":8237,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let image = QrCode::new(b\"hello\").unwrap()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8242,"byte_end":8288,"line_start":235,"line_end":235,"column_start":5,"column_end":51}},{"value":"/                     .render()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8293,"byte_end":8326,"line_start":236,"line_end":236,"column_start":5,"column_end":38}},{"value":"/                     .dark_color(Rgb([0, 0, 128]))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8331,"byte_end":8384,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/                     .light_color(Rgb([224, 224, 224])) // adjust colors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8389,"byte_end":8464,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/                     .quiet_zone(false)          // disable quiet zone (white border)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8469,"byte_end":8557,"line_start":239,"line_end":239,"column_start":5,"column_end":93}},{"value":"/                     .min_dimensions(300, 300)   // sets minimum image size","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8562,"byte_end":8640,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/                     .build();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8645,"byte_end":8678,"line_start":241,"line_end":241,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8683,"byte_end":8690,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8695,"byte_end":8698,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Note: the `image` crate itself also provides method to rotate the image,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8703,"byte_end":8779,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ or overlay a logo on top of the QR code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":8784,"byte_end":8828,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":13550,"byte_end":13554,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18606,"byte_end":18610,"line_start":185,"line_end":185,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20193,"byte_end":20197,"line_start":219,"line_end":219,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":23877,"byte_end":23881,"line_start":322,"line_end":322,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":27320,"byte_end":27324,"line_start":437,"line_end":437,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":28974,"byte_end":28978,"line_start":489,"line_end":489,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":30505,"byte_end":30509,"line_start":547,"line_end":547,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32285,"byte_end":32289,"line_start":600,"line_end":600,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":35911,"byte_end":35915,"line_start":710,"line_end":710,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":39574,"byte_end":39578,"line_start":818,"line_end":818,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46828,"byte_end":46833,"line_start":34,"line_end":34,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47022,"byte_end":47028,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":48787,"byte_end":48793,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":53000,"byte_end":53006,"line_start":214,"line_end":214,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":56206,"byte_end":56212,"line_start":316,"line_end":316,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":64650,"byte_end":64656,"line_start":534,"line_end":534,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":68042,"byte_end":68048,"line_start":639,"line_end":639,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":78436,"byte_end":78442,"line_start":960,"line_end":960,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":85206,"byte_end":85220,"line_start":1138,"line_end":1138,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":85569,"byte_end":85583,"line_start":1153,"line_end":1153,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":94688,"byte_end":94694,"line_start":1356,"line_end":1356,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":100556,"byte_end":100562,"line_start":1532,"line_end":1532,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":106476,"byte_end":106482,"line_start":1694,"line_end":1694,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":115861,"byte_end":115867,"line_start":1971,"line_end":1971,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\cast.rs","byte_start":117499,"byte_end":117505,"line_start":30,"line_end":30,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148312,"byte_end":148319,"line_start":24,"line_end":24,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":149396,"byte_end":149403,"line_start":59,"line_end":59,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150127,"byte_end":150133,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":151050,"byte_end":151056,"line_start":111,"line_end":111,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":155824,"byte_end":155833,"line_start":260,"line_end":260,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":156758,"byte_end":156764,"line_start":287,"line_end":287,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":156936,"byte_end":156945,"line_start":293,"line_end":293,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":166104,"byte_end":166115,"line_start":530,"line_end":530,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":184706,"byte_end":184707,"line_start":50,"line_end":50,"column_start":28,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":184969,"byte_end":184975,"line_start":63,"line_end":63,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":187310,"byte_end":187315,"line_start":25,"line_end":25,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":187603,"byte_end":187609,"line_start":40,"line_end":40,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":189121,"byte_end":189129,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":189367,"byte_end":189375,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":189705,"byte_end":189714,"line_start":42,"line_end":42,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":174152,"byte_end":174160,"line_start":73,"line_end":73,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194303,"byte_end":194310,"line_start":31,"line_end":31,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194804,"byte_end":194811,"line_start":44,"line_end":44,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195227,"byte_end":195232,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195756,"byte_end":195761,"line_start":81,"line_end":81,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197249,"byte_end":197256,"line_start":131,"line_end":131,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199750,"byte_end":199754,"line_start":210,"line_end":210,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":202306,"byte_end":202310,"line_start":285,"line_end":285,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1562,"byte_end":1568,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":9052,"byte_end":9058,"line_start":252,"line_end":252,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1145,"byte_end":1149,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1159,"byte_end":1165,"line_start":41,"line_end":41,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":67}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1185,"byte_end":1187,"line_start":43,"line_end":43,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":196}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1197,"byte_end":1205,"line_start":44,"line_end":44,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":223}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1215,"byte_end":1221,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":276}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172244,"byte_end":172249,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":280}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172259,"byte_end":172265,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":301}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172275,"byte_end":172278,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":340}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172288,"byte_end":172295,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":364}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1231,"byte_end":1236,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":428}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":13550,"byte_end":13554,"line_start":22,"line_end":22,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":18606,"byte_end":18610,"line_start":185,"line_end":185,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":20193,"byte_end":20197,"line_start":219,"line_end":219,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":23877,"byte_end":23881,"line_start":322,"line_end":322,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":27320,"byte_end":27324,"line_start":437,"line_end":437,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":28974,"byte_end":28978,"line_start":489,"line_end":489,"column_start":6,"column_end":10},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":30505,"byte_end":30509,"line_start":547,"line_end":547,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":32285,"byte_end":32289,"line_start":600,"line_end":600,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":35911,"byte_end":35915,"line_start":710,"line_end":710,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\bits.rs","byte_start":39574,"byte_end":39578,"line_start":818,"line_end":818,"column_start":6,"column_end":10},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":46828,"byte_end":46833,"line_start":34,"line_end":34,"column_start":23,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":47022,"byte_end":47028,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":48787,"byte_end":48793,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":53000,"byte_end":53006,"line_start":214,"line_end":214,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":56206,"byte_end":56212,"line_start":316,"line_end":316,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":64650,"byte_end":64656,"line_start":534,"line_end":534,"column_start":6,"column_end":12},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":68042,"byte_end":68048,"line_start":639,"line_end":639,"column_start":6,"column_end":12},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":78436,"byte_end":78442,"line_start":960,"line_end":960,"column_start":6,"column_end":12},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":85206,"byte_end":85220,"line_start":1138,"line_end":1138,"column_start":6,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":85569,"byte_end":85583,"line_start":1153,"line_end":1153,"column_start":19,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":94688,"byte_end":94694,"line_start":1356,"line_end":1356,"column_start":6,"column_end":12},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":100556,"byte_end":100562,"line_start":1532,"line_end":1532,"column_start":6,"column_end":12},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":106476,"byte_end":106482,"line_start":1694,"line_end":1694,"column_start":6,"column_end":12},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\canvas.rs","byte_start":115861,"byte_end":115867,"line_start":1971,"line_end":1971,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\cast.rs","byte_start":117499,"byte_end":117505,"line_start":30,"line_end":30,"column_start":30,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":2,"index":34648},"to":{"krate":0,"index":186}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":148312,"byte_end":148319,"line_start":24,"line_end":24,"column_start":6,"column_end":13},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":149396,"byte_end":149403,"line_start":59,"line_end":59,"column_start":51,"column_end":58},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":230},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":150127,"byte_end":150133,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":151050,"byte_end":151056,"line_start":111,"line_end":111,"column_start":23,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":155824,"byte_end":155833,"line_start":260,"line_end":260,"column_start":35,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":156758,"byte_end":156764,"line_start":287,"line_end":287,"column_start":10,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":156936,"byte_end":156945,"line_start":293,"line_end":293,"column_start":48,"column_end":57},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":253},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\optimize.rs","byte_start":166104,"byte_end":166115,"line_start":530,"line_end":530,"column_start":6,"column_end":17},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":183856,"byte_end":183860,"line_start":7,"line_end":7,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":307}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":184706,"byte_end":184707,"line_start":50,"line_end":50,"column_start":28,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":328},"to":{"krate":0,"index":392}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\string.rs","byte_start":184969,"byte_end":184975,"line_start":63,"line_end":63,"column_start":35,"column_end":41},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":320},"to":{"krate":0,"index":397}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":187310,"byte_end":187315,"line_start":25,"line_end":25,"column_start":20,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":708},"to":{"krate":0,"index":392}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\svg.rs","byte_start":187603,"byte_end":187609,"line_start":40,"line_end":40,"column_start":27,"column_end":33},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":352},"to":{"krate":0,"index":397}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":189121,"byte_end":189129,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":745},"to":{"krate":0,"index":392}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":189367,"byte_end":189375,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\unicode.rs","byte_start":189705,"byte_end":189714,"line_start":42,"line_end":42,"column_start":23,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":397}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172450,"byte_end":172454,"line_start":16,"line_end":16,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":392}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":172457,"byte_end":172462,"line_start":16,"line_end":16,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":392}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":173013,"byte_end":173018,"line_start":34,"line_end":34,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":397}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\render\\mod.rs","byte_start":174152,"byte_end":174160,"line_start":73,"line_end":73,"column_start":20,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194303,"byte_end":194310,"line_start":31,"line_end":31,"column_start":18,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":756},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":194804,"byte_end":194811,"line_start":44,"line_end":44,"column_start":30,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":756},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195227,"byte_end":195232,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":195756,"byte_end":195761,"line_start":81,"line_end":81,"column_start":14,"column_end":19},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":2198}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":197249,"byte_end":197256,"line_start":131,"line_end":131,"column_start":6,"column_end":13},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":199750,"byte_end":199754,"line_start":210,"line_end":210,"column_start":6,"column_end":10},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":844},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\types.rs","byte_start":202306,"byte_end":202310,"line_start":285,"line_end":285,"column_start":21,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":844},"to":{"krate":2,"index":1841}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":1562,"byte_end":1568,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qrcode-0.12.0\\src\\lib.rs","byte_start":9052,"byte_end":9058,"line_start":252,"line_end":252,"column_start":32,"column_end":38},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":2362}}]}