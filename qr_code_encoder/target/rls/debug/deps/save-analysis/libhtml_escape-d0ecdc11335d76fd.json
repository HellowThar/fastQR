{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9","program":"C:\\Users\\Jamison\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","html_escape","--edition=2018","C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=d0ecdc11335d76fd","-C","extra-filename=-d0ecdc11335d76fd","--out-dir","c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps","--extern","utf8_width=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libutf8_width-8649afdaa00425eb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Jamison\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libhtml_escape-d0ecdc11335d76fd.rmeta"},"prelude":{"crate_id":{"name":"html_escape","disambiguator":[7570869839207930513,1624280136403160513]},"crate_root":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src","external_crates":[{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","num":13,"id":{"name":"utf8_width","disambiguator":[9690272518065173629,6751454381943467236]}}],"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","byte_start":0,"byte_end":2100,"line_start":1,"line_end":78,"column_start":1,"column_end":19}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","byte_start":2079,"byte_end":2080,"line_start":77,"line_end":77,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","byte_start":2098,"byte_end":2099,"line_start":78,"line_end":78,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","byte_start":0,"byte_end":2100,"line_start":1,"line_end":78,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":64},{"krate":0,"index":126},{"krate":0,"index":141},{"krate":0,"index":142}],"decl_id":null,"docs":"# HTML Escape","sig":null,"attributes":[{"value":"*\n# HTML Escape\n\nThis library is for encoding/escaping special characters in HTML and decoding/unescaping HTML entities as well.\n\n## Usage\n\n### Encoding\n\nThis crate provides some `encode_*` functions to encode HTML text in different situations.\n\nFor example, to put a text between a start tag `<foo>` and an end tag `</foo>`, use the `encode_text` function to escape every `&`, `<`, and `>` in the text.\n\n```rust\nextern crate html_escape;\n\nassert_eq!(\"a &gt; b &amp;&amp; a &lt; c\", html_escape::encode_text(\"a > b && a < c\"));\n```\n\nThe functions suffixed with `_to_writer`, `_to_vec` or `_to_string` are useful to generate HTML.\n\n```rust\nextern crate html_escape;\n\nlet mut html = String::from(\"<input value=\");\nassert_eq!(\"Hello&#x20;world&#x21;\", html_escape::encode_unquoted_attribute_to_string(\"Hello world!\", &mut html));\nhtml.push_str(\" placeholder=\\\"\");\nassert_eq!(\"The default value is &quot;Hello world!&quot;.\", html_escape::encode_double_quoted_attribute_to_string(\"The default value is \\\"Hello world!\\\".\", &mut html));\nhtml.push_str(\"\\\"/><script>alert('\");\nassert_eq!(r\"<script>\\'s end tag is <\\/script>\", html_escape::encode_script_single_quoted_text_to_string(\"<script>'s end tag is </script>\", &mut html));\nhtml.push_str(\"');</script>\");\n\nassert_eq!(\"<input value=Hello&#x20;world&#x21; placeholder=\\\"The default value is &quot;Hello world!&quot;.\\\"/><script>alert(\\'<script>\\\\\\'s end tag is <\\\\/script>\\');</script>\", html);\n```\n\n### Decoding\n\n```rust\nextern crate html_escape;\n\nassert_eq!(\"Hello world!\", html_escape::decode_html_entities(\"Hello&#x20;world&#x21;\"));\n```\n\n```rust\nextern crate html_escape;\n\nassert_eq!(\"alert('<script></script>');\", html_escape::decode_script(r\"alert('<script><\\/script>');\"));\n```\n\n## No Std\n\nDisable the default features to compile this crate without std.\n\n```toml\n[dependencies.html-escape]\nversion = \"*\"\ndefault-features = false\n```\n\n## Benchmark\n\n```bash\ncargo bench\n```\n*/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\lib.rs","byte_start":0,"byte_end":1930,"line_start":1,"line_end":65,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":10069,"byte_end":10082,"line_start":128,"line_end":128,"column_start":5,"column_end":18},"name":"decode_script","qualname":"::decode::element::script::decode_script","value":"pub fn decode_script<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Decode text from the `<script>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2640,"byte_end":2643,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2673,"byte_end":2682,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":10204,"byte_end":10227,"line_start":130,"line_end":130,"column_start":5,"column_end":28},"name":"decode_script_to_string","qualname":"::decode::element::script::decode_script_to_string","value":"pub fn decode_script_to_string<S: AsRef<str>>(S, &mut String) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text from the `<script>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4383,"byte_end":4386,"line_start":67,"line_end":67,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4416,"byte_end":4425,"line_start":69,"line_end":69,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":10348,"byte_end":10368,"line_start":132,"line_end":132,"column_start":5,"column_end":25},"name":"decode_script_to_vec","qualname":"::decode::element::script::decode_script_to_vec","value":"pub fn decode_script_to_vec<S: AsRef<str>>(S, &mut Vec<u8>) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text from the `<script>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4664,"byte_end":4667,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4697,"byte_end":4706,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":10434,"byte_end":10457,"line_start":134,"line_end":134,"column_start":5,"column_end":28},"name":"decode_script_to_writer","qualname":"::decode::element::script::decode_script_to_writer","value":"pub fn decode_script_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text from the `<script>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5722,"byte_end":5745,"line_start":112,"line_end":112,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5792,"byte_end":5795,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5825,"byte_end":5834,"line_start":116,"line_end":116,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":10726,"byte_end":10758,"line_start":145,"line_end":145,"column_start":5,"column_end":37},"name":"decode_script_single_quoted_text","qualname":"::decode::element::script::decode_script_single_quoted_text","value":"pub fn decode_script_single_quoted_text<S: ?Sized + AsRef<str>>(&S)\n-> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Decode text from a single quoted text in the `<script>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2640,"byte_end":2643,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2673,"byte_end":2682,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":10904,"byte_end":10946,"line_start":147,"line_end":147,"column_start":5,"column_end":47},"name":"decode_script_single_quoted_text_to_string","qualname":"::decode::element::script::decode_script_single_quoted_text_to_string","value":"pub fn decode_script_single_quoted_text_to_string<S: AsRef<str>>(S,\n                                                                 &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text from a single quoted text in the `<script>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4383,"byte_end":4386,"line_start":67,"line_end":67,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4416,"byte_end":4425,"line_start":69,"line_end":69,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":11091,"byte_end":11130,"line_start":149,"line_end":149,"column_start":5,"column_end":44},"name":"decode_script_single_quoted_text_to_vec","qualname":"::decode::element::script::decode_script_single_quoted_text_to_vec","value":"pub fn decode_script_single_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text from a single quoted text in the `<script>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4664,"byte_end":4667,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4697,"byte_end":4706,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":11220,"byte_end":11262,"line_start":151,"line_end":151,"column_start":5,"column_end":47},"name":"decode_script_single_quoted_text_to_writer","qualname":"::decode::element::script::decode_script_single_quoted_text_to_writer","value":"pub fn decode_script_single_quoted_text_to_writer<S: AsRef<str>,\n                                                  W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text from a single quoted text in the `<script>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5722,"byte_end":5745,"line_start":112,"line_end":112,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5792,"byte_end":5795,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5825,"byte_end":5834,"line_start":116,"line_end":116,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":11532,"byte_end":11564,"line_start":162,"line_end":162,"column_start":5,"column_end":37},"name":"decode_script_double_quoted_text","qualname":"::decode::element::script::decode_script_double_quoted_text","value":"pub fn decode_script_double_quoted_text<S: ?Sized + AsRef<str>>(&S)\n-> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Decode text from a double quoted text in the `<script>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2640,"byte_end":2643,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2673,"byte_end":2682,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":11710,"byte_end":11752,"line_start":164,"line_end":164,"column_start":5,"column_end":47},"name":"decode_script_double_quoted_text_to_string","qualname":"::decode::element::script::decode_script_double_quoted_text_to_string","value":"pub fn decode_script_double_quoted_text_to_string<S: AsRef<str>>(S,\n                                                                 &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text from a double quoted text in the `<script>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4383,"byte_end":4386,"line_start":67,"line_end":67,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4416,"byte_end":4425,"line_start":69,"line_end":69,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":11897,"byte_end":11936,"line_start":166,"line_end":166,"column_start":5,"column_end":44},"name":"decode_script_double_quoted_text_to_vec","qualname":"::decode::element::script::decode_script_double_quoted_text_to_vec","value":"pub fn decode_script_double_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text from a double quoted text in the `<script>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4664,"byte_end":4667,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4697,"byte_end":4706,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":12026,"byte_end":12068,"line_start":168,"line_end":168,"column_start":5,"column_end":47},"name":"decode_script_double_quoted_text_to_writer","qualname":"::decode::element::script::decode_script_double_quoted_text_to_writer","value":"pub fn decode_script_double_quoted_text_to_writer<S: AsRef<str>,\n                                                  W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text from a double quoted text in the `<script>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5722,"byte_end":5745,"line_start":112,"line_end":112,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5792,"byte_end":5795,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5825,"byte_end":5834,"line_start":116,"line_end":116,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":12347,"byte_end":12372,"line_start":180,"line_end":180,"column_start":5,"column_end":30},"name":"decode_script_quoted_text","qualname":"::decode::element::script::decode_script_quoted_text","value":"pub fn decode_script_quoted_text<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Decode text from a quoted text in the `<script>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2640,"byte_end":2643,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2673,"byte_end":2682,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":12511,"byte_end":12546,"line_start":182,"line_end":182,"column_start":5,"column_end":40},"name":"decode_script_quoted_text_to_string","qualname":"::decode::element::script::decode_script_quoted_text_to_string","value":"pub fn decode_script_quoted_text_to_string<S: AsRef<str>>(S, &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text from a quoted text in the `<script>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4383,"byte_end":4386,"line_start":67,"line_end":67,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4416,"byte_end":4425,"line_start":69,"line_end":69,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":12684,"byte_end":12716,"line_start":184,"line_end":184,"column_start":5,"column_end":37},"name":"decode_script_quoted_text_to_vec","qualname":"::decode::element::script::decode_script_quoted_text_to_vec","value":"pub fn decode_script_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text from a quoted text in the `<script>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4664,"byte_end":4667,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4697,"byte_end":4706,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\script.rs","byte_start":12799,"byte_end":12834,"line_start":186,"line_end":186,"column_start":5,"column_end":40},"name":"decode_script_quoted_text_to_writer","qualname":"::decode::element::script::decode_script_quoted_text_to_writer","value":"pub fn decode_script_quoted_text_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text from a quoted text in the `<script>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5722,"byte_end":5745,"line_start":112,"line_end":112,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5792,"byte_end":5795,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5825,"byte_end":5834,"line_start":116,"line_end":116,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":16022,"byte_end":16034,"line_start":121,"line_end":121,"column_start":5,"column_end":17},"name":"decode_style","qualname":"::decode::element::style::decode_style","value":"pub fn decode_style<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Decode text from the `<style>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2640,"byte_end":2643,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2673,"byte_end":2682,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":16155,"byte_end":16177,"line_start":123,"line_end":123,"column_start":5,"column_end":27},"name":"decode_style_to_string","qualname":"::decode::element::style::decode_style_to_string","value":"pub fn decode_style_to_string<S: AsRef<str>>(S, &mut String) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text from the `<style>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4383,"byte_end":4386,"line_start":67,"line_end":67,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4416,"byte_end":4425,"line_start":69,"line_end":69,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":16297,"byte_end":16316,"line_start":125,"line_end":125,"column_start":5,"column_end":24},"name":"decode_style_to_vec","qualname":"::decode::element::style::decode_style_to_vec","value":"pub fn decode_style_to_vec<S: AsRef<str>>(S, &mut Vec<u8>) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text from the `<style>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4664,"byte_end":4667,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4697,"byte_end":4706,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":16381,"byte_end":16403,"line_start":127,"line_end":127,"column_start":5,"column_end":27},"name":"decode_style_to_writer","qualname":"::decode::element::style::decode_style_to_writer","value":"pub fn decode_style_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text from the `<style>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5722,"byte_end":5745,"line_start":112,"line_end":112,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5792,"byte_end":5795,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5825,"byte_end":5834,"line_start":116,"line_end":116,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":16668,"byte_end":16699,"line_start":138,"line_end":138,"column_start":5,"column_end":36},"name":"decode_style_single_quoted_text","qualname":"::decode::element::style::decode_style_single_quoted_text","value":"pub fn decode_style_single_quoted_text<S: ?Sized + AsRef<str>>(&S)\n-> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Decode text from a single quoted text in the `<style>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2640,"byte_end":2643,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2673,"byte_end":2682,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":16844,"byte_end":16885,"line_start":140,"line_end":140,"column_start":5,"column_end":46},"name":"decode_style_single_quoted_text_to_string","qualname":"::decode::element::style::decode_style_single_quoted_text_to_string","value":"pub fn decode_style_single_quoted_text_to_string<S: AsRef<str>>(S,\n                                                                &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text from a single quoted text in the `<style>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4383,"byte_end":4386,"line_start":67,"line_end":67,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4416,"byte_end":4425,"line_start":69,"line_end":69,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":17029,"byte_end":17067,"line_start":142,"line_end":142,"column_start":5,"column_end":43},"name":"decode_style_single_quoted_text_to_vec","qualname":"::decode::element::style::decode_style_single_quoted_text_to_vec","value":"pub fn decode_style_single_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text from a single quoted text in the `<style>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4664,"byte_end":4667,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4697,"byte_end":4706,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":17156,"byte_end":17197,"line_start":144,"line_end":144,"column_start":5,"column_end":46},"name":"decode_style_single_quoted_text_to_writer","qualname":"::decode::element::style::decode_style_single_quoted_text_to_writer","value":"pub fn decode_style_single_quoted_text_to_writer<S: AsRef<str>,\n                                                 W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text from a single quoted text in the `<style>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5722,"byte_end":5745,"line_start":112,"line_end":112,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5792,"byte_end":5795,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5825,"byte_end":5834,"line_start":116,"line_end":116,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":17463,"byte_end":17494,"line_start":155,"line_end":155,"column_start":5,"column_end":36},"name":"decode_style_double_quoted_text","qualname":"::decode::element::style::decode_style_double_quoted_text","value":"pub fn decode_style_double_quoted_text<S: ?Sized + AsRef<str>>(&S)\n-> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Decode text from a double quoted text in the `<style>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2640,"byte_end":2643,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2673,"byte_end":2682,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":17639,"byte_end":17680,"line_start":157,"line_end":157,"column_start":5,"column_end":46},"name":"decode_style_double_quoted_text_to_string","qualname":"::decode::element::style::decode_style_double_quoted_text_to_string","value":"pub fn decode_style_double_quoted_text_to_string<S: AsRef<str>>(S,\n                                                                &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text from a double quoted text in the `<style>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4383,"byte_end":4386,"line_start":67,"line_end":67,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4416,"byte_end":4425,"line_start":69,"line_end":69,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":17824,"byte_end":17862,"line_start":159,"line_end":159,"column_start":5,"column_end":43},"name":"decode_style_double_quoted_text_to_vec","qualname":"::decode::element::style::decode_style_double_quoted_text_to_vec","value":"pub fn decode_style_double_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text from a double quoted text in the `<style>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4664,"byte_end":4667,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4697,"byte_end":4706,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":17951,"byte_end":17992,"line_start":161,"line_end":161,"column_start":5,"column_end":46},"name":"decode_style_double_quoted_text_to_writer","qualname":"::decode::element::style::decode_style_double_quoted_text_to_writer","value":"pub fn decode_style_double_quoted_text_to_writer<S: AsRef<str>,\n                                                 W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text from a double quoted text in the `<style>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5722,"byte_end":5745,"line_start":112,"line_end":112,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5792,"byte_end":5795,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5825,"byte_end":5834,"line_start":116,"line_end":116,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":18267,"byte_end":18291,"line_start":173,"line_end":173,"column_start":5,"column_end":29},"name":"decode_style_quoted_text","qualname":"::decode::element::style::decode_style_quoted_text","value":"pub fn decode_style_quoted_text<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Decode text from a quoted text in the `<style>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2640,"byte_end":2643,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":2673,"byte_end":2682,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":18429,"byte_end":18463,"line_start":175,"line_end":175,"column_start":5,"column_end":39},"name":"decode_style_quoted_text_to_string","qualname":"::decode::element::style::decode_style_quoted_text_to_string","value":"pub fn decode_style_quoted_text_to_string<S: AsRef<str>>(S, &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text from a quoted text in the `<style>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4383,"byte_end":4386,"line_start":67,"line_end":67,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4416,"byte_end":4425,"line_start":69,"line_end":69,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":18600,"byte_end":18631,"line_start":177,"line_end":177,"column_start":5,"column_end":36},"name":"decode_style_quoted_text_to_vec","qualname":"::decode::element::style::decode_style_quoted_text_to_vec","value":"pub fn decode_style_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text from a quoted text in the `<style>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4664,"byte_end":4667,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":4697,"byte_end":4706,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\style.rs","byte_start":18713,"byte_end":18747,"line_start":179,"line_end":179,"column_start":5,"column_end":39},"name":"decode_style_quoted_text_to_writer","qualname":"::decode::element::style::decode_style_quoted_text_to_writer","value":"pub fn decode_style_quoted_text_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text from a quoted text in the `<style>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5722,"byte_end":5745,"line_start":112,"line_end":112,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5792,"byte_end":5795,"line_start":114,"line_end":114,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\element\\decode_impl.rs","byte_start":5825,"byte_end":5834,"line_start":116,"line_end":116,"column_start":9,"column_end":18}}]},{"kind":"Static","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\tables.rs","byte_start":33346,"byte_end":33360,"line_start":6,"line_end":6,"column_start":12,"column_end":26},"name":"NAMED_ENTITIES","qualname":"::decode::html_entity::tables::NAMED_ENTITIES","value":"[(&[u8], &str); ]","parent":null,"children":[],"decl_id":null,"docs":" The table of HTML named entities ordered by the names.","sig":null,"attributes":[{"value":"/ The table of HTML named entities ordered by the names.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\tables.rs","byte_start":33152,"byte_end":33210,"line_start":1,"line_end":1,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\tables.rs","byte_start":33211,"byte_end":33214,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `&amp;`, `&lt;`, `&gt;` and `&quot;` can be uppercase.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\tables.rs","byte_start":33215,"byte_end":33273,"line_start":3,"line_end":3,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\tables.rs","byte_start":33274,"byte_end":33277,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Source: https://dev.w3.org/html5/html-author/charref","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\tables.rs","byte_start":33278,"byte_end":33334,"line_start":5,"line_end":5,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\mod.rs","byte_start":19053,"byte_end":19073,"line_start":18,"line_end":18,"column_start":8,"column_end":28},"name":"decode_html_entities","qualname":"::decode::html_entity::decode_html_entities","value":"pub fn decode_html_entities<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Decode html entities in a given string.\n","sig":null,"attributes":[{"value":"/ Decode html entities in a given string.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\mod.rs","byte_start":19002,"byte_end":19045,"line_start":17,"line_end":17,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\mod.rs","byte_start":26131,"byte_end":26161,"line_start":255,"line_end":255,"column_start":8,"column_end":38},"name":"decode_html_entities_to_string","qualname":"::decode::html_entity::decode_html_entities_to_string","value":"pub fn decode_html_entities_to_string<S: AsRef<str>>(S, &mut String) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Decode html entities in a given string to a mutable `String` reference and return the decoded string slice.\n","sig":null,"attributes":[{"value":"/ Decode html entities in a given string to a mutable `String` reference and return the decoded string slice.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\mod.rs","byte_start":26012,"byte_end":26123,"line_start":254,"line_end":254,"column_start":1,"column_end":112}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\mod.rs","byte_start":26429,"byte_end":26456,"line_start":260,"line_end":260,"column_start":8,"column_end":35},"name":"decode_html_entities_to_vec","qualname":"::decode::html_entity::decode_html_entities_to_vec","value":"pub fn decode_html_entities_to_vec<S: AsRef<str>>(S, &mut Vec<u8>) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Decode html entities in a given string to a mutable `Vec<u8>` reference and return the decoded data slice.\n","sig":null,"attributes":[{"value":"/ Decode html entities in a given string to a mutable `Vec<u8>` reference and return the decoded data slice.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\mod.rs","byte_start":26311,"byte_end":26421,"line_start":259,"line_end":259,"column_start":1,"column_end":111}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\mod.rs","byte_start":29904,"byte_end":29934,"line_start":379,"line_end":379,"column_start":8,"column_end":38},"name":"decode_html_entities_to_writer","qualname":"::decode::html_entity::decode_html_entities_to_writer","value":"pub fn decode_html_entities_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode html entities in a given string to a writer.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\mod.rs","byte_start":29817,"byte_end":29840,"line_start":377,"line_end":377,"column_start":1,"column_end":24}},{"value":"/ Decode html entities in a given string to a writer.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\decode\\html_entity\\mod.rs","byte_start":29841,"byte_end":29896,"line_start":378,"line_end":378,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":134928,"byte_end":134941,"line_start":148,"line_end":148,"column_start":5,"column_end":18},"name":"encode_script","qualname":"::encode::element::script::encode_script","value":"pub fn encode_script<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in the `<script>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126381,"byte_end":126384,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126414,"byte_end":126423,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":135066,"byte_end":135089,"line_start":150,"line_end":150,"column_start":5,"column_end":28},"name":"encode_script_to_string","qualname":"::encode::element::script::encode_script_to_string","value":"pub fn encode_script_to_string<S: AsRef<str>>(S, &mut String) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in the `<script>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128296,"byte_end":128299,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128329,"byte_end":128338,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":135213,"byte_end":135233,"line_start":152,"line_end":152,"column_start":5,"column_end":25},"name":"encode_script_to_vec","qualname":"::encode::element::script::encode_script_to_vec","value":"pub fn encode_script_to_vec<S: AsRef<str>>(S, &mut Vec<u8>) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in the `<script>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128577,"byte_end":128580,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128610,"byte_end":128619,"line_start":85,"line_end":85,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":135302,"byte_end":135325,"line_start":154,"line_end":154,"column_start":5,"column_end":28},"name":"encode_script_to_writer","qualname":"::encode::element::script::encode_script_to_writer","value":"pub fn encode_script_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in the `<script>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129752,"byte_end":129775,"line_start":124,"line_end":124,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129822,"byte_end":129825,"line_start":126,"line_end":126,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129855,"byte_end":129864,"line_start":128,"line_end":128,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":135596,"byte_end":135628,"line_start":165,"line_end":165,"column_start":5,"column_end":37},"name":"encode_script_single_quoted_text","qualname":"::encode::element::script::encode_script_single_quoted_text","value":"pub fn encode_script_single_quoted_text<S: ?Sized + AsRef<str>>(&S)\n-> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in a single quoted text in the `<script>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126381,"byte_end":126384,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126414,"byte_end":126423,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":135777,"byte_end":135819,"line_start":167,"line_end":167,"column_start":5,"column_end":47},"name":"encode_script_single_quoted_text_to_string","qualname":"::encode::element::script::encode_script_single_quoted_text_to_string","value":"pub fn encode_script_single_quoted_text_to_string<S: AsRef<str>>(S,\n                                                                 &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a single quoted text in the `<script>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128296,"byte_end":128299,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128329,"byte_end":128338,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":135967,"byte_end":136006,"line_start":169,"line_end":169,"column_start":5,"column_end":44},"name":"encode_script_single_quoted_text_to_vec","qualname":"::encode::element::script::encode_script_single_quoted_text_to_vec","value":"pub fn encode_script_single_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a single quoted text in the `<script>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128577,"byte_end":128580,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128610,"byte_end":128619,"line_start":85,"line_end":85,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":136099,"byte_end":136141,"line_start":171,"line_end":171,"column_start":5,"column_end":47},"name":"encode_script_single_quoted_text_to_writer","qualname":"::encode::element::script::encode_script_single_quoted_text_to_writer","value":"pub fn encode_script_single_quoted_text_to_writer<S: AsRef<str>,\n                                                  W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a single quoted text in the `<script>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129752,"byte_end":129775,"line_start":124,"line_end":124,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129822,"byte_end":129825,"line_start":126,"line_end":126,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129855,"byte_end":129864,"line_start":128,"line_end":128,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":136412,"byte_end":136444,"line_start":182,"line_end":182,"column_start":5,"column_end":37},"name":"encode_script_double_quoted_text","qualname":"::encode::element::script::encode_script_double_quoted_text","value":"pub fn encode_script_double_quoted_text<S: ?Sized + AsRef<str>>(&S)\n-> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in a double quoted text in the `<script>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126381,"byte_end":126384,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126414,"byte_end":126423,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":136593,"byte_end":136635,"line_start":184,"line_end":184,"column_start":5,"column_end":47},"name":"encode_script_double_quoted_text_to_string","qualname":"::encode::element::script::encode_script_double_quoted_text_to_string","value":"pub fn encode_script_double_quoted_text_to_string<S: AsRef<str>>(S,\n                                                                 &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a double quoted text in the `<script>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128296,"byte_end":128299,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128329,"byte_end":128338,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":136783,"byte_end":136822,"line_start":186,"line_end":186,"column_start":5,"column_end":44},"name":"encode_script_double_quoted_text_to_vec","qualname":"::encode::element::script::encode_script_double_quoted_text_to_vec","value":"pub fn encode_script_double_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a double quoted text in the `<script>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128577,"byte_end":128580,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128610,"byte_end":128619,"line_start":85,"line_end":85,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":136915,"byte_end":136957,"line_start":188,"line_end":188,"column_start":5,"column_end":47},"name":"encode_script_double_quoted_text_to_writer","qualname":"::encode::element::script::encode_script_double_quoted_text_to_writer","value":"pub fn encode_script_double_quoted_text_to_writer<S: AsRef<str>,\n                                                  W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a double quoted text in the `<script>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129752,"byte_end":129775,"line_start":124,"line_end":124,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129822,"byte_end":129825,"line_start":126,"line_end":126,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129855,"byte_end":129864,"line_start":128,"line_end":128,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":137237,"byte_end":137262,"line_start":200,"line_end":200,"column_start":5,"column_end":30},"name":"encode_script_quoted_text","qualname":"::encode::element::script::encode_script_quoted_text","value":"pub fn encode_script_quoted_text<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in a quoted text in the `<script>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126381,"byte_end":126384,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126414,"byte_end":126423,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":137404,"byte_end":137439,"line_start":202,"line_end":202,"column_start":5,"column_end":40},"name":"encode_script_quoted_text_to_string","qualname":"::encode::element::script::encode_script_quoted_text_to_string","value":"pub fn encode_script_quoted_text_to_string<S: AsRef<str>>(S, &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a quoted text in the `<script>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128296,"byte_end":128299,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128329,"byte_end":128338,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":137580,"byte_end":137612,"line_start":204,"line_end":204,"column_start":5,"column_end":37},"name":"encode_script_quoted_text_to_vec","qualname":"::encode::element::script::encode_script_quoted_text_to_vec","value":"pub fn encode_script_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a quoted text in the `<script>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128577,"byte_end":128580,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128610,"byte_end":128619,"line_start":85,"line_end":85,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\script.rs","byte_start":137698,"byte_end":137733,"line_start":206,"line_end":206,"column_start":5,"column_end":40},"name":"encode_script_quoted_text_to_writer","qualname":"::encode::element::script::encode_script_quoted_text_to_writer","value":"pub fn encode_script_quoted_text_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a quoted text in the `<script>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129752,"byte_end":129775,"line_start":124,"line_end":124,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129822,"byte_end":129825,"line_start":126,"line_end":126,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129855,"byte_end":129864,"line_start":128,"line_end":128,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":141494,"byte_end":141506,"line_start":137,"line_end":137,"column_start":5,"column_end":17},"name":"encode_style","qualname":"::encode::element::style::encode_style","value":"pub fn encode_style<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in the `<style>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126381,"byte_end":126384,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126414,"byte_end":126423,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":141630,"byte_end":141652,"line_start":139,"line_end":139,"column_start":5,"column_end":27},"name":"encode_style_to_string","qualname":"::encode::element::style::encode_style_to_string","value":"pub fn encode_style_to_string<S: AsRef<str>>(S, &mut String) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in the `<style>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128296,"byte_end":128299,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128329,"byte_end":128338,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":141775,"byte_end":141794,"line_start":141,"line_end":141,"column_start":5,"column_end":24},"name":"encode_style_to_vec","qualname":"::encode::element::style::encode_style_to_vec","value":"pub fn encode_style_to_vec<S: AsRef<str>>(S, &mut Vec<u8>) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in the `<style>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128577,"byte_end":128580,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128610,"byte_end":128619,"line_start":85,"line_end":85,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":141862,"byte_end":141884,"line_start":143,"line_end":143,"column_start":5,"column_end":27},"name":"encode_style_to_writer","qualname":"::encode::element::style::encode_style_to_writer","value":"pub fn encode_style_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in the `<style>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129752,"byte_end":129775,"line_start":124,"line_end":124,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129822,"byte_end":129825,"line_start":126,"line_end":126,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129855,"byte_end":129864,"line_start":128,"line_end":128,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":142151,"byte_end":142182,"line_start":154,"line_end":154,"column_start":5,"column_end":36},"name":"encode_style_single_quoted_text","qualname":"::encode::element::style::encode_style_single_quoted_text","value":"pub fn encode_style_single_quoted_text<S: ?Sized + AsRef<str>>(&S)\n-> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in a single quoted text in the `<style>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126381,"byte_end":126384,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126414,"byte_end":126423,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":142330,"byte_end":142371,"line_start":156,"line_end":156,"column_start":5,"column_end":46},"name":"encode_style_single_quoted_text_to_string","qualname":"::encode::element::style::encode_style_single_quoted_text_to_string","value":"pub fn encode_style_single_quoted_text_to_string<S: AsRef<str>>(S,\n                                                                &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a single quoted text in the `<style>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128296,"byte_end":128299,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128329,"byte_end":128338,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":142518,"byte_end":142556,"line_start":158,"line_end":158,"column_start":5,"column_end":43},"name":"encode_style_single_quoted_text_to_vec","qualname":"::encode::element::style::encode_style_single_quoted_text_to_vec","value":"pub fn encode_style_single_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a single quoted text in the `<style>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128577,"byte_end":128580,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128610,"byte_end":128619,"line_start":85,"line_end":85,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":142648,"byte_end":142689,"line_start":160,"line_end":160,"column_start":5,"column_end":46},"name":"encode_style_single_quoted_text_to_writer","qualname":"::encode::element::style::encode_style_single_quoted_text_to_writer","value":"pub fn encode_style_single_quoted_text_to_writer<S: AsRef<str>,\n                                                 W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a single quoted text in the `<style>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129752,"byte_end":129775,"line_start":124,"line_end":124,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129822,"byte_end":129825,"line_start":126,"line_end":126,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129855,"byte_end":129864,"line_start":128,"line_end":128,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":142956,"byte_end":142987,"line_start":171,"line_end":171,"column_start":5,"column_end":36},"name":"encode_style_double_quoted_text","qualname":"::encode::element::style::encode_style_double_quoted_text","value":"pub fn encode_style_double_quoted_text<S: ?Sized + AsRef<str>>(&S)\n-> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in a double quoted text in the `<style>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126381,"byte_end":126384,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126414,"byte_end":126423,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":143135,"byte_end":143176,"line_start":173,"line_end":173,"column_start":5,"column_end":46},"name":"encode_style_double_quoted_text_to_string","qualname":"::encode::element::style::encode_style_double_quoted_text_to_string","value":"pub fn encode_style_double_quoted_text_to_string<S: AsRef<str>>(S,\n                                                                &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a double quoted text in the `<style>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128296,"byte_end":128299,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128329,"byte_end":128338,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":143323,"byte_end":143361,"line_start":175,"line_end":175,"column_start":5,"column_end":43},"name":"encode_style_double_quoted_text_to_vec","qualname":"::encode::element::style::encode_style_double_quoted_text_to_vec","value":"pub fn encode_style_double_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a double quoted text in the `<style>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128577,"byte_end":128580,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128610,"byte_end":128619,"line_start":85,"line_end":85,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":143453,"byte_end":143494,"line_start":177,"line_end":177,"column_start":5,"column_end":46},"name":"encode_style_double_quoted_text_to_writer","qualname":"::encode::element::style::encode_style_double_quoted_text_to_writer","value":"pub fn encode_style_double_quoted_text_to_writer<S: AsRef<str>,\n                                                 W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a double quoted text in the `<style>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129752,"byte_end":129775,"line_start":124,"line_end":124,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129822,"byte_end":129825,"line_start":126,"line_end":126,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129855,"byte_end":129864,"line_start":128,"line_end":128,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":143770,"byte_end":143794,"line_start":189,"line_end":189,"column_start":5,"column_end":29},"name":"encode_style_quoted_text","qualname":"::encode::element::style::encode_style_quoted_text","value":"pub fn encode_style_quoted_text<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in a quoted text in the `<style>` element.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126381,"byte_end":126384,"line_start":4,"line_end":4,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":126414,"byte_end":126423,"line_start":6,"line_end":6,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":143935,"byte_end":143969,"line_start":191,"line_end":191,"column_start":5,"column_end":39},"name":"encode_style_quoted_text_to_string","qualname":"::encode::element::style::encode_style_quoted_text_to_string","value":"pub fn encode_style_quoted_text_to_string<S: AsRef<str>>(S, &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a quoted text in the `<style>` element to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128296,"byte_end":128299,"line_start":75,"line_end":75,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128329,"byte_end":128338,"line_start":77,"line_end":77,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":144109,"byte_end":144140,"line_start":193,"line_end":193,"column_start":5,"column_end":36},"name":"encode_style_quoted_text_to_vec","qualname":"::encode::element::style::encode_style_quoted_text_to_vec","value":"pub fn encode_style_quoted_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a quoted text in the `<style>` element to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128577,"byte_end":128580,"line_start":83,"line_end":83,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":128610,"byte_end":128619,"line_start":85,"line_end":85,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\style.rs","byte_start":144225,"byte_end":144259,"line_start":195,"line_end":195,"column_start":5,"column_end":39},"name":"encode_style_quoted_text_to_writer","qualname":"::encode::element::style::encode_style_quoted_text_to_writer","value":"pub fn encode_style_quoted_text_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a quoted text in the `<style>` element to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129752,"byte_end":129775,"line_start":124,"line_end":124,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129822,"byte_end":129825,"line_start":126,"line_end":126,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\element\\encode_impl.rs","byte_start":129855,"byte_end":129864,"line_start":128,"line_end":128,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":154278,"byte_end":154303,"line_start":23,"line_end":23,"column_start":8,"column_end":33},"name":"encode_unquoted_attribute","qualname":"::encode::html_entity::unquoted_attribute::encode_unquoted_attribute","value":"pub fn encode_unquoted_attribute<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in an unquoted attribute. Except for alphanumeric characters, escape all characters which are less than 128.","sig":null,"attributes":[{"value":"/ Encode text used in an unquoted attribute. Except for alphanumeric characters, escape all characters which are less than 128.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":153923,"byte_end":154052,"line_start":13,"line_end":13,"column_start":1,"column_end":130}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":154053,"byte_end":154056,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The following characters are escaped to named entities:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":154057,"byte_end":154116,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":154117,"byte_end":154120,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `&` => `&amp;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":154121,"byte_end":154141,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/ * `<` => `&lt;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":154142,"byte_end":154161,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/ * `>` => `&gt;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":154162,"byte_end":154181,"line_start":19,"line_end":19,"column_start":1,"column_end":20}},{"value":"/ * `\"` => `&quot;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":154182,"byte_end":154203,"line_start":20,"line_end":20,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":154204,"byte_end":154207,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Other non-alphanumeric characters are escaped to `&#xHH;`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":154208,"byte_end":154270,"line_start":22,"line_end":22,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155489,"byte_end":155524,"line_start":71,"line_end":71,"column_start":8,"column_end":43},"name":"encode_unquoted_attribute_to_string","qualname":"::encode::html_entity::unquoted_attribute::encode_unquoted_attribute_to_string","value":"pub fn encode_unquoted_attribute_to_string<S: AsRef<str>>(S, &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in an unquoted attribute to a mutable `String` reference and return the encoded string slice. Except for alphanumeric characters, escape all characters which are less than 128.","sig":null,"attributes":[{"value":"/ Write text used in an unquoted attribute to a mutable `String` reference and return the encoded string slice. Except for alphanumeric characters, escape all characters which are less than 128.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155057,"byte_end":155253,"line_start":60,"line_end":60,"column_start":1,"column_end":197}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155254,"byte_end":155257,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The following characters are escaped to named entities:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155258,"byte_end":155317,"line_start":62,"line_end":62,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155318,"byte_end":155321,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ * `&` => `&amp;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155322,"byte_end":155342,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/ * `<` => `&lt;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155343,"byte_end":155362,"line_start":65,"line_end":65,"column_start":1,"column_end":20}},{"value":"/ * `>` => `&gt;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155363,"byte_end":155382,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/ * `\"` => `&quot;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155383,"byte_end":155404,"line_start":67,"line_end":67,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155405,"byte_end":155408,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Other non-alphanumeric characters are escaped to `&#xHH;`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155409,"byte_end":155471,"line_start":69,"line_end":69,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155472,"byte_end":155481,"line_start":70,"line_end":70,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":156100,"byte_end":156132,"line_start":85,"line_end":85,"column_start":8,"column_end":40},"name":"encode_unquoted_attribute_to_vec","qualname":"::encode::html_entity::unquoted_attribute::encode_unquoted_attribute_to_vec","value":"pub fn encode_unquoted_attribute_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in an unquoted attribute to a mutable `Vec<u8>` reference and return the encoded data slice. Except for alphanumeric characters, escape all characters which are less than 128.","sig":null,"attributes":[{"value":"/ Write text used in an unquoted attribute to a mutable `Vec<u8>` reference and return the encoded data slice. Except for alphanumeric characters, escape all characters which are less than 128.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155679,"byte_end":155874,"line_start":75,"line_end":75,"column_start":1,"column_end":196}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155875,"byte_end":155878,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ The following characters are escaped to named entities:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155879,"byte_end":155938,"line_start":77,"line_end":77,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155939,"byte_end":155942,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ * `&` => `&amp;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155943,"byte_end":155963,"line_start":79,"line_end":79,"column_start":1,"column_end":21}},{"value":"/ * `<` => `&lt;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155964,"byte_end":155983,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/ * `>` => `&gt;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":155984,"byte_end":156003,"line_start":81,"line_end":81,"column_start":1,"column_end":20}},{"value":"/ * `\"` => `&quot;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":156004,"byte_end":156025,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":156026,"byte_end":156029,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Other non-alphanumeric characters are escaped to `&#xHH;`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":156030,"byte_end":156092,"line_start":84,"line_end":84,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":157205,"byte_end":157240,"line_start":127,"line_end":127,"column_start":8,"column_end":43},"name":"encode_unquoted_attribute_to_writer","qualname":"::encode::html_entity::unquoted_attribute::encode_unquoted_attribute_to_writer","value":"pub fn encode_unquoted_attribute_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in an unquoted attribute to a writer. Except for alphanumeric characters, escape all characters which are less than 128.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":156815,"byte_end":156838,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ Write text used in an unquoted attribute to a writer. Except for alphanumeric characters, escape all characters which are less than 128.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":156839,"byte_end":156979,"line_start":117,"line_end":117,"column_start":1,"column_end":141}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":156980,"byte_end":156983,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ The following characters are escaped to named entities:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":156984,"byte_end":157043,"line_start":119,"line_end":119,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":157044,"byte_end":157047,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ * `&` => `&amp;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":157048,"byte_end":157068,"line_start":121,"line_end":121,"column_start":1,"column_end":21}},{"value":"/ * `<` => `&lt;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":157069,"byte_end":157088,"line_start":122,"line_end":122,"column_start":1,"column_end":20}},{"value":"/ * `>` => `&gt;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":157089,"byte_end":157108,"line_start":123,"line_end":123,"column_start":1,"column_end":20}},{"value":"/ * `\"` => `&quot;`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":157109,"byte_end":157130,"line_start":124,"line_end":124,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":157131,"byte_end":157134,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Other non-alphanumeric characters are escaped to `&#xHH;`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\unquoted_attribute.rs","byte_start":157135,"byte_end":157197,"line_start":126,"line_end":126,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149754,"byte_end":149773,"line_start":203,"line_end":203,"column_start":5,"column_end":24},"name":"encode_text_minimal","qualname":"::encode::html_entity::encode_text_minimal","value":"pub fn encode_text_minimal<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used as regular HTML text.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147095,"byte_end":147098,"line_start":109,"line_end":109,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147128,"byte_end":147137,"line_start":111,"line_end":111,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149893,"byte_end":149922,"line_start":205,"line_end":205,"column_start":5,"column_end":34},"name":"encode_text_minimal_to_string","qualname":"::encode::html_entity::encode_text_minimal_to_string","value":"pub fn encode_text_minimal_to_string<S: AsRef<str>>(S, &mut String) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used as regular HTML text to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148016,"byte_end":148019,"line_start":143,"line_end":143,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148049,"byte_end":148058,"line_start":145,"line_end":145,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":150041,"byte_end":150067,"line_start":207,"line_end":207,"column_start":5,"column_end":31},"name":"encode_text_minimal_to_vec","qualname":"::encode::html_entity::encode_text_minimal_to_vec","value":"pub fn encode_text_minimal_to_vec<S: AsRef<str>>(S, &mut Vec<u8>) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used as regular HTML text to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148297,"byte_end":148300,"line_start":151,"line_end":151,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148330,"byte_end":148339,"line_start":153,"line_end":153,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":150131,"byte_end":150160,"line_start":209,"line_end":209,"column_start":5,"column_end":34},"name":"encode_text_minimal_to_writer","qualname":"::encode::html_entity::encode_text_minimal_to_writer","value":"pub fn encode_text_minimal_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used as regular HTML text to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148973,"byte_end":148996,"line_start":175,"line_end":175,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149043,"byte_end":149046,"line_start":177,"line_end":177,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149076,"byte_end":149085,"line_start":179,"line_end":179,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":150375,"byte_end":150386,"line_start":220,"line_end":220,"column_start":5,"column_end":16},"name":"encode_text","qualname":"::encode::html_entity::encode_text","value":"pub fn encode_text<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used as regular HTML text.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147095,"byte_end":147098,"line_start":109,"line_end":109,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147128,"byte_end":147137,"line_start":111,"line_end":111,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":150506,"byte_end":150527,"line_start":222,"line_end":222,"column_start":5,"column_end":26},"name":"encode_text_to_string","qualname":"::encode::html_entity::encode_text_to_string","value":"pub fn encode_text_to_string<S: AsRef<str>>(S, &mut String) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used as regular HTML text to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148016,"byte_end":148019,"line_start":143,"line_end":143,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148049,"byte_end":148058,"line_start":145,"line_end":145,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":150646,"byte_end":150664,"line_start":224,"line_end":224,"column_start":5,"column_end":23},"name":"encode_text_to_vec","qualname":"::encode::html_entity::encode_text_to_vec","value":"pub fn encode_text_to_vec<S: AsRef<str>>(S, &mut Vec<u8>) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used as regular HTML text to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148297,"byte_end":148300,"line_start":151,"line_end":151,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148330,"byte_end":148339,"line_start":153,"line_end":153,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":150728,"byte_end":150749,"line_start":226,"line_end":226,"column_start":5,"column_end":26},"name":"encode_text_to_writer","qualname":"::encode::html_entity::encode_text_to_writer","value":"pub fn encode_text_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used as regular HTML text to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148973,"byte_end":148996,"line_start":175,"line_end":175,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149043,"byte_end":149046,"line_start":177,"line_end":177,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149076,"byte_end":149085,"line_start":179,"line_end":179,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":151006,"byte_end":151036,"line_start":238,"line_end":238,"column_start":5,"column_end":35},"name":"encode_double_quoted_attribute","qualname":"::encode::html_entity::encode_double_quoted_attribute","value":"pub fn encode_double_quoted_attribute<S: ?Sized + AsRef<str>>(&S)\n-> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in a double-quoted attribute.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147095,"byte_end":147098,"line_start":109,"line_end":109,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147128,"byte_end":147137,"line_start":111,"line_end":111,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":151164,"byte_end":151204,"line_start":240,"line_end":240,"column_start":5,"column_end":45},"name":"encode_double_quoted_attribute_to_string","qualname":"::encode::html_entity::encode_double_quoted_attribute_to_string","value":"pub fn encode_double_quoted_attribute_to_string<S: AsRef<str>>(S, &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a double-quoted attribute to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148016,"byte_end":148019,"line_start":143,"line_end":143,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148049,"byte_end":148058,"line_start":145,"line_end":145,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":151331,"byte_end":151368,"line_start":242,"line_end":242,"column_start":5,"column_end":42},"name":"encode_double_quoted_attribute_to_vec","qualname":"::encode::html_entity::encode_double_quoted_attribute_to_vec","value":"pub fn encode_double_quoted_attribute_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a double-quoted attribute to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148297,"byte_end":148300,"line_start":151,"line_end":151,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148330,"byte_end":148339,"line_start":153,"line_end":153,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":151440,"byte_end":151480,"line_start":244,"line_end":244,"column_start":5,"column_end":45},"name":"encode_double_quoted_attribute_to_writer","qualname":"::encode::html_entity::encode_double_quoted_attribute_to_writer","value":"pub fn encode_double_quoted_attribute_to_writer<S: AsRef<str>,\n                                                W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a double-quoted attribute to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148973,"byte_end":148996,"line_start":175,"line_end":175,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149043,"byte_end":149046,"line_start":177,"line_end":177,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149076,"byte_end":149085,"line_start":179,"line_end":179,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":151737,"byte_end":151767,"line_start":256,"line_end":256,"column_start":5,"column_end":35},"name":"encode_single_quoted_attribute","qualname":"::encode::html_entity::encode_single_quoted_attribute","value":"pub fn encode_single_quoted_attribute<S: ?Sized + AsRef<str>>(&S)\n-> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in a single-quoted attribute.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147095,"byte_end":147098,"line_start":109,"line_end":109,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147128,"byte_end":147137,"line_start":111,"line_end":111,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":151895,"byte_end":151935,"line_start":258,"line_end":258,"column_start":5,"column_end":45},"name":"encode_single_quoted_attribute_to_string","qualname":"::encode::html_entity::encode_single_quoted_attribute_to_string","value":"pub fn encode_single_quoted_attribute_to_string<S: AsRef<str>>(S, &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a single-quoted attribute to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148016,"byte_end":148019,"line_start":143,"line_end":143,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148049,"byte_end":148058,"line_start":145,"line_end":145,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":152062,"byte_end":152099,"line_start":260,"line_end":260,"column_start":5,"column_end":42},"name":"encode_single_quoted_attribute_to_vec","qualname":"::encode::html_entity::encode_single_quoted_attribute_to_vec","value":"pub fn encode_single_quoted_attribute_to_vec<S: AsRef<str>>(S, &mut Vec<u8>)\n-> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a single-quoted attribute to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148297,"byte_end":148300,"line_start":151,"line_end":151,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148330,"byte_end":148339,"line_start":153,"line_end":153,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":152171,"byte_end":152211,"line_start":262,"line_end":262,"column_start":5,"column_end":45},"name":"encode_single_quoted_attribute_to_writer","qualname":"::encode::html_entity::encode_single_quoted_attribute_to_writer","value":"pub fn encode_single_quoted_attribute_to_writer<S: AsRef<str>,\n                                                W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a single-quoted attribute to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148973,"byte_end":148996,"line_start":175,"line_end":175,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149043,"byte_end":149046,"line_start":177,"line_end":177,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149076,"byte_end":149085,"line_start":179,"line_end":179,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":152508,"byte_end":152531,"line_start":275,"line_end":275,"column_start":5,"column_end":28},"name":"encode_quoted_attribute","qualname":"::encode::html_entity::encode_quoted_attribute","value":"pub fn encode_quoted_attribute<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text used in a quoted attribute.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147095,"byte_end":147098,"line_start":109,"line_end":109,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147128,"byte_end":147137,"line_start":111,"line_end":111,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":152652,"byte_end":152685,"line_start":277,"line_end":277,"column_start":5,"column_end":38},"name":"encode_quoted_attribute_to_string","qualname":"::encode::html_entity::encode_quoted_attribute_to_string","value":"pub fn encode_quoted_attribute_to_string<S: AsRef<str>>(S, &mut String)\n-> &str","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a quoted attribute to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148016,"byte_end":148019,"line_start":143,"line_end":143,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148049,"byte_end":148058,"line_start":145,"line_end":145,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":152805,"byte_end":152835,"line_start":279,"line_end":279,"column_start":5,"column_end":35},"name":"encode_quoted_attribute_to_vec","qualname":"::encode::html_entity::encode_quoted_attribute_to_vec","value":"pub fn encode_quoted_attribute_to_vec<S: AsRef<str>>(S, &mut Vec<u8>) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a quoted attribute to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148297,"byte_end":148300,"line_start":151,"line_end":151,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148330,"byte_end":148339,"line_start":153,"line_end":153,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":152900,"byte_end":152933,"line_start":281,"line_end":281,"column_start":5,"column_end":38},"name":"encode_quoted_attribute_to_writer","qualname":"::encode::html_entity::encode_quoted_attribute_to_writer","value":"pub fn encode_quoted_attribute_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Write text used in a quoted attribute to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148973,"byte_end":148996,"line_start":175,"line_end":175,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149043,"byte_end":149046,"line_start":177,"line_end":177,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149076,"byte_end":149085,"line_start":179,"line_end":179,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":153242,"byte_end":153253,"line_start":295,"line_end":295,"column_start":5,"column_end":16},"name":"encode_safe","qualname":"::encode::html_entity::encode_safe","value":"pub fn encode_safe<S: ?Sized + AsRef<str>>(&S) -> Cow<, str>","parent":null,"children":[],"decl_id":null,"docs":" Encode text to prevent special characters functioning.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147095,"byte_end":147098,"line_start":109,"line_end":109,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":147128,"byte_end":147137,"line_start":111,"line_end":111,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":153403,"byte_end":153424,"line_start":297,"line_end":297,"column_start":5,"column_end":26},"name":"encode_safe_to_string","qualname":"::encode::html_entity::encode_safe_to_string","value":"pub fn encode_safe_to_string<S: AsRef<str>>(S, &mut String) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Encode text to prevent special characters functioning and write it to a mutable `String` reference and return the encoded string slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148016,"byte_end":148019,"line_start":143,"line_end":143,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148049,"byte_end":148058,"line_start":145,"line_end":145,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":153573,"byte_end":153591,"line_start":299,"line_end":299,"column_start":5,"column_end":23},"name":"encode_safe_to_vec","qualname":"::encode::html_entity::encode_safe_to_vec","value":"pub fn encode_safe_to_vec<S: AsRef<str>>(S, &mut Vec<u8>) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Encode text to prevent special characters functioning and write it to a mutable `Vec<u8>` reference and return the encoded data slice.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148297,"byte_end":148300,"line_start":151,"line_end":151,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148330,"byte_end":148339,"line_start":153,"line_end":153,"column_start":9,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":153685,"byte_end":153706,"line_start":301,"line_end":301,"column_start":5,"column_end":26},"name":"encode_safe_to_writer","qualname":"::encode::html_entity::encode_safe_to_writer","value":"pub fn encode_safe_to_writer<S: AsRef<str>, W: Write>(S, &mut W)\n-> Result<(), io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Encode text to prevent special characters functioning and write it to a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":148973,"byte_end":148996,"line_start":175,"line_end":175,"column_start":9,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149043,"byte_end":149046,"line_start":177,"line_end":177,"column_start":9,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\html-escape-0.2.9\\src\\encode\\html_entity\\mod.rs","byte_start":149076,"byte_end":149085,"line_start":179,"line_end":179,"column_start":9,"column_end":18}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}