{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5","program":"C:\\Users\\Jamison\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","inflate","C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=49350cb6496ac0d7","-C","extra-filename=-49350cb6496ac0d7","--out-dir","c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps","--extern","adler32=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libadler32-896e78376d82587e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Jamison\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libinflate-49350cb6496ac0d7.rmeta"},"prelude":{"crate_id":{"name":"inflate","disambiguator":[3173084448952873208,7457742264310177239]},"crate_root":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src","external_crates":[{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","num":13,"id":{"name":"adler32","disambiguator":[5664971475563171165,1749485914846394955]}}],"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":432,"byte_end":42253,"line_start":10,"line_end":1039,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2877,"byte_end":2890,"line_start":77,"line_end":77,"column_start":24,"column_end":37},"alias_span":null,"name":"InflateWriter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2927,"byte_end":2940,"line_start":80,"line_end":80,"column_start":23,"column_end":36},"alias_span":null,"name":"inflate_bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2942,"byte_end":2960,"line_start":80,"line_end":80,"column_start":38,"column_end":56},"alias_span":null,"name":"inflate_bytes_zlib","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2962,"byte_end":2992,"line_start":80,"line_end":80,"column_start":58,"column_end":88},"alias_span":null,"name":"inflate_bytes_zlib_no_checksum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":3031,"byte_end":3045,"line_start":83,"line_end":83,"column_start":24,"column_end":38},"alias_span":null,"name":"DeflateDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":3047,"byte_end":3064,"line_start":83,"line_end":83,"column_start":40,"column_end":57},"alias_span":null,"name":"DeflateDecoderBuf","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":432,"byte_end":42253,"line_start":10,"line_end":1039,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":266},{"krate":0,"index":270},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":277},{"krate":0,"index":130},{"krate":0,"index":144},{"krate":0,"index":152},{"krate":0,"index":159},{"krate":0,"index":166},{"krate":0,"index":170},{"krate":0,"index":175},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":242}],"decl_id":null,"docs":" A [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html) decoder written in rust.","sig":null,"attributes":[{"value":"/ A [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html) decoder written in rust.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":432,"byte_end":515,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":516,"byte_end":519,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This library provides functionality to decompress data compressed with the DEFLATE algorithm,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":520,"byte_end":617,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ both with and without a [zlib](https://tools.ietf.org/html/rfc1950) header/trailer.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":618,"byte_end":705,"line_start":13,"line_end":13,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":706,"byte_end":709,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":710,"byte_end":724,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/ The easiest way to get `std::Vec<u8>` containing the decompressed bytes is to use either","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":725,"byte_end":817,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ `inflate::inflate_bytes` or `inflate::inflate_bytes_zlib` (depending on whether","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":818,"byte_end":901,"line_start":17,"line_end":17,"column_start":1,"column_end":84}},{"value":"/ the encoded data has zlib headers and trailers or not). The following example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":902,"byte_end":983,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/ decodes the DEFLATE encoded string \"Hello, world\" and prints it:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":984,"byte_end":1052,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1053,"byte_end":1056,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1057,"byte_end":1068,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ use inflate::inflate_bytes;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1069,"byte_end":1100,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ use std::str::from_utf8;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1101,"byte_end":1129,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1130,"byte_end":1133,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let encoded = [243, 72, 205, 201, 201, 215, 81, 40, 207, 47, 202, 73, 1, 0];","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1134,"byte_end":1214,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ let decoded = inflate_bytes(&encoded).unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1215,"byte_end":1266,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/ println!(\"{}\", from_utf8(&decoded).unwrap()); // prints \"Hello, world\"","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1267,"byte_end":1341,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1342,"byte_end":1349,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1350,"byte_end":1353,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ If you need more flexibility, then the library also provides an implementation","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1354,"byte_end":1436,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/ of `std::io::Writer` in `inflate::writer`. Below is an example using an","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1437,"byte_end":1512,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `inflate::writer::InflateWriter` to decode the DEFLATE encoded string \"Hello, world\":","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1513,"byte_end":1602,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1603,"byte_end":1606,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1607,"byte_end":1618,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ use inflate::InflateWriter;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1619,"byte_end":1650,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1651,"byte_end":1674,"line_start":36,"line_end":36,"column_start":1,"column_end":24}},{"value":"/ use std::str::from_utf8;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1675,"byte_end":1703,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1704,"byte_end":1707,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let encoded = [243, 72, 205, 201, 201, 215, 81, 40, 207, 47, 202, 73, 1, 0];","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1708,"byte_end":1788,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ let mut decoder = InflateWriter::new(Vec::new());","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1789,"byte_end":1842,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/ decoder.write(&encoded).unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1843,"byte_end":1880,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ let decoded = decoder.finish().unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1881,"byte_end":1925,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ println!(\"{}\", from_utf8(&decoded).unwrap()); // prints \"Hello, world\"","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":1926,"byte_end":2000,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2001,"byte_end":2008,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2009,"byte_end":2012,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Finally, if you need even more flexibility, or if you only want to depend on","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2013,"byte_end":2093,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ `core`, you can use the `inflate::InflateStream` API. The below example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2094,"byte_end":2169,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ decodes an array of DEFLATE encoded bytes:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2170,"byte_end":2216,"line_start":48,"line_end":48,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2217,"byte_end":2220,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2221,"byte_end":2232,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ use inflate::InflateStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2233,"byte_end":2264,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2265,"byte_end":2268,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let data = [0x73, 0x49, 0x4d, 0xcb, 0x49, 0x2c, 0x49, 0x55, 0x00, 0x11, 0x00];","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2269,"byte_end":2351,"line_start":53,"line_end":53,"column_start":1,"column_end":83}},{"value":"/ let mut inflater = InflateStream::new();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2352,"byte_end":2396,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/ let mut out = Vec::<u8>::new();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2397,"byte_end":2432,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"/ let mut n = 0;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2433,"byte_end":2451,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ while n < data.len() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2452,"byte_end":2478,"line_start":57,"line_end":57,"column_start":1,"column_end":27}},{"value":"/     let res = inflater.update(&data[n..]);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2479,"byte_end":2525,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/     if let Ok((num_bytes_read, result)) = res {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2526,"byte_end":2577,"line_start":59,"line_end":59,"column_start":1,"column_end":52}},{"value":"/         n += num_bytes_read;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2578,"byte_end":2610,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/         out.extend(result.iter().cloned());","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2611,"byte_end":2658,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2659,"byte_end":2675,"line_start":62,"line_end":62,"column_start":1,"column_end":17}},{"value":"/         res.unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2676,"byte_end":2701,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2702,"byte_end":2711,"line_start":64,"line_end":64,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2712,"byte_end":2717,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":2718,"byte_end":2725,"line_start":66,"line_end":66,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":45001,"byte_end":45014,"line_start":22,"line_end":22,"column_start":12,"column_end":25},"name":"InflateWriter","qualname":"::writer::InflateWriter","value":"InflateWriter {  }","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" A DEFLATE decoder.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44439,"byte_end":44461,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44462,"byte_end":44465,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A struct implementing the `std::io::Write` trait that decompresses DEFLATE","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44466,"byte_end":44544,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ encoded data into the given writer `w`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44545,"byte_end":44588,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44589,"byte_end":44592,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44593,"byte_end":44606,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44607,"byte_end":44610,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44611,"byte_end":44618,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use inflate::InflateWriter;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44619,"byte_end":44650,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/ use std::io::Write;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44651,"byte_end":44674,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44675,"byte_end":44678,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let encoded = [243, 72, 205, 201, 201, 215, 81, 40, 207, 47, 202, 73, 1, 0];","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44679,"byte_end":44759,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ let mut decoder = InflateWriter::new(Vec::new());","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44760,"byte_end":44813,"line_start":17,"line_end":17,"column_start":1,"column_end":54}},{"value":"/ decoder.write(&encoded).unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44814,"byte_end":44851,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/ let decoded = decoder.finish().unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44852,"byte_end":44896,"line_start":19,"line_end":19,"column_start":1,"column_end":45}},{"value":"/ println!(\"{}\", std::str::from_utf8(&decoded).unwrap()); // prints \"Hello, world\"","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44897,"byte_end":44981,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":44982,"byte_end":44989,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":45118,"byte_end":45121,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<InflateWriter<W>>::new","value":"pub fn new(W) -> InflateWriter<W>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":45236,"byte_end":45245,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"from_zlib","qualname":"<InflateWriter<W>>::from_zlib","value":"pub fn from_zlib(W) -> InflateWriter<W>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":45366,"byte_end":45372,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"finish","qualname":"<InflateWriter<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":47955,"byte_end":47968,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"inflate_bytes","qualname":"::utils::inflate_bytes","value":"pub fn inflate_bytes(&[u8]) -> Result<Vec<u8>, String>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the given slice of DEFLATE compressed data.","sig":null,"attributes":[{"value":"/ Decompress the given slice of DEFLATE compressed data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":47817,"byte_end":47875,"line_start":31,"line_end":31,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":47876,"byte_end":47879,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec` with the decompressed data or an error message.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":47880,"byte_end":47947,"line_start":33,"line_end":33,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":48230,"byte_end":48248,"line_start":41,"line_end":41,"column_start":8,"column_end":26},"name":"inflate_bytes_zlib","qualname":"::utils::inflate_bytes_zlib","value":"pub fn inflate_bytes_zlib(&[u8]) -> Result<Vec<u8>, String>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data.","sig":null,"attributes":[{"value":"/ Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":48059,"byte_end":48150,"line_start":38,"line_end":38,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":48151,"byte_end":48154,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec` with the decompressed data or an error message.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":48155,"byte_end":48222,"line_start":40,"line_end":40,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":48569,"byte_end":48599,"line_start":49,"line_end":49,"column_start":8,"column_end":38},"name":"inflate_bytes_zlib_no_checksum","qualname":"::utils::inflate_bytes_zlib_no_checksum","value":"pub fn inflate_bytes_zlib_no_checksum(&[u8]) -> Result<Vec<u8>, String>","parent":null,"children":[],"decl_id":null,"docs":" Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data,\n without calculating and validating the checksum.","sig":null,"attributes":[{"value":"/ Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":48345,"byte_end":48436,"line_start":45,"line_end":45,"column_start":1,"column_end":92}},{"value":"/ without calculating and validating the checksum.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":48437,"byte_end":48489,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":48490,"byte_end":48493,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec` with the decompressed data or an error message.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\utils.rs","byte_start":48494,"byte_end":48561,"line_start":48,"line_end":48,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":51033,"byte_end":51050,"line_start":32,"line_end":32,"column_start":12,"column_end":29},"name":"DeflateDecoderBuf","qualname":"::reader::DeflateDecoderBuf","value":"DeflateDecoderBuf {  }","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"decl_id":null,"docs":" A DEFLATE decoder/decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder/decompressor.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50326,"byte_end":50361,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50362,"byte_end":50365,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Read` interface and takes a stream","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50366,"byte_end":50433,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ of compressed data that implements the `BufRead` trait as input,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50434,"byte_end":50502,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ providing the decompressed data when read from.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50503,"byte_end":50554,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50555,"byte_end":50558,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50559,"byte_end":50572,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50573,"byte_end":50580,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50581,"byte_end":50603,"line_start":21,"line_end":21,"column_start":1,"column_end":23}},{"value":"/ use inflate::DeflateDecoderBuf;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50604,"byte_end":50639,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50640,"byte_end":50643,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ const TEST_STRING: &'static str = \"Hello, world\";","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50644,"byte_end":50697,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/ let encoded = vec![243, 72, 205, 201, 201, 215, 81, 40, 207, 47, 202, 73, 1, 0];","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50698,"byte_end":50782,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/ let mut decoder = DeflateDecoderBuf::new(&encoded[..]);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50783,"byte_end":50842,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/ let mut output = Vec::new();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50843,"byte_end":50875,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/ let status = decoder.read_to_end(&mut output);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50876,"byte_end":50926,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ # let _ = status;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50927,"byte_end":50948,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(String::from_utf8(output).unwrap(), TEST_STRING);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":50949,"byte_end":51013,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":51014,"byte_end":51021,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":51571,"byte_end":51574,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoderBuf<R>>::new","value":"pub fn new(R) -> DeflateDecoderBuf<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Deflatedecoderbuf` to read from a raw deflate stream.\n","sig":null,"attributes":[{"value":"/ Create a new `Deflatedecoderbuf` to read from a raw deflate stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":51488,"byte_end":51559,"line_start":46,"line_end":46,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":51920,"byte_end":51929,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"from_zlib","qualname":"<DeflateDecoderBuf<R>>::from_zlib","value":"pub fn from_zlib(R) -> DeflateDecoderBuf<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.\n","sig":null,"attributes":[{"value":"/ Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":51825,"byte_end":51908,"line_start":57,"line_end":57,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":52338,"byte_end":52359,"line_start":70,"line_end":70,"column_start":12,"column_end":33},"name":"from_zlib_no_checksum","qualname":"<DeflateDecoderBuf<R>>::from_zlib_no_checksum","value":"pub fn from_zlib_no_checksum(R) -> DeflateDecoderBuf<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.\n without calculating and validating the checksum.\n","sig":null,"attributes":[{"value":"/ Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":52186,"byte_end":52269,"line_start":68,"line_end":68,"column_start":5,"column_end":88}},{"value":"/ without calculating and validating the checksum.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":52274,"byte_end":52326,"line_start":69,"line_end":69,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":52906,"byte_end":52911,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoderBuf<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the decompressor, and replaces the current inner `BufRead` instance by `r`.\n without doing any extra reallocations.","sig":null,"attributes":[{"value":"/ Resets the decompressor, and replaces the current inner `BufRead` instance by `r`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":52661,"byte_end":52747,"line_start":82,"line_end":82,"column_start":5,"column_end":91}},{"value":"/ without doing any extra reallocations.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":52752,"byte_end":52794,"line_start":83,"line_end":83,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":52799,"byte_end":52802,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that this function doesn't ensure that all data has been output.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":52807,"byte_end":52880,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":52885,"byte_end":52894,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53202,"byte_end":53212,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"reset_data","qualname":"<DeflateDecoderBuf<R>>::reset_data","value":"pub fn reset_data(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the decoder, but continue to read from the same reader.","sig":null,"attributes":[{"value":"/ Resets the decoder, but continue to read from the same reader.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53024,"byte_end":53090,"line_start":92,"line_end":92,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53095,"byte_end":53098,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that this function doesn't ensure that all data has been output.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53103,"byte_end":53176,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53181,"byte_end":53190,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53358,"byte_end":53365,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoderBuf<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying `BufRead` instance.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying `BufRead` instance.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53271,"byte_end":53332,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53337,"byte_end":53346,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53638,"byte_end":53645,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoderBuf<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying `BufRead` instance.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying `BufRead` instance.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53413,"byte_end":53482,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53487,"byte_end":53490,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may cause surprising results if the decoder is going to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53495,"byte_end":53587,"line_start":108,"line_end":108,"column_start":5,"column_end":97}},{"value":"/ keep being used.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53592,"byte_end":53612,"line_start":109,"line_end":109,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53617,"byte_end":53626,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53879,"byte_end":53889,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoderBuf<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Drops the decoder and return the inner `BufRead` instance.","sig":null,"attributes":[{"value":"/ Drops the decoder and return the inner `BufRead` instance.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53705,"byte_end":53767,"line_start":115,"line_end":115,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53772,"byte_end":53775,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Note that this function doesn't ensure that all data has been output.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53780,"byte_end":53853,"line_start":117,"line_end":117,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53858,"byte_end":53867,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54032,"byte_end":54040,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoderBuf<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total bytes read from the underlying `BufRead` instance.\n","sig":null,"attributes":[{"value":"/ Returns the total bytes read from the underlying `BufRead` instance.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":53934,"byte_end":54006,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54011,"byte_end":54020,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54179,"byte_end":54188,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoderBuf<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of bytes output from this decoder.\n","sig":null,"attributes":[{"value":"/ Returns the total number of bytes output from this decoder.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54090,"byte_end":54153,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54158,"byte_end":54167,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54414,"byte_end":54430,"line_start":139,"line_end":139,"column_start":12,"column_end":28},"name":"current_checksum","qualname":"<DeflateDecoderBuf<R>>::current_checksum","value":"pub fn current_checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the calculated checksum value of the currently decoded data.","sig":null,"attributes":[{"value":"/ Returns the calculated checksum value of the currently decoded data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54239,"byte_end":54311,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54316,"byte_end":54319,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Will return 0 for cases where the checksum is not validated.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54324,"byte_end":54388,"line_start":137,"line_end":137,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54393,"byte_end":54402,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58150,"byte_end":58164,"line_start":233,"line_end":233,"column_start":12,"column_end":26},"name":"DeflateDecoder","qualname":"::reader::DeflateDecoder","value":"DeflateDecoder {  }","parent":null,"children":[{"krate":0,"index":105}],"decl_id":null,"docs":" A DEFLATE decoder/decompressor.","sig":null,"attributes":[{"value":"/ A DEFLATE decoder/decompressor.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57460,"byte_end":57495,"line_start":216,"line_end":216,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57496,"byte_end":57499,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ This structure implements a `Read` interface and takes a stream of compressed data that","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57500,"byte_end":57591,"line_start":218,"line_end":218,"column_start":1,"column_end":92}},{"value":"/ implements the `Read` trait as input,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57592,"byte_end":57633,"line_start":219,"line_end":219,"column_start":1,"column_end":42}},{"value":"/ provoding the decompressed data when read from.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57634,"byte_end":57685,"line_start":220,"line_end":220,"column_start":1,"column_end":52}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57686,"byte_end":57699,"line_start":221,"line_end":221,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57700,"byte_end":57707,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57708,"byte_end":57730,"line_start":223,"line_end":223,"column_start":1,"column_end":23}},{"value":"/ use inflate::DeflateDecoder;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57731,"byte_end":57763,"line_start":224,"line_end":224,"column_start":1,"column_end":33}},{"value":"/ const TEST_STRING: &'static str = \"Hello, world\";","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57764,"byte_end":57817,"line_start":225,"line_end":225,"column_start":1,"column_end":54}},{"value":"/ let encoded = vec![243, 72, 205, 201, 201, 215, 81, 40, 207, 47, 202, 73, 1, 0];","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57818,"byte_end":57902,"line_start":226,"line_end":226,"column_start":1,"column_end":85}},{"value":"/ let mut decoder = DeflateDecoder::new(&encoded[..]);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57903,"byte_end":57959,"line_start":227,"line_end":227,"column_start":1,"column_end":57}},{"value":"/ let mut output = Vec::new();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57960,"byte_end":57992,"line_start":228,"line_end":228,"column_start":1,"column_end":33}},{"value":"/ let status = decoder.read_to_end(&mut output);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":57993,"byte_end":58043,"line_start":229,"line_end":229,"column_start":1,"column_end":51}},{"value":"/ # let _ = status;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58044,"byte_end":58065,"line_start":230,"line_end":230,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(String::from_utf8(output).unwrap(), TEST_STRING);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58066,"byte_end":58130,"line_start":231,"line_end":231,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58131,"byte_end":58138,"line_start":232,"line_end":232,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58403,"byte_end":58406,"line_start":240,"line_end":240,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateDecoder<R>>::new","value":"pub fn new(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Deflatedecoderbuf` to read from a raw deflate stream.\n","sig":null,"attributes":[{"value":"/ Create a new `Deflatedecoderbuf` to read from a raw deflate stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58320,"byte_end":58391,"line_start":239,"line_end":239,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58648,"byte_end":58657,"line_start":247,"line_end":247,"column_start":12,"column_end":21},"name":"from_zlib","qualname":"<DeflateDecoder<R>>::from_zlib","value":"pub fn from_zlib(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.\n","sig":null,"attributes":[{"value":"/ Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58553,"byte_end":58636,"line_start":246,"line_end":246,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58962,"byte_end":58983,"line_start":255,"line_end":255,"column_start":12,"column_end":33},"name":"from_zlib_no_checksum","qualname":"<DeflateDecoder<R>>::from_zlib_no_checksum","value":"pub fn from_zlib_no_checksum(R) -> DeflateDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.\n without calculating and validating the checksum.\n","sig":null,"attributes":[{"value":"/ Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58810,"byte_end":58893,"line_start":253,"line_end":253,"column_start":5,"column_end":88}},{"value":"/ without calculating and validating the checksum.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58898,"byte_end":58950,"line_start":254,"line_end":254,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59393,"byte_end":59398,"line_start":266,"line_end":266,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateDecoder<R>>::reset","value":"pub fn reset(&mut Self, R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Resets the decompressor, and replaces the current inner `BufRead` instance by `r`.\n without doing any extra reallocations.","sig":null,"attributes":[{"value":"/ Resets the decompressor, and replaces the current inner `BufRead` instance by `r`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59148,"byte_end":59234,"line_start":261,"line_end":261,"column_start":5,"column_end":91}},{"value":"/ without doing any extra reallocations.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59239,"byte_end":59281,"line_start":262,"line_end":262,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59286,"byte_end":59289,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Note that this function doesn't ensure that all data has been output.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59294,"byte_end":59367,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59372,"byte_end":59381,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59566,"byte_end":59573,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<DeflateDecoder<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying reader.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59491,"byte_end":59540,"line_start":270,"line_end":270,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59545,"byte_end":59554,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59852,"byte_end":59859,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<DeflateDecoder<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying reader.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59639,"byte_end":59696,"line_start":276,"line_end":276,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59701,"byte_end":59704,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that mutation of the reader may cause surprising results if the decoder is going to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59709,"byte_end":59801,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/ keep being used.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59806,"byte_end":59826,"line_start":279,"line_end":279,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59831,"byte_end":59840,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60022,"byte_end":60032,"line_start":287,"line_end":287,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<DeflateDecoder<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of bytes output from this decoder.\n","sig":null,"attributes":[{"value":"/ Returns the total number of bytes output from this decoder.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":59933,"byte_end":59996,"line_start":285,"line_end":285,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60001,"byte_end":60010,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60310,"byte_end":60320,"line_start":297,"line_end":297,"column_start":12,"column_end":22},"name":"reset_data","qualname":"<DeflateDecoder<R>>::reset_data","value":"pub fn reset_data(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the decoder, but continue to read from the same reader.","sig":null,"attributes":[{"value":"/ Resets the decoder, but continue to read from the same reader.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60132,"byte_end":60198,"line_start":293,"line_end":293,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60203,"byte_end":60206,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function doesn't ensure that all data has been output.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60211,"byte_end":60284,"line_start":295,"line_end":295,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60289,"byte_end":60298,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60463,"byte_end":60471,"line_start":303,"line_end":303,"column_start":12,"column_end":20},"name":"total_in","qualname":"<DeflateDecoder<R>>::total_in","value":"pub fn total_in(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total bytes read from the underlying reader.\n","sig":null,"attributes":[{"value":"/ Returns the total bytes read from the underlying reader.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60377,"byte_end":60437,"line_start":301,"line_end":301,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60442,"byte_end":60451,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60616,"byte_end":60625,"line_start":309,"line_end":309,"column_start":12,"column_end":21},"name":"total_out","qualname":"<DeflateDecoder<R>>::total_out","value":"pub fn total_out(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of bytes output from this decoder.\n","sig":null,"attributes":[{"value":"/ Returns the total number of bytes output from this decoder.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60527,"byte_end":60590,"line_start":307,"line_end":307,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60595,"byte_end":60604,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60857,"byte_end":60873,"line_start":317,"line_end":317,"column_start":12,"column_end":28},"name":"current_checksum","qualname":"<DeflateDecoder<R>>::current_checksum","value":"pub fn current_checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the calculated checksum value of the currently decoded data.","sig":null,"attributes":[{"value":"/ Returns the calculated checksum value of the currently decoded data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60682,"byte_end":60754,"line_start":313,"line_end":313,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60759,"byte_end":60762,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Will return 0 for cases where the checksum is not validated.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60767,"byte_end":60831,"line_start":315,"line_end":315,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60836,"byte_end":60845,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":19690,"byte_end":19703,"line_start":553,"line_end":553,"column_start":12,"column_end":25},"name":"InflateStream","qualname":"::InflateStream","value":"InflateStream {  }","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":19972,"byte_end":19975,"line_start":565,"line_end":565,"column_start":12,"column_end":15},"name":"new","qualname":"<InflateStream>::new","value":"pub fn new() -> InflateStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new stream for decoding raw deflate encoded data.\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":19874,"byte_end":19893,"line_start":563,"line_end":563,"column_start":5,"column_end":24}},{"value":"/ Create a new stream for decoding raw deflate encoded data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":19898,"byte_end":19960,"line_start":564,"line_end":564,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":20301,"byte_end":20310,"line_start":572,"line_end":572,"column_start":12,"column_end":21},"name":"from_zlib","qualname":"<InflateStream>::from_zlib","value":"pub fn from_zlib() -> InflateStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new stream for decoding deflate encoded data with a zlib header and footer\n","sig":null,"attributes":[{"value":"/ Create a new stream for decoding deflate encoded data with a zlib header and footer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":20202,"byte_end":20289,"line_start":571,"line_end":571,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":20689,"byte_end":20710,"line_start":580,"line_end":580,"column_start":12,"column_end":33},"name":"from_zlib_no_checksum","qualname":"<InflateStream>::from_zlib_no_checksum","value":"pub fn from_zlib_no_checksum() -> InflateStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new stream for decoding deflate encoded data with a zlib header and footer","sig":null,"attributes":[{"value":"/ Create a new stream for decoding deflate encoded data with a zlib header and footer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":20438,"byte_end":20525,"line_start":576,"line_end":576,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":20530,"byte_end":20533,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ This version creates a decoder that does not checksum the data to validate it with the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":20538,"byte_end":20628,"line_start":578,"line_end":578,"column_start":5,"column_end":95}},{"value":"/ checksum provided with the zlib wrapper.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":20633,"byte_end":20677,"line_start":579,"line_end":579,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":20845,"byte_end":20850,"line_start":584,"line_end":584,"column_start":12,"column_end":17},"name":"reset","qualname":"<InflateStream>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":21038,"byte_end":21051,"line_start":591,"line_end":591,"column_start":12,"column_end":25},"name":"reset_to_zlib","qualname":"<InflateStream>::reset_to_zlib","value":"pub fn reset_to_zlib(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40949,"byte_end":40955,"line_start":1003,"line_end":1003,"column_start":12,"column_end":18},"name":"update","qualname":"<InflateStream>::update","value":"pub fn update<'a>(&'a mut Self, &[u8]) -> Result<(usize, &'a [u8]), String>","parent":null,"children":[],"decl_id":null,"docs":" Try to uncompress/decode the data in `data`.","sig":null,"attributes":[{"value":"/ Try to uncompress/decode the data in `data`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40289,"byte_end":40337,"line_start":991,"line_end":991,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40342,"byte_end":40345,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ On success, returns how many bytes of the input data was decompressed, and a reference to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40350,"byte_end":40443,"line_start":993,"line_end":993,"column_start":5,"column_end":98}},{"value":"/ the buffer containing the decompressed data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40448,"byte_end":40496,"line_start":994,"line_end":994,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40501,"byte_end":40504,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ This function may not uncompress all the provided data in one call, so it has to be called","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40509,"byte_end":40603,"line_start":996,"line_end":996,"column_start":5,"column_end":99}},{"value":"/ repeatedly with the data that hasn't been decompressed yet as an input until the number of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40608,"byte_end":40702,"line_start":997,"line_end":997,"column_start":5,"column_end":99}},{"value":"/ bytes decoded returned is 0. (See the [top level crate documentation](index.html)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40707,"byte_end":40792,"line_start":998,"line_end":998,"column_start":5,"column_end":90}},{"value":"/ for an example.)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40797,"byte_end":40817,"line_start":999,"line_end":999,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40822,"byte_end":40825,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40830,"byte_end":40842,"line_start":1001,"line_end":1001,"column_start":5,"column_end":17}},{"value":"/ If invalid input data is encountered, a string describing what went wrong is returned.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":40847,"byte_end":40937,"line_start":1002,"line_end":1002,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":42175,"byte_end":42191,"line_start":1036,"line_end":1036,"column_start":12,"column_end":28},"name":"current_checksum","qualname":"<InflateStream>::current_checksum","value":"pub fn current_checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the calculated checksum value of the currently decoded data.","sig":null,"attributes":[{"value":"/ Returns the calculated checksum value of the currently decoded data.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":42014,"byte_end":42086,"line_start":1033,"line_end":1033,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":42091,"byte_end":42094,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ Will return 0 for cases where the checksum is not validated.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":42099,"byte_end":42163,"line_start":1035,"line_end":1035,"column_start":5,"column_end":69}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\checksum.rs","byte_start":42813,"byte_end":42821,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":45088,"byte_end":45101,"line_start":27,"line_end":27,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":45715,"byte_end":45728,"line_start":48,"line_end":48,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":51461,"byte_end":51478,"line_start":45,"line_end":45,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":52634,"byte_end":52651,"line_start":81,"line_end":81,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54527,"byte_end":54544,"line_start":144,"line_end":144,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58296,"byte_end":58310,"line_start":238,"line_end":238,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60108,"byte_end":60122,"line_start":292,"line_end":292,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60960,"byte_end":60974,"line_start":322,"line_end":322,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":7029,"byte_end":7038,"line_start":188,"line_end":188,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":11052,"byte_end":11068,"line_start":323,"line_end":323,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":14184,"byte_end":14196,"line_start":413,"line_end":413,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":19854,"byte_end":19867,"line_start":562,"line_end":562,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":263},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\checksum.rs","byte_start":42813,"byte_end":42821,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":45088,"byte_end":45101,"line_start":27,"line_end":27,"column_start":16,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\writer.rs","byte_start":45715,"byte_end":45728,"line_start":48,"line_end":48,"column_start":26,"column_end":39},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":36},"to":{"krate":1,"index":3251}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":51461,"byte_end":51478,"line_start":45,"line_end":45,"column_start":18,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":52634,"byte_end":52651,"line_start":81,"line_end":81,"column_start":9,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":78},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":54527,"byte_end":54544,"line_start":144,"line_end":144,"column_start":27,"column_end":44},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":78},"to":{"krate":1,"index":3190}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":58296,"byte_end":58310,"line_start":238,"line_end":238,"column_start":15,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60108,"byte_end":60122,"line_start":292,"line_end":292,"column_start":9,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\reader.rs","byte_start":60960,"byte_end":60974,"line_start":322,"line_end":322,"column_start":24,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":3190}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":7029,"byte_end":7038,"line_start":188,"line_end":188,"column_start":10,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":11052,"byte_end":11068,"line_start":323,"line_end":323,"column_start":6,"column_end":22},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":14184,"byte_end":14196,"line_start":413,"line_end":413,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\inflate-0.4.5\\src\\lib.rs","byte_start":19854,"byte_end":19867,"line_start":562,"line_end":562,"column_start":6,"column_end":19},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}}]}