{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44","program":"C:\\Users\\Jamison\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","syn","C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"clone-impls\"","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"parsing\"","--cfg","feature=\"printing\"","--cfg","feature=\"proc-macro\"","--cfg","feature=\"quote\"","-C","metadata=5318c78223e1b61d","-C","extra-filename=-5318c78223e1b61d","--out-dir","c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps","--extern","proc_macro2=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libproc_macro2-72ced00c3746c602.rmeta","--extern","quote=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libquote-48ad3500e876ce22.rmeta","--extern","unicode_xid=c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libunicode_xid-23b2568ada051a2b.rmeta","--cap-lints","allow","--cfg","syn_can_match_trailing_dollar","--cfg","syn_can_use_thread_id","--cfg","syn_can_use_associated_constants","--cfg","syn_can_call_macro_by_path","--cfg","syn_disable_nightly_tests","--error-format=json","--sysroot","C:\\Users\\Jamison\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Jamison\\Desktop\\Web-Dev\\svelte_wasm_qr_code_encoder\\qr_code_encoder\\target\\rls\\debug\\deps\\libsyn-5318c78223e1b61d.rmeta"},"prelude":{"crate_id":{"name":"syn","disambiguator":[12269820349164559737,4143313191466885999]},"crate_root":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src","external_crates":[{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[15394396593765937133,15104794829170053384]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14223085168939843507,9453778982390123811]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10495964697894269666,7444397110794681726]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5630579929119936438,10747952327389013202]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[755004289757070725,4528322009891643596]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12293211462733931105,3605749939090106910]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14880717690889174640,9014378682587101436]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1733233879246965746,6308927592973156139]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2578852399168599952,875302055328020592]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15050766551219055192,6843698544963456792]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14716868785672998615,14481457355720881040]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[7183069464598737283,14932178614966804545]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":13,"id":{"name":"proc_macro","disambiguator":[11518297568100790545,728018435307481581]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":14,"id":{"name":"proc_macro2","disambiguator":[957228420874261499,4983062158798328086]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":15,"id":{"name":"unicode_xid","disambiguator":[1056942811576245126,9650012375750634324]}},{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","num":16,"id":{"name":"quote","disambiguator":[4243213187986691082,12330047681024321284]}}],"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":0,"byte_end":25341,"line_start":1,"line_end":740,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66202,"byte_end":66210,"line_start":829,"line_end":829,"column_start":15,"column_end":23},"alias_span":null,"name":"CapSelf","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":2448},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66202,"byte_end":66210,"line_start":829,"line_end":829,"column_start":15,"column_end":23},"alias_span":null,"name":"CapSelf","value":"","parent":{"krate":0,"index":136}},{"kind":"Use","ref_id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66252,"byte_end":66261,"line_start":831,"line_end":831,"column_start":15,"column_end":24},"alias_span":null,"name":"Self_","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":2461},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66252,"byte_end":66261,"line_start":831,"line_end":831,"column_start":15,"column_end":24},"alias_span":null,"name":"Self_","value":"","parent":{"krate":0,"index":137}},{"kind":"Use","ref_id":{"krate":14,"index":765},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":70504,"byte_end":70509,"line_start":10,"line_end":10,"column_start":22,"column_end":27},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":172}},{"kind":"Use","ref_id":{"krate":14,"index":765},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10841,"byte_end":10846,"line_start":302,"line_end":302,"column_start":16,"column_end":21},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10841,"byte_end":10846,"line_start":302,"line_end":302,"column_start":16,"column_end":21},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":197}},{"kind":"Use","ref_id":{"krate":0,"index":4075},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10974,"byte_end":10983,"line_start":307,"line_end":307,"column_start":16,"column_end":25},"alias_span":null,"name":"AttrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4067},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10985,"byte_end":10994,"line_start":307,"line_end":307,"column_start":27,"column_end":36},"alias_span":null,"name":"Attribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10996,"byte_end":11009,"line_start":307,"line_end":307,"column_start":38,"column_end":51},"alias_span":null,"name":"AttributeArgs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4090},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11011,"byte_end":11015,"line_start":307,"line_end":307,"column_start":53,"column_end":57},"alias_span":null,"name":"Meta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4102},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11017,"byte_end":11025,"line_start":307,"line_end":307,"column_start":59,"column_end":67},"alias_span":null,"name":"MetaList","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4108},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11027,"byte_end":11040,"line_start":307,"line_end":307,"column_start":69,"column_end":82},"alias_span":null,"name":"MetaNameValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4120},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11042,"byte_end":11052,"line_start":307,"line_end":307,"column_start":84,"column_end":94},"alias_span":null,"name":"NestedMeta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4165},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11186,"byte_end":11191,"line_start":313,"line_end":313,"column_start":5,"column_end":10},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4142},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11193,"byte_end":11199,"line_start":313,"line_end":313,"column_start":12,"column_end":18},"alias_span":null,"name":"Fields","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4153},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11201,"byte_end":11212,"line_start":313,"line_end":313,"column_start":20,"column_end":31},"alias_span":null,"name":"FieldsNamed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4158},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11214,"byte_end":11227,"line_start":313,"line_end":313,"column_start":33,"column_end":46},"alias_span":null,"name":"FieldsUnnamed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4131},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11229,"byte_end":11236,"line_start":313,"line_end":313,"column_start":48,"column_end":55},"alias_span":null,"name":"Variant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4197},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11238,"byte_end":11246,"line_start":313,"line_end":313,"column_start":57,"column_end":65},"alias_span":null,"name":"VisCrate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4193},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11248,"byte_end":11257,"line_start":313,"line_end":313,"column_start":67,"column_end":76},"alias_span":null,"name":"VisPublic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11259,"byte_end":11272,"line_start":313,"line_end":313,"column_start":78,"column_end":91},"alias_span":null,"name":"VisRestricted","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4179},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11278,"byte_end":11288,"line_start":314,"line_end":314,"column_start":5,"column_end":15},"alias_span":null,"name":"Visibility","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4290},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11424,"byte_end":11428,"line_start":321,"line_end":321,"column_start":5,"column_end":9},"alias_span":null,"name":"Expr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4421},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11430,"byte_end":11439,"line_start":321,"line_end":321,"column_start":11,"column_end":20},"alias_span":null,"name":"ExprArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4505},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11441,"byte_end":11451,"line_start":321,"line_end":321,"column_start":22,"column_end":32},"alias_span":null,"name":"ExprAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4509},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11453,"byte_end":11465,"line_start":321,"line_end":321,"column_start":34,"column_end":46},"alias_span":null,"name":"ExprAssignOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4579},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11467,"byte_end":11476,"line_start":321,"line_end":321,"column_start":48,"column_end":57},"alias_span":null,"name":"ExprAsync","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4440},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11478,"byte_end":11488,"line_start":321,"line_end":321,"column_start":59,"column_end":69},"alias_span":null,"name":"ExprBinary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4501},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11490,"byte_end":11499,"line_start":321,"line_end":321,"column_start":71,"column_end":80},"alias_span":null,"name":"ExprBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4413},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11501,"byte_end":11508,"line_start":321,"line_end":321,"column_start":82,"column_end":89},"alias_span":null,"name":"ExprBox","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4541},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11514,"byte_end":11523,"line_start":322,"line_end":322,"column_start":5,"column_end":14},"alias_span":null,"name":"ExprBreak","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4425},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11525,"byte_end":11533,"line_start":322,"line_end":322,"column_start":16,"column_end":24},"alias_span":null,"name":"ExprCall","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4458},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11535,"byte_end":11543,"line_start":322,"line_end":322,"column_start":26,"column_end":34},"alias_span":null,"name":"ExprCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4493},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11545,"byte_end":11556,"line_start":322,"line_end":322,"column_start":36,"column_end":47},"alias_span":null,"name":"ExprClosure","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4545},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11558,"byte_end":11570,"line_start":322,"line_end":322,"column_start":49,"column_end":61},"alias_span":null,"name":"ExprContinue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4513},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11572,"byte_end":11581,"line_start":322,"line_end":322,"column_start":63,"column_end":72},"alias_span":null,"name":"ExprField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4481},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11583,"byte_end":11594,"line_start":322,"line_end":322,"column_start":74,"column_end":85},"alias_span":null,"name":"ExprForLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4571},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11596,"byte_end":11605,"line_start":322,"line_end":322,"column_start":87,"column_end":96},"alias_span":null,"name":"ExprGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4473},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11611,"byte_end":11617,"line_start":323,"line_end":323,"column_start":5,"column_end":11},"alias_span":null,"name":"ExprIf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4417},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11619,"byte_end":11630,"line_start":323,"line_end":323,"column_start":13,"column_end":24},"alias_span":null,"name":"ExprInPlace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4520},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11632,"byte_end":11641,"line_start":323,"line_end":323,"column_start":26,"column_end":35},"alias_span":null,"name":"ExprIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4469},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11643,"byte_end":11650,"line_start":323,"line_end":323,"column_start":37,"column_end":44},"alias_span":null,"name":"ExprLet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4453},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11652,"byte_end":11659,"line_start":323,"line_end":323,"column_start":46,"column_end":53},"alias_span":null,"name":"ExprLit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4485},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11661,"byte_end":11669,"line_start":323,"line_end":323,"column_start":55,"column_end":63},"alias_span":null,"name":"ExprLoop","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4553},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11671,"byte_end":11680,"line_start":323,"line_end":323,"column_start":65,"column_end":74},"alias_span":null,"name":"ExprMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4489},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11682,"byte_end":11691,"line_start":323,"line_end":323,"column_start":76,"column_end":85},"alias_span":null,"name":"ExprMatch","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4432},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11697,"byte_end":11711,"line_start":324,"line_end":324,"column_start":5,"column_end":19},"alias_span":null,"name":"ExprMethodCall","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4565},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11713,"byte_end":11722,"line_start":324,"line_end":324,"column_start":21,"column_end":30},"alias_span":null,"name":"ExprParen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4531},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11724,"byte_end":11732,"line_start":324,"line_end":324,"column_start":32,"column_end":40},"alias_span":null,"name":"ExprPath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4527},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11734,"byte_end":11743,"line_start":324,"line_end":324,"column_start":42,"column_end":51},"alias_span":null,"name":"ExprRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4537},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11745,"byte_end":11758,"line_start":324,"line_end":324,"column_start":53,"column_end":66},"alias_span":null,"name":"ExprReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4561},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11760,"byte_end":11770,"line_start":324,"line_end":324,"column_start":68,"column_end":78},"alias_span":null,"name":"ExprRepeat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4549},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11772,"byte_end":11782,"line_start":324,"line_end":324,"column_start":80,"column_end":90},"alias_span":null,"name":"ExprReturn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4557},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11788,"byte_end":11798,"line_start":325,"line_end":325,"column_start":5,"column_end":15},"alias_span":null,"name":"ExprStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4575},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11800,"byte_end":11807,"line_start":325,"line_end":325,"column_start":17,"column_end":24},"alias_span":null,"name":"ExprTry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4583},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11809,"byte_end":11821,"line_start":325,"line_end":325,"column_start":26,"column_end":38},"alias_span":null,"name":"ExprTryBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4436},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11823,"byte_end":11832,"line_start":325,"line_end":325,"column_start":40,"column_end":49},"alias_span":null,"name":"ExprTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4465},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11834,"byte_end":11842,"line_start":325,"line_end":325,"column_start":51,"column_end":59},"alias_span":null,"name":"ExprType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4447},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11844,"byte_end":11853,"line_start":325,"line_end":325,"column_start":61,"column_end":70},"alias_span":null,"name":"ExprUnary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4497},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11855,"byte_end":11865,"line_start":325,"line_end":325,"column_start":72,"column_end":82},"alias_span":null,"name":"ExprUnsafe","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4591},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11867,"byte_end":11879,"line_start":325,"line_end":325,"column_start":84,"column_end":96},"alias_span":null,"name":"ExprVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4477},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11885,"byte_end":11894,"line_start":326,"line_end":326,"column_start":5,"column_end":14},"alias_span":null,"name":"ExprWhile","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4587},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11896,"byte_end":11905,"line_start":326,"line_end":326,"column_start":16,"column_end":25},"alias_span":null,"name":"ExprYield","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4606},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11907,"byte_end":11912,"line_start":326,"line_end":326,"column_start":27,"column_end":32},"alias_span":null,"name":"Index","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4597},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":11914,"byte_end":11920,"line_start":326,"line_end":326,"column_start":34,"column_end":40},"alias_span":null,"name":"Member","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4728},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12365,"byte_end":12379,"line_start":340,"line_end":340,"column_start":5,"column_end":19},"alias_span":null,"name":"BoundLifetimes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4695},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12381,"byte_end":12391,"line_start":340,"line_end":340,"column_start":21,"column_end":31},"alias_span":null,"name":"ConstParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4667},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12393,"byte_end":12405,"line_start":340,"line_end":340,"column_start":33,"column_end":45},"alias_span":null,"name":"GenericParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12407,"byte_end":12415,"line_start":340,"line_end":340,"column_start":47,"column_end":55},"alias_span":null,"name":"Generics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4688},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12417,"byte_end":12428,"line_start":340,"line_end":340,"column_start":57,"column_end":68},"alias_span":null,"name":"LifetimeDef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4804},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12430,"byte_end":12441,"line_start":340,"line_end":340,"column_start":70,"column_end":81},"alias_span":null,"name":"PredicateEq","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4798},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12447,"byte_end":12464,"line_start":341,"line_end":341,"column_start":5,"column_end":22},"alias_span":null,"name":"PredicateLifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4791},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12466,"byte_end":12479,"line_start":341,"line_end":341,"column_start":24,"column_end":37},"alias_span":null,"name":"PredicateType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4752},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12481,"byte_end":12491,"line_start":341,"line_end":341,"column_start":39,"column_end":49},"alias_span":null,"name":"TraitBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4759},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12493,"byte_end":12511,"line_start":341,"line_end":341,"column_start":51,"column_end":69},"alias_span":null,"name":"TraitBoundModifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4679},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12513,"byte_end":12522,"line_start":341,"line_end":341,"column_start":71,"column_end":80},"alias_span":null,"name":"TypeParam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4741},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12524,"byte_end":12538,"line_start":341,"line_end":341,"column_start":82,"column_end":96},"alias_span":null,"name":"TypeParamBound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4768},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12544,"byte_end":12555,"line_start":342,"line_end":342,"column_start":5,"column_end":16},"alias_span":null,"name":"WhereClause","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4779},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12557,"byte_end":12571,"line_start":342,"line_end":342,"column_start":18,"column_end":32},"alias_span":null,"name":"WherePredicate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4707},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12672,"byte_end":12684,"line_start":345,"line_end":345,"column_start":20,"column_end":32},"alias_span":null,"name":"ImplGenerics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4721},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12686,"byte_end":12695,"line_start":345,"line_end":345,"column_start":34,"column_end":43},"alias_span":null,"name":"Turbofish","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4714},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":12697,"byte_end":12709,"line_start":345,"line_end":345,"column_start":45,"column_end":57},"alias_span":null,"name":"TypeGenerics","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4812},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13583,"byte_end":13591,"line_start":367,"line_end":367,"column_start":19,"column_end":27},"alias_span":null,"name":"Lifetime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13583,"byte_end":13591,"line_start":367,"line_end":367,"column_start":19,"column_end":27},"alias_span":null,"name":"Lifetime","value":"","parent":{"krate":0,"index":669}},{"kind":"Use","ref_id":{"krate":0,"index":4940},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13722,"byte_end":13733,"line_start":373,"line_end":373,"column_start":5,"column_end":16},"alias_span":null,"name":"FloatSuffix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4911},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13735,"byte_end":13744,"line_start":373,"line_end":373,"column_start":18,"column_end":27},"alias_span":null,"name":"IntSuffix","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4833},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13746,"byte_end":13749,"line_start":373,"line_end":373,"column_start":29,"column_end":32},"alias_span":null,"name":"Lit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13746,"byte_end":13749,"line_start":373,"line_end":373,"column_start":29,"column_end":32},"alias_span":null,"name":"Lit","value":"","parent":{"krate":0,"index":805}},{"kind":"Use","ref_id":{"krate":0,"index":4884},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13751,"byte_end":13758,"line_start":373,"line_end":373,"column_start":34,"column_end":41},"alias_span":null,"name":"LitBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4901},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13751,"byte_end":13758,"line_start":373,"line_end":373,"column_start":34,"column_end":41},"alias_span":null,"name":"LitBool","value":"","parent":{"krate":0,"index":806}},{"kind":"Use","ref_id":{"krate":0,"index":4868},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13760,"byte_end":13767,"line_start":373,"line_end":373,"column_start":43,"column_end":50},"alias_span":null,"name":"LitByte","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4897},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13760,"byte_end":13767,"line_start":373,"line_end":373,"column_start":43,"column_end":50},"alias_span":null,"name":"LitByte","value":"","parent":{"krate":0,"index":807}},{"kind":"Use","ref_id":{"krate":0,"index":4864},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13769,"byte_end":13779,"line_start":373,"line_end":373,"column_start":52,"column_end":62},"alias_span":null,"name":"LitByteStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4896},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13769,"byte_end":13779,"line_start":373,"line_end":373,"column_start":52,"column_end":62},"alias_span":null,"name":"LitByteStr","value":"","parent":{"krate":0,"index":808}},{"kind":"Use","ref_id":{"krate":0,"index":4872},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13781,"byte_end":13788,"line_start":373,"line_end":373,"column_start":64,"column_end":71},"alias_span":null,"name":"LitChar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4898},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13781,"byte_end":13788,"line_start":373,"line_end":373,"column_start":64,"column_end":71},"alias_span":null,"name":"LitChar","value":"","parent":{"krate":0,"index":809}},{"kind":"Use","ref_id":{"krate":0,"index":4880},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13790,"byte_end":13798,"line_start":373,"line_end":373,"column_start":73,"column_end":81},"alias_span":null,"name":"LitFloat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4900},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13790,"byte_end":13798,"line_start":373,"line_end":373,"column_start":73,"column_end":81},"alias_span":null,"name":"LitFloat","value":"","parent":{"krate":0,"index":810}},{"kind":"Use","ref_id":{"krate":0,"index":4876},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13800,"byte_end":13806,"line_start":373,"line_end":373,"column_start":83,"column_end":89},"alias_span":null,"name":"LitInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4899},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13800,"byte_end":13806,"line_start":373,"line_end":373,"column_start":83,"column_end":89},"alias_span":null,"name":"LitInt","value":"","parent":{"krate":0,"index":811}},{"kind":"Use","ref_id":{"krate":0,"index":4860},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13808,"byte_end":13814,"line_start":373,"line_end":373,"column_start":91,"column_end":97},"alias_span":null,"name":"LitStr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4895},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13808,"byte_end":13814,"line_start":373,"line_end":373,"column_start":91,"column_end":97},"alias_span":null,"name":"LitStr","value":"","parent":{"krate":0,"index":812}},{"kind":"Use","ref_id":{"krate":0,"index":4889},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13820,"byte_end":13831,"line_start":374,"line_end":374,"column_start":5,"column_end":16},"alias_span":null,"name":"LitVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4902},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13820,"byte_end":13831,"line_start":374,"line_end":374,"column_start":5,"column_end":16},"alias_span":null,"name":"LitVerbatim","value":"","parent":{"krate":0,"index":813}},{"kind":"Use","ref_id":{"krate":0,"index":4903},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13833,"byte_end":13841,"line_start":374,"line_end":374,"column_start":18,"column_end":26},"alias_span":null,"name":"StrStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4949},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13970,"byte_end":13975,"line_start":380,"line_end":380,"column_start":15,"column_end":20},"alias_span":null,"name":"Macro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":13977,"byte_end":13991,"line_start":380,"line_end":380,"column_start":22,"column_end":36},"alias_span":null,"name":"MacroDelimiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4982},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14101,"byte_end":14105,"line_start":385,"line_end":385,"column_start":18,"column_end":22},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5000},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14107,"byte_end":14115,"line_start":385,"line_end":385,"column_start":24,"column_end":32},"alias_span":null,"name":"DataEnum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4994},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14117,"byte_end":14127,"line_start":385,"line_end":385,"column_start":34,"column_end":44},"alias_span":null,"name":"DataStruct","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5006},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14129,"byte_end":14138,"line_start":385,"line_end":385,"column_start":46,"column_end":55},"alias_span":null,"name":"DataUnion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14140,"byte_end":14151,"line_start":385,"line_end":385,"column_start":57,"column_end":68},"alias_span":null,"name":"DeriveInput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5011},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14276,"byte_end":14281,"line_start":390,"line_end":390,"column_start":14,"column_end":19},"alias_span":null,"name":"BinOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5099},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14283,"byte_end":14287,"line_start":390,"line_end":390,"column_start":21,"column_end":25},"alias_span":null,"name":"UnOp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5275},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14417,"byte_end":14420,"line_start":396,"line_end":396,"column_start":5,"column_end":8},"alias_span":null,"name":"Abi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5280},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14422,"byte_end":14431,"line_start":396,"line_end":396,"column_start":10,"column_end":19},"alias_span":null,"name":"BareFnArg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5285},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14433,"byte_end":14446,"line_start":396,"line_end":396,"column_start":21,"column_end":34},"alias_span":null,"name":"BareFnArgName","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5294},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14448,"byte_end":14458,"line_start":396,"line_end":396,"column_start":36,"column_end":46},"alias_span":null,"name":"ReturnType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5142},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14460,"byte_end":14464,"line_start":396,"line_end":396,"column_start":48,"column_end":52},"alias_span":null,"name":"Type","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5195},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14466,"byte_end":14475,"line_start":396,"line_end":396,"column_start":54,"column_end":63},"alias_span":null,"name":"TypeArray","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5216},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14477,"byte_end":14487,"line_start":396,"line_end":396,"column_start":65,"column_end":75},"alias_span":null,"name":"TypeBareFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5256},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14489,"byte_end":14498,"line_start":396,"line_end":396,"column_start":77,"column_end":86},"alias_span":null,"name":"TypeGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5246},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14504,"byte_end":14517,"line_start":397,"line_end":397,"column_start":5,"column_end":18},"alias_span":null,"name":"TypeImplTrait","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5261},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14519,"byte_end":14528,"line_start":397,"line_end":397,"column_start":20,"column_end":29},"alias_span":null,"name":"TypeInfer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5265},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14530,"byte_end":14539,"line_start":397,"line_end":397,"column_start":31,"column_end":40},"alias_span":null,"name":"TypeMacro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5227},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14541,"byte_end":14550,"line_start":397,"line_end":397,"column_start":42,"column_end":51},"alias_span":null,"name":"TypeNever","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5251},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14552,"byte_end":14561,"line_start":397,"line_end":397,"column_start":53,"column_end":62},"alias_span":null,"name":"TypeParen","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5236},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14563,"byte_end":14571,"line_start":397,"line_end":397,"column_start":64,"column_end":72},"alias_span":null,"name":"TypePath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5202},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14573,"byte_end":14580,"line_start":397,"line_end":397,"column_start":74,"column_end":81},"alias_span":null,"name":"TypePtr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5209},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14582,"byte_end":14595,"line_start":397,"line_end":397,"column_start":83,"column_end":96},"alias_span":null,"name":"TypeReference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5190},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14601,"byte_end":14610,"line_start":398,"line_end":398,"column_start":5,"column_end":14},"alias_span":null,"name":"TypeSlice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5241},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14612,"byte_end":14627,"line_start":398,"line_end":398,"column_start":16,"column_end":31},"alias_span":null,"name":"TypeTraitObject","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5231},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14629,"byte_end":14638,"line_start":398,"line_end":398,"column_start":33,"column_end":42},"alias_span":null,"name":"TypeTuple","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5269},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14640,"byte_end":14652,"line_start":398,"line_end":398,"column_start":44,"column_end":56},"alias_span":null,"name":"TypeVerbatim","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5342},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14788,"byte_end":14818,"line_start":405,"line_end":405,"column_start":5,"column_end":35},"alias_span":null,"name":"AngleBracketedGenericArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5349},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14820,"byte_end":14827,"line_start":405,"line_end":405,"column_start":37,"column_end":44},"alias_span":null,"name":"Binding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5355},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14829,"byte_end":14839,"line_start":405,"line_end":405,"column_start":46,"column_end":56},"alias_span":null,"name":"Constraint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5324},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14841,"byte_end":14856,"line_start":405,"line_end":405,"column_start":58,"column_end":73},"alias_span":null,"name":"GenericArgument","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5361},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14862,"byte_end":14891,"line_start":406,"line_end":406,"column_start":5,"column_end":34},"alias_span":null,"name":"ParenthesizedGenericArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5303},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14893,"byte_end":14897,"line_start":406,"line_end":406,"column_start":36,"column_end":40},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5313},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14899,"byte_end":14912,"line_start":406,"line_end":406,"column_start":42,"column_end":55},"alias_span":null,"name":"PathArguments","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5308},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14914,"byte_end":14925,"line_start":406,"line_end":406,"column_start":57,"column_end":68},"alias_span":null,"name":"PathSegment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5367},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14927,"byte_end":14932,"line_start":406,"line_end":406,"column_start":70,"column_end":75},"alias_span":null,"name":"QSelf","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":19865,"byte_end":19866,"line_start":549,"line_end":549,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":1770},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452150,"byte_end":452155,"line_start":1,"line_end":1,"column_start":21,"column_end":26},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":1773},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452150,"byte_end":452155,"line_start":1,"line_end":1,"column_start":21,"column_end":26},"alias_span":null,"name":"Clone","value":"","parent":{"krate":0,"index":1556}},{"kind":"Use","ref_id":{"krate":2,"index":1803},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452176,"byte_end":452178,"line_start":2,"line_end":2,"column_start":20,"column_end":22},"alias_span":null,"name":"Eq","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":1805},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452176,"byte_end":452178,"line_start":2,"line_end":2,"column_start":20,"column_end":22},"alias_span":null,"name":"Eq","value":"","parent":{"krate":0,"index":1558}},{"kind":"Use","ref_id":{"krate":2,"index":1798},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452180,"byte_end":452189,"line_start":2,"line_end":2,"column_start":24,"column_end":33},"alias_span":null,"name":"PartialEq","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":1802},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452180,"byte_end":452189,"line_start":2,"line_end":2,"column_start":24,"column_end":33},"alias_span":null,"name":"PartialEq","value":"","parent":{"krate":0,"index":1559}},{"kind":"Use","ref_id":{"krate":2,"index":1997},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452214,"byte_end":452218,"line_start":3,"line_end":3,"column_start":23,"column_end":27},"alias_span":null,"name":"From","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":2069},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452242,"byte_end":452249,"line_start":4,"line_end":4,"column_start":23,"column_end":30},"alias_span":null,"name":"Default","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":2073},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452242,"byte_end":452249,"line_start":4,"line_end":4,"column_start":23,"column_end":30},"alias_span":null,"name":"Default","value":"","parent":{"krate":0,"index":1561}},{"kind":"Use","ref_id":{"krate":5,"index":3417},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452264,"byte_end":452267,"line_start":5,"line_end":5,"column_start":14,"column_end":17},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":6960},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452276,"byte_end":452281,"line_start":5,"line_end":5,"column_start":26,"column_end":31},"alias_span":null,"name":"Debug","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":6963},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452276,"byte_end":452281,"line_start":5,"line_end":5,"column_start":26,"column_end":31},"alias_span":null,"name":"Debug","value":"","parent":{"krate":0,"index":1564}},{"kind":"Use","ref_id":{"krate":2,"index":6928},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452283,"byte_end":452292,"line_start":5,"line_end":5,"column_start":33,"column_end":42},"alias_span":null,"name":"Formatter","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":7148},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452315,"byte_end":452319,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Hash","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":7154},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452315,"byte_end":452319,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Hash","value":"","parent":{"krate":0,"index":1567}},{"kind":"Use","ref_id":{"krate":2,"index":7156},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452321,"byte_end":452327,"line_start":6,"line_end":6,"column_start":27,"column_end":33},"alias_span":null,"name":"Hasher","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":2091},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452351,"byte_end":452355,"line_start":7,"line_end":7,"column_start":22,"column_end":26},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":2092},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452351,"byte_end":452355,"line_start":7,"line_end":7,"column_start":22,"column_end":26},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":1569}},{"kind":"Use","ref_id":{"krate":2,"index":34650},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452387,"byte_end":452391,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":34651},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452387,"byte_end":452391,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":1571}},{"kind":"Use","ref_id":{"krate":2,"index":34652},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452393,"byte_end":452397,"line_start":8,"line_end":8,"column_start":37,"column_end":41},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":34653},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452393,"byte_end":452397,"line_start":8,"line_end":8,"column_start":37,"column_end":41},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":1572}},{"kind":"Use","ref_id":{"krate":2,"index":34813},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452430,"byte_end":452433,"line_start":9,"line_end":9,"column_start":31,"column_end":34},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":34814},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452430,"byte_end":452433,"line_start":9,"line_end":9,"column_start":31,"column_end":34},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":1574}},{"kind":"Use","ref_id":{"krate":2,"index":34810},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452435,"byte_end":452437,"line_start":9,"line_end":9,"column_start":36,"column_end":38},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":2,"index":34811},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452435,"byte_end":452437,"line_start":9,"line_end":9,"column_start":36,"column_end":38},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":1575}},{"kind":"Use","ref_id":{"krate":14,"index":698},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452517,"byte_end":452521,"line_start":14,"line_end":14,"column_start":23,"column_end":27},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":14,"index":693},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452523,"byte_end":452534,"line_start":14,"line_end":14,"column_start":29,"column_end":40},"alias_span":null,"name":"TokenStream2","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":1793},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452568,"byte_end":452577,"line_start":16,"line_end":16,"column_start":15,"column_end":24},"alias_span":null,"name":"IntoSpans","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":13,"index":3043},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452728,"byte_end":452739,"line_start":22,"line_end":22,"column_start":21,"column_end":32},"alias_span":null,"name":"TokenStream","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":16,"index":57},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452787,"byte_end":452795,"line_start":25,"line_end":25,"column_start":17,"column_end":25},"alias_span":null,"name":"ToTokens","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":16,"index":11},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452797,"byte_end":452811,"line_start":25,"line_end":25,"column_start":27,"column_end":41},"alias_span":null,"name":"TokenStreamExt","value":"","parent":{"krate":0,"index":1555}},{"kind":"Use","ref_id":{"krate":0,"index":1895},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481627,"byte_end":481632,"line_start":216,"line_end":216,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":1648}},{"kind":"Use","ref_id":{"krate":0,"index":1893},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481634,"byte_end":481640,"line_start":216,"line_end":216,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":1648}},{"kind":"Use","ref_id":{"krate":0,"index":1622},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481663,"byte_end":481673,"line_start":217,"line_end":217,"column_start":21,"column_end":31},"alias_span":null,"name":"Lookahead1","value":"","parent":{"krate":0,"index":1648}},{"kind":"Use","ref_id":{"krate":0,"index":1634},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481675,"byte_end":481679,"line_start":217,"line_end":217,"column_start":33,"column_end":37},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1648}},{"kind":"Use","ref_id":{"krate":0,"index":1895},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20488,"byte_end":20493,"line_start":581,"line_end":581,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1893},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20495,"byte_end":20501,"line_start":581,"line_end":581,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":0,"byte_end":25341,"line_start":1,"line_end":740,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":14},{"krate":0,"index":57},{"krate":0,"index":172},{"krate":0,"index":197},{"krate":0,"index":5575},{"krate":0,"index":198},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":669},{"krate":0,"index":5847},{"krate":0,"index":670},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":5895},{"krate":0,"index":806},{"krate":0,"index":5897},{"krate":0,"index":807},{"krate":0,"index":5899},{"krate":0,"index":808},{"krate":0,"index":5901},{"krate":0,"index":809},{"krate":0,"index":5903},{"krate":0,"index":810},{"krate":0,"index":5905},{"krate":0,"index":811},{"krate":0,"index":5907},{"krate":0,"index":812},{"krate":0,"index":5909},{"krate":0,"index":813},{"krate":0,"index":5911},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1183},{"krate":0,"index":1212},{"krate":0,"index":1491},{"krate":0,"index":1517},{"krate":0,"index":1535},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1590},{"krate":0,"index":1596},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":1648},{"krate":0,"index":1791},{"krate":0,"index":1834},{"krate":0,"index":1846},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":1928}],"decl_id":null,"docs":" Syn is a parsing library for parsing a stream of Rust tokens into a syntax\n tree of Rust source code.","sig":null,"attributes":[{"value":"/ Syn is a parsing library for parsing a stream of Rust tokens into a syntax","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"/ tree of Rust source code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":79,"byte_end":108,"line_start":2,"line_end":2,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":109,"byte_end":112,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Currently this library is geared toward use in Rust procedural macros, but","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":113,"byte_end":191,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ contains some APIs that may be useful more generally.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":192,"byte_end":249,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":250,"byte_end":253,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ - **Data structures** — Syn provides a complete syntax tree that can","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":254,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/   represent any valid Rust source code. The syntax tree is rooted at","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":329,"byte_end":401,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/   [`syn::File`] which represents a full source file, but there are other","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":402,"byte_end":478,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/   entry points that may be useful to procedural macros including","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":479,"byte_end":547,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/   [`syn::Item`], [`syn::Expr`] and [`syn::Type`].","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":548,"byte_end":601,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":602,"byte_end":605,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - **Custom derives** — Of particular interest to custom derives is","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":606,"byte_end":678,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/   [`syn::DeriveInput`] which is any of the three legal input items to a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":679,"byte_end":754,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   derive macro. An example below shows using this type in a library that can","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":755,"byte_end":835,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/   derive implementations of a trait of your own.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":836,"byte_end":888,"line_start":16,"line_end":16,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":889,"byte_end":892,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ - **Parsing** — Parsing in Syn is built around [parser functions] with the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":893,"byte_end":973,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/   signature `fn(ParseStream) -> Result<T>`. Every syntax tree node defined","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":974,"byte_end":1052,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/   by Syn is individually parsable and may be used as a building block for","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1053,"byte_end":1130,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   custom syntaxes, or you may dream up your own brand new syntax without","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1131,"byte_end":1207,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/   involving any of our syntax tree types.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1208,"byte_end":1253,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1254,"byte_end":1257,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ - **Location information** — Every token parsed by Syn is associated with a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1258,"byte_end":1339,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/   `Span` that tracks line and column information back to the source of that","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1340,"byte_end":1419,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   token. These spans allow a procedural macro to display detailed error","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1420,"byte_end":1495,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/   messages pointing to all the right places in the user's code. There is an","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1496,"byte_end":1575,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/   example of this below.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1576,"byte_end":1604,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1605,"byte_end":1608,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ - **Feature flags** — Functionality is aggressively feature gated so your","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1609,"byte_end":1688,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/   procedural macros enable only what they need, and do not pay in compile","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1689,"byte_end":1766,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/   time for all the rest.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1767,"byte_end":1795,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1796,"byte_end":1799,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`syn::File`]: struct.File.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1800,"byte_end":1835,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ [`syn::Item`]: enum.Item.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1836,"byte_end":1869,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ [`syn::Expr`]: enum.Expr.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1870,"byte_end":1903,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ [`syn::Type`]: enum.Type.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1904,"byte_end":1937,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/ [`syn::DeriveInput`]: struct.DeriveInput.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1938,"byte_end":1987,"line_start":38,"line_end":38,"column_start":1,"column_end":50}},{"value":"/ [parser functions]: parse/index.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":1988,"byte_end":2028,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2029,"byte_end":2032,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ *Version requirement: Syn supports any compiler version back to Rust's very","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2033,"byte_end":2112,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ first support for procedural macros in Rust 1.15.0. Some features especially","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2113,"byte_end":2193,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ around error reporting are only available in newer compilers or on the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2194,"byte_end":2268,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ nightly channel.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2269,"byte_end":2290,"line_start":44,"line_end":44,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2291,"byte_end":2294,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Example of a custom derive","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2295,"byte_end":2328,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2329,"byte_end":2332,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The canonical custom derive using Syn looks like this. We write an ordinary","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2333,"byte_end":2412,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ Rust function tagged with a `proc_macro_derive` attribute and the name of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2413,"byte_end":2490,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ the trait we are deriving. Any time that derive appears in the user's code,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2491,"byte_end":2570,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ the Rust compiler passes their data structure as tokens into our macro. We","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2571,"byte_end":2649,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ get to execute arbitrary Rust code to figure out what to do with those","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2650,"byte_end":2724,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/ tokens, then hand some tokens back to the compiler to compile into the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2725,"byte_end":2799,"line_start":53,"line_end":53,"column_start":1,"column_end":75}},{"value":"/ user's crate.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2800,"byte_end":2817,"line_start":54,"line_end":54,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2818,"byte_end":2821,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ [`TokenStream`]: https://doc.rust-lang.org/proc_macro/struct.TokenStream.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2822,"byte_end":2903,"line_start":56,"line_end":56,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2904,"byte_end":2907,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2908,"byte_end":2919,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2920,"byte_end":2938,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"/ syn = \"0.15\"","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2939,"byte_end":2955,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"/ quote = \"0.6\"","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2956,"byte_end":2973,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2974,"byte_end":2977,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [lib]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2978,"byte_end":2987,"line_start":63,"line_end":63,"column_start":1,"column_end":10}},{"value":"/ proc-macro = true","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":2988,"byte_end":3009,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3010,"byte_end":3017,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3018,"byte_end":3021,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3022,"byte_end":3040,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"/ extern crate proc_macro;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3041,"byte_end":3069,"line_start":68,"line_end":68,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3070,"byte_end":3073,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3074,"byte_end":3106,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"/ use quote::quote;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3107,"byte_end":3128,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/ use syn::{parse_macro_input, DeriveInput};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3129,"byte_end":3175,"line_start":72,"line_end":72,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3176,"byte_end":3179,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3180,"byte_end":3226,"line_start":74,"line_end":74,"column_start":1,"column_end":47}},{"value":"/ #[proc_macro_derive(MyMacro)]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3227,"byte_end":3260,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ # };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3261,"byte_end":3269,"line_start":76,"line_end":76,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(input: TokenStream) -> TokenStream {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3270,"byte_end":3326,"line_start":77,"line_end":77,"column_start":1,"column_end":57}},{"value":"/     // Parse the input tokens into a syntax tree","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3327,"byte_end":3379,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"/     let input = parse_macro_input!(input as DeriveInput);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3380,"byte_end":3441,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3442,"byte_end":3445,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Build the output, possibly using quasi-quotation","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3446,"byte_end":3505,"line_start":81,"line_end":81,"column_start":1,"column_end":60}},{"value":"/     let expanded = quote! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3506,"byte_end":3537,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3538,"byte_end":3556,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/     };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3557,"byte_end":3567,"line_start":84,"line_end":84,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3568,"byte_end":3571,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     // Hand the output tokens back to the compiler","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3572,"byte_end":3626,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/     TokenStream::from(expanded)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3627,"byte_end":3662,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3663,"byte_end":3668,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3669,"byte_end":3676,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3677,"byte_end":3680,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The [`heapsize`] example directory shows a complete working Macros 1.1","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3681,"byte_end":3755,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/ implementation of a custom derive. It works on any Rust compiler 1.15+.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3756,"byte_end":3831,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ The example derives a `HeapSize` trait which computes an estimate of the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3832,"byte_end":3908,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ amount of heap memory owned by a value.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3909,"byte_end":3952,"line_start":94,"line_end":94,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3953,"byte_end":3956,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`heapsize`]: https://github.com/dtolnay/syn/tree/master/examples/heapsize","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":3957,"byte_end":4035,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4036,"byte_end":4039,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4040,"byte_end":4058,"line_start":98,"line_end":98,"column_start":1,"column_end":19}},{"value":"/ pub trait HeapSize {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4059,"byte_end":4083,"line_start":99,"line_end":99,"column_start":1,"column_end":25}},{"value":"/     /// Total number of bytes of heap memory owned by `self`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4084,"byte_end":4149,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/     fn heap_size_of_children(&self) -> usize;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4150,"byte_end":4199,"line_start":101,"line_end":101,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4200,"byte_end":4205,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4206,"byte_end":4213,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4214,"byte_end":4217,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ The custom derive allows users to write `#[derive(HeapSize)]` on data","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4218,"byte_end":4291,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ structures in their program.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4292,"byte_end":4324,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4325,"byte_end":4328,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4329,"byte_end":4347,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4348,"byte_end":4394,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/ #[derive(HeapSize)]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4395,"byte_end":4418,"line_start":110,"line_end":110,"column_start":1,"column_end":24}},{"value":"/ # };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4419,"byte_end":4427,"line_start":111,"line_end":111,"column_start":1,"column_end":9}},{"value":"/ struct Demo<'a, T: ?Sized> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4428,"byte_end":4460,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"/     a: Box<T>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4461,"byte_end":4479,"line_start":113,"line_end":113,"column_start":1,"column_end":19}},{"value":"/     b: u8,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4480,"byte_end":4494,"line_start":114,"line_end":114,"column_start":1,"column_end":15}},{"value":"/     c: &'a str,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4495,"byte_end":4514,"line_start":115,"line_end":115,"column_start":1,"column_end":20}},{"value":"/     d: String,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4515,"byte_end":4533,"line_start":116,"line_end":116,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4534,"byte_end":4539,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4540,"byte_end":4547,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4548,"byte_end":4551,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ## Spans and error reporting","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4552,"byte_end":4584,"line_start":120,"line_end":120,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4585,"byte_end":4588,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ The token-based procedural macro API provides great control over where the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4589,"byte_end":4667,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ compiler's error messages are displayed in user code. Consider the error the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4668,"byte_end":4748,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/ user sees if one of their field types does not implement `HeapSize`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4749,"byte_end":4821,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4822,"byte_end":4825,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4826,"byte_end":4844,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4845,"byte_end":4891,"line_start":127,"line_end":127,"column_start":1,"column_end":47}},{"value":"/ #[derive(HeapSize)]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4892,"byte_end":4915,"line_start":128,"line_end":128,"column_start":1,"column_end":24}},{"value":"/ # };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4916,"byte_end":4924,"line_start":129,"line_end":129,"column_start":1,"column_end":9}},{"value":"/ struct Broken {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4925,"byte_end":4944,"line_start":130,"line_end":130,"column_start":1,"column_end":20}},{"value":"/     ok: String,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4945,"byte_end":4964,"line_start":131,"line_end":131,"column_start":1,"column_end":20}},{"value":"/     bad: std::thread::Thread,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4965,"byte_end":4998,"line_start":132,"line_end":132,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":4999,"byte_end":5004,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5005,"byte_end":5012,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5013,"byte_end":5016,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ By tracking span information all the way through the expansion of a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5017,"byte_end":5088,"line_start":136,"line_end":136,"column_start":1,"column_end":72}},{"value":"/ procedural macro as shown in the `heapsize` example, token-based macros in","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5089,"byte_end":5167,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/ Syn are able to trigger errors that directly pinpoint the source of the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5168,"byte_end":5243,"line_start":138,"line_end":138,"column_start":1,"column_end":76}},{"value":"/ problem.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5244,"byte_end":5256,"line_start":139,"line_end":139,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5257,"byte_end":5260,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5261,"byte_end":5272,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"/ error[E0277]: the trait bound `std::thread::Thread: HeapSize` is not satisfied","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5273,"byte_end":5355,"line_start":142,"line_end":142,"column_start":1,"column_end":83}},{"value":"/  --> src/main.rs:7:5","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5356,"byte_end":5380,"line_start":143,"line_end":143,"column_start":1,"column_end":25}},{"value":"/   |","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5381,"byte_end":5388,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ 7 |     bad: std::thread::Thread,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5389,"byte_end":5426,"line_start":145,"line_end":145,"column_start":1,"column_end":38}},{"value":"/   |     ^^^^^^^^^^^^^^^^^^^^^^^^ the trait `HeapSize` is not implemented for `Thread`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5427,"byte_end":5516,"line_start":146,"line_end":146,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5517,"byte_end":5524,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5525,"byte_end":5528,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ## Parsing a custom syntax","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5529,"byte_end":5559,"line_start":149,"line_end":149,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5560,"byte_end":5563,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The [`lazy-static`] example directory shows the implementation of a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5564,"byte_end":5635,"line_start":151,"line_end":151,"column_start":1,"column_end":72}},{"value":"/ `functionlike!(...)` procedural macro in which the input tokens are parsed","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5636,"byte_end":5714,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"/ using Syn's parsing API.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5715,"byte_end":5743,"line_start":153,"line_end":153,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5744,"byte_end":5747,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`lazy-static`]: https://github.com/dtolnay/syn/tree/master/examples/lazy-static","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5748,"byte_end":5832,"line_start":155,"line_end":155,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5833,"byte_end":5836,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ The example reimplements the popular `lazy_static` crate from crates.io as a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5837,"byte_end":5917,"line_start":157,"line_end":157,"column_start":1,"column_end":81}},{"value":"/ procedural macro.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5918,"byte_end":5939,"line_start":158,"line_end":158,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5940,"byte_end":5943,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5944,"byte_end":5962,"line_start":160,"line_end":160,"column_start":1,"column_end":19}},{"value":"/ # macro_rules! lazy_static {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5963,"byte_end":5995,"line_start":161,"line_end":161,"column_start":1,"column_end":33}},{"value":"/ #     ($($tt:tt)*) => {}","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":5996,"byte_end":6024,"line_start":162,"line_end":162,"column_start":1,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6025,"byte_end":6032,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6033,"byte_end":6038,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/ lazy_static! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6039,"byte_end":6057,"line_start":165,"line_end":165,"column_start":1,"column_end":19}},{"value":"/     static ref USERNAME: Regex = Regex::new(\"^[a-z0-9_-]{3,16}$\").unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6058,"byte_end":6137,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6138,"byte_end":6143,"line_start":167,"line_end":167,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6144,"byte_end":6151,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6152,"byte_end":6155,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ The implementation shows how to trigger custom warnings and error messages","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6156,"byte_end":6234,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"/ on the macro input.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6235,"byte_end":6258,"line_start":171,"line_end":171,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6259,"byte_end":6262,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6263,"byte_end":6274,"line_start":173,"line_end":173,"column_start":1,"column_end":12}},{"value":"/ warning: come on, pick a more creative name","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6275,"byte_end":6322,"line_start":174,"line_end":174,"column_start":1,"column_end":48}},{"value":"/   --> src/main.rs:10:16","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6323,"byte_end":6350,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6351,"byte_end":6359,"line_start":176,"line_end":176,"column_start":1,"column_end":9}},{"value":"/ 10 |     static ref FOO: String = \"lazy_static\".to_owned();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6360,"byte_end":6423,"line_start":177,"line_end":177,"column_start":1,"column_end":64}},{"value":"/    |                ^^^","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6424,"byte_end":6451,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6452,"byte_end":6459,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6460,"byte_end":6463,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ## Testing","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6464,"byte_end":6478,"line_start":181,"line_end":181,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6479,"byte_end":6482,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ When testing macros, we often care not just that the macro can be used","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6483,"byte_end":6557,"line_start":183,"line_end":183,"column_start":1,"column_end":75}},{"value":"/ successfully but also that when the macro is provided with invalid input it","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6558,"byte_end":6637,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"/ produces maximally helpful error messages. Consider using the [`trybuild`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6638,"byte_end":6716,"line_start":185,"line_end":185,"column_start":1,"column_end":79}},{"value":"/ crate to write tests for errors that are emitted by your macro or errors","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6717,"byte_end":6793,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ detected by the Rust compiler in the expanded code following misuse of the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6794,"byte_end":6872,"line_start":187,"line_end":187,"column_start":1,"column_end":79}},{"value":"/ macro. Such tests help avoid regressions from later refactors that","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6873,"byte_end":6943,"line_start":188,"line_end":188,"column_start":1,"column_end":71}},{"value":"/ mistakenly make an error no longer trigger or be less helpful than it used","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":6944,"byte_end":7022,"line_start":189,"line_end":189,"column_start":1,"column_end":79}},{"value":"/ to be.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7023,"byte_end":7033,"line_start":190,"line_end":190,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7034,"byte_end":7037,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ [`trybuild`]: https://github.com/dtolnay/trybuild","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7038,"byte_end":7091,"line_start":192,"line_end":192,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7092,"byte_end":7095,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ## Debugging","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7096,"byte_end":7112,"line_start":194,"line_end":194,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7113,"byte_end":7116,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ When developing a procedural macro it can be helpful to look at what the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7117,"byte_end":7193,"line_start":196,"line_end":196,"column_start":1,"column_end":77}},{"value":"/ generated code looks like. Use `cargo rustc -- -Zunstable-options","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7194,"byte_end":7263,"line_start":197,"line_end":197,"column_start":1,"column_end":70}},{"value":"/ --pretty=expanded` or the [`cargo expand`] subcommand.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7264,"byte_end":7322,"line_start":198,"line_end":198,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7323,"byte_end":7326,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`cargo expand`]: https://github.com/dtolnay/cargo-expand","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7327,"byte_end":7388,"line_start":200,"line_end":200,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7389,"byte_end":7392,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ To show the expanded code for some crate that uses your procedural macro,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7393,"byte_end":7470,"line_start":202,"line_end":202,"column_start":1,"column_end":78}},{"value":"/ run `cargo expand` from that crate. To show the expanded code for one of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7471,"byte_end":7547,"line_start":203,"line_end":203,"column_start":1,"column_end":77}},{"value":"/ your own test cases, run `cargo expand --test the_test_case` where the last","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7548,"byte_end":7627,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"/ argument is the name of the test file without the `.rs` extension.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7628,"byte_end":7698,"line_start":205,"line_end":205,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7699,"byte_end":7702,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ This write-up by Brandon W Maister discusses debugging in more detail:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7703,"byte_end":7777,"line_start":207,"line_end":207,"column_start":1,"column_end":75}},{"value":"/ [Debugging Rust's new Custom Derive system][debugging].","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7778,"byte_end":7837,"line_start":208,"line_end":208,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7838,"byte_end":7841,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [debugging]: https://quodlibetor.github.io/posts/debugging-rusts-new-custom-derive-system/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7842,"byte_end":7936,"line_start":210,"line_end":210,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7937,"byte_end":7940,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ## Optional features","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7941,"byte_end":7965,"line_start":212,"line_end":212,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7966,"byte_end":7969,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Syn puts a lot of functionality behind optional features in order to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":7970,"byte_end":8042,"line_start":214,"line_end":214,"column_start":1,"column_end":73}},{"value":"/ optimize compile time for the most common use cases. The following features","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8043,"byte_end":8122,"line_start":215,"line_end":215,"column_start":1,"column_end":80}},{"value":"/ are available.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8123,"byte_end":8141,"line_start":216,"line_end":216,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8142,"byte_end":8145,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ - **`derive`** *(enabled by default)* — Data structures for representing the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8146,"byte_end":8228,"line_start":218,"line_end":218,"column_start":1,"column_end":81}},{"value":"/   possible input to a custom derive, including structs and enums and types.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8229,"byte_end":8308,"line_start":219,"line_end":219,"column_start":1,"column_end":80}},{"value":"/ - **`full`** — Data structures for representing the syntax tree of all valid","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8309,"byte_end":8391,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/   Rust source code, including items and expressions.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8392,"byte_end":8448,"line_start":221,"line_end":221,"column_start":1,"column_end":57}},{"value":"/ - **`parsing`** *(enabled by default)* — Ability to parse input tokens into","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8449,"byte_end":8530,"line_start":222,"line_end":222,"column_start":1,"column_end":80}},{"value":"/   a syntax tree node of a chosen type.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8531,"byte_end":8573,"line_start":223,"line_end":223,"column_start":1,"column_end":43}},{"value":"/ - **`printing`** *(enabled by default)* — Ability to print a syntax tree","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8574,"byte_end":8652,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/   node as tokens of Rust source code.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8653,"byte_end":8694,"line_start":225,"line_end":225,"column_start":1,"column_end":42}},{"value":"/ - **`visit`** — Trait for traversing a syntax tree.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8695,"byte_end":8752,"line_start":226,"line_end":226,"column_start":1,"column_end":56}},{"value":"/ - **`visit-mut`** — Trait for traversing and mutating in place a syntax","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8753,"byte_end":8830,"line_start":227,"line_end":227,"column_start":1,"column_end":76}},{"value":"/   tree.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8831,"byte_end":8842,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ - **`fold`** — Trait for transforming an owned syntax tree.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8843,"byte_end":8908,"line_start":229,"line_end":229,"column_start":1,"column_end":64}},{"value":"/ - **`clone-impls`** *(enabled by default)* — Clone impls for all syntax tree","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8909,"byte_end":8991,"line_start":230,"line_end":230,"column_start":1,"column_end":81}},{"value":"/   types.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":8992,"byte_end":9004,"line_start":231,"line_end":231,"column_start":1,"column_end":13}},{"value":"/ - **`extra-traits`** — Debug, Eq, PartialEq, Hash impls for all syntax tree","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":9005,"byte_end":9086,"line_start":232,"line_end":232,"column_start":1,"column_end":80}},{"value":"/   types.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":9087,"byte_end":9099,"line_start":233,"line_end":233,"column_start":1,"column_end":13}},{"value":"/ - **`proc-macro`** *(enabled by default)* — Runtime dependency on the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":9100,"byte_end":9175,"line_start":234,"line_end":234,"column_start":1,"column_end":74}},{"value":"/   dynamic library libproc_macro from rustc toolchain.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":9176,"byte_end":9233,"line_start":235,"line_end":235,"column_start":1,"column_end":58}},{"value":"allow(unknown_lints, bare_trait_objects, ellipsis_inclusive_range_patterns)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":9350,"byte_end":9429,"line_start":239,"line_end":239,"column_start":1,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"group","qualname":"::group","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":5463},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":51}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10714,"byte_end":10741,"line_start":293,"line_end":293,"column_start":1,"column_end":28}},{"value":"macro_use","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10757,"byte_end":10769,"line_start":295,"line_end":295,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30082,"byte_end":30088,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Parens","qualname":"::group::Parens","value":"Parens { token, content }","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30103,"byte_end":30108,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"token","qualname":"::group::Parens::token","value":"token::Paren","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30132,"byte_end":30139,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"content","qualname":"::group::Parens::content","value":"parse::ParseBuffer<'a>","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30206,"byte_end":30212,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"Braces","qualname":"::group::Braces","value":"Braces { token, content }","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30227,"byte_end":30232,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"token","qualname":"::group::Braces::token","value":"token::Brace","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30256,"byte_end":30263,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"content","qualname":"::group::Braces::content","value":"parse::ParseBuffer<'a>","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30330,"byte_end":30338,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"Brackets","qualname":"::group::Brackets","value":"Brackets { token, content }","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30353,"byte_end":30358,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"name":"token","qualname":"::group::Brackets::token","value":"token::Bracket","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30384,"byte_end":30391,"line_start":26,"line_end":26,"column_start":9,"column_end":16},"name":"content","qualname":"::group::Brackets::content","value":"parse::ParseBuffer<'a>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30508,"byte_end":30513,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"Group","qualname":"::group::Group","value":"Group { token, content }","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(feature = \"full\", feature = \"derive\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30432,"byte_end":30481,"line_start":30,"line_end":30,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30528,"byte_end":30533,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"token","qualname":"::group::Group::token","value":"token::Group","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30557,"byte_end":30564,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"content","qualname":"::group::Group::content","value":"parse::ParseBuffer<'a>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30627,"byte_end":30639,"line_start":39,"line_end":39,"column_start":8,"column_end":20},"name":"parse_parens","qualname":"::group::parse_parens","value":"pub fn parse_parens<'a>(&ParseBuffer) -> Result<Parens>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":30887,"byte_end":30899,"line_start":48,"line_end":48,"column_start":8,"column_end":20},"name":"parse_braces","qualname":"::group::parse_braces","value":"pub fn parse_braces<'a>(&ParseBuffer) -> Result<Braces>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":31141,"byte_end":31155,"line_start":57,"line_end":57,"column_start":8,"column_end":22},"name":"parse_brackets","qualname":"::group::parse_brackets","value":"pub fn parse_brackets<'a>(&ParseBuffer) -> Result<Brackets>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"token","qualname":"::token","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":5491},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":5493},{"krate":0,"index":75},{"krate":0,"index":5495},{"krate":0,"index":76},{"krate":0,"index":5497},{"krate":0,"index":77},{"krate":0,"index":5499},{"krate":0,"index":78},{"krate":0,"index":5501},{"krate":0,"index":79},{"krate":0,"index":5503},{"krate":0,"index":80},{"krate":0,"index":5505},{"krate":0,"index":81},{"krate":0,"index":5507},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":1930},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1974},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":1981},{"krate":0,"index":1987},{"krate":0,"index":1984},{"krate":0,"index":1975},{"krate":0,"index":1978},{"krate":0,"index":1988},{"krate":0,"index":1991},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":2669},{"krate":0,"index":2673},{"krate":0,"index":2671},{"krate":0,"index":1993},{"krate":0,"index":1996},{"krate":0,"index":1998},{"krate":0,"index":2000},{"krate":0,"index":2002},{"krate":0,"index":2005},{"krate":0,"index":2674},{"krate":0,"index":2678},{"krate":0,"index":2676},{"krate":0,"index":2006},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2679},{"krate":0,"index":2683},{"krate":0,"index":2681},{"krate":0,"index":2019},{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2684},{"krate":0,"index":2688},{"krate":0,"index":2686},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2037},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2044},{"krate":0,"index":2689},{"krate":0,"index":2693},{"krate":0,"index":2691},{"krate":0,"index":2045},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2054},{"krate":0,"index":2057},{"krate":0,"index":2694},{"krate":0,"index":2698},{"krate":0,"index":2696},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2699},{"krate":0,"index":2703},{"krate":0,"index":2701},{"krate":0,"index":2071},{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2704},{"krate":0,"index":2708},{"krate":0,"index":2706},{"krate":0,"index":2084},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2096},{"krate":0,"index":2709},{"krate":0,"index":2713},{"krate":0,"index":2711},{"krate":0,"index":2097},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2106},{"krate":0,"index":2109},{"krate":0,"index":2714},{"krate":0,"index":2718},{"krate":0,"index":2716},{"krate":0,"index":2110},{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2122},{"krate":0,"index":2719},{"krate":0,"index":2723},{"krate":0,"index":2721},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2135},{"krate":0,"index":2724},{"krate":0,"index":2728},{"krate":0,"index":2726},{"krate":0,"index":2136},{"krate":0,"index":2139},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2148},{"krate":0,"index":2729},{"krate":0,"index":2733},{"krate":0,"index":2731},{"krate":0,"index":2149},{"krate":0,"index":2152},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2734},{"krate":0,"index":2738},{"krate":0,"index":2736},{"krate":0,"index":2162},{"krate":0,"index":2165},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2174},{"krate":0,"index":2739},{"krate":0,"index":2743},{"krate":0,"index":2741},{"krate":0,"index":2175},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2184},{"krate":0,"index":2187},{"krate":0,"index":2744},{"krate":0,"index":2748},{"krate":0,"index":2746},{"krate":0,"index":2188},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2200},{"krate":0,"index":2749},{"krate":0,"index":2753},{"krate":0,"index":2751},{"krate":0,"index":2201},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2213},{"krate":0,"index":2754},{"krate":0,"index":2758},{"krate":0,"index":2756},{"krate":0,"index":2214},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2226},{"krate":0,"index":2759},{"krate":0,"index":2763},{"krate":0,"index":2761},{"krate":0,"index":2227},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2239},{"krate":0,"index":2764},{"krate":0,"index":2768},{"krate":0,"index":2766},{"krate":0,"index":2240},{"krate":0,"index":2243},{"krate":0,"index":2245},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2252},{"krate":0,"index":2769},{"krate":0,"index":2773},{"krate":0,"index":2771},{"krate":0,"index":2253},{"krate":0,"index":2256},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2774},{"krate":0,"index":2778},{"krate":0,"index":2776},{"krate":0,"index":2266},{"krate":0,"index":2269},{"krate":0,"index":2271},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2779},{"krate":0,"index":2783},{"krate":0,"index":2781},{"krate":0,"index":2279},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2784},{"krate":0,"index":2788},{"krate":0,"index":2786},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2297},{"krate":0,"index":2299},{"krate":0,"index":2301},{"krate":0,"index":2304},{"krate":0,"index":2789},{"krate":0,"index":2793},{"krate":0,"index":2791},{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":2310},{"krate":0,"index":2312},{"krate":0,"index":2314},{"krate":0,"index":2317},{"krate":0,"index":2794},{"krate":0,"index":2798},{"krate":0,"index":2796},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2325},{"krate":0,"index":2327},{"krate":0,"index":2330},{"krate":0,"index":2799},{"krate":0,"index":2803},{"krate":0,"index":2801},{"krate":0,"index":2331},{"krate":0,"index":2334},{"krate":0,"index":2336},{"krate":0,"index":2338},{"krate":0,"index":2340},{"krate":0,"index":2343},{"krate":0,"index":2804},{"krate":0,"index":2808},{"krate":0,"index":2806},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2349},{"krate":0,"index":2351},{"krate":0,"index":2353},{"krate":0,"index":2356},{"krate":0,"index":2809},{"krate":0,"index":2813},{"krate":0,"index":2811},{"krate":0,"index":2357},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2364},{"krate":0,"index":2366},{"krate":0,"index":2369},{"krate":0,"index":2814},{"krate":0,"index":2818},{"krate":0,"index":2816},{"krate":0,"index":2370},{"krate":0,"index":2373},{"krate":0,"index":2375},{"krate":0,"index":2377},{"krate":0,"index":2379},{"krate":0,"index":2382},{"krate":0,"index":2819},{"krate":0,"index":2823},{"krate":0,"index":2821},{"krate":0,"index":2383},{"krate":0,"index":2386},{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2395},{"krate":0,"index":2824},{"krate":0,"index":2828},{"krate":0,"index":2826},{"krate":0,"index":2396},{"krate":0,"index":2399},{"krate":0,"index":2401},{"krate":0,"index":2403},{"krate":0,"index":2405},{"krate":0,"index":2408},{"krate":0,"index":2829},{"krate":0,"index":2833},{"krate":0,"index":2831},{"krate":0,"index":2409},{"krate":0,"index":2412},{"krate":0,"index":2414},{"krate":0,"index":2416},{"krate":0,"index":2418},{"krate":0,"index":2421},{"krate":0,"index":2834},{"krate":0,"index":2838},{"krate":0,"index":2836},{"krate":0,"index":2422},{"krate":0,"index":2425},{"krate":0,"index":2427},{"krate":0,"index":2429},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2839},{"krate":0,"index":2843},{"krate":0,"index":2841},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2442},{"krate":0,"index":2444},{"krate":0,"index":2447},{"krate":0,"index":2844},{"krate":0,"index":2848},{"krate":0,"index":2846},{"krate":0,"index":2448},{"krate":0,"index":2451},{"krate":0,"index":2453},{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2460},{"krate":0,"index":2849},{"krate":0,"index":2853},{"krate":0,"index":2851},{"krate":0,"index":2461},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2473},{"krate":0,"index":2854},{"krate":0,"index":2858},{"krate":0,"index":2856},{"krate":0,"index":2474},{"krate":0,"index":2477},{"krate":0,"index":2479},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2486},{"krate":0,"index":2859},{"krate":0,"index":2863},{"krate":0,"index":2861},{"krate":0,"index":2487},{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2499},{"krate":0,"index":2864},{"krate":0,"index":2868},{"krate":0,"index":2866},{"krate":0,"index":2500},{"krate":0,"index":2503},{"krate":0,"index":2505},{"krate":0,"index":2507},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2869},{"krate":0,"index":2873},{"krate":0,"index":2871},{"krate":0,"index":2513},{"krate":0,"index":2516},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2522},{"krate":0,"index":2525},{"krate":0,"index":2874},{"krate":0,"index":2878},{"krate":0,"index":2876},{"krate":0,"index":2526},{"krate":0,"index":2529},{"krate":0,"index":2531},{"krate":0,"index":2533},{"krate":0,"index":2535},{"krate":0,"index":2538},{"krate":0,"index":2879},{"krate":0,"index":2883},{"krate":0,"index":2881},{"krate":0,"index":2539},{"krate":0,"index":2542},{"krate":0,"index":2544},{"krate":0,"index":2546},{"krate":0,"index":2548},{"krate":0,"index":2551},{"krate":0,"index":2884},{"krate":0,"index":2888},{"krate":0,"index":2886},{"krate":0,"index":2552},{"krate":0,"index":2555},{"krate":0,"index":2557},{"krate":0,"index":2559},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2889},{"krate":0,"index":2893},{"krate":0,"index":2891},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2577},{"krate":0,"index":2894},{"krate":0,"index":2898},{"krate":0,"index":2896},{"krate":0,"index":2578},{"krate":0,"index":2581},{"krate":0,"index":2583},{"krate":0,"index":2585},{"krate":0,"index":2587},{"krate":0,"index":2590},{"krate":0,"index":2899},{"krate":0,"index":2903},{"krate":0,"index":2901},{"krate":0,"index":2591},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2603},{"krate":0,"index":2904},{"krate":0,"index":2908},{"krate":0,"index":2906},{"krate":0,"index":2604},{"krate":0,"index":2607},{"krate":0,"index":2609},{"krate":0,"index":2611},{"krate":0,"index":2613},{"krate":0,"index":2616},{"krate":0,"index":2909},{"krate":0,"index":2913},{"krate":0,"index":2911},{"krate":0,"index":2617},{"krate":0,"index":2620},{"krate":0,"index":2622},{"krate":0,"index":2624},{"krate":0,"index":2626},{"krate":0,"index":2629},{"krate":0,"index":2914},{"krate":0,"index":2918},{"krate":0,"index":2916},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2635},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2919},{"krate":0,"index":2923},{"krate":0,"index":2921},{"krate":0,"index":2643},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2650},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2924},{"krate":0,"index":2928},{"krate":0,"index":2926},{"krate":0,"index":2656},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2663},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":3303},{"krate":0,"index":3309},{"krate":0,"index":3306},{"krate":0,"index":3297},{"krate":0,"index":3300},{"krate":0,"index":3310},{"krate":0,"index":3313},{"krate":0,"index":2929},{"krate":0,"index":2931},{"krate":0,"index":2933},{"krate":0,"index":2936},{"krate":0,"index":3321},{"krate":0,"index":3327},{"krate":0,"index":3324},{"krate":0,"index":3315},{"krate":0,"index":3318},{"krate":0,"index":2937},{"krate":0,"index":2939},{"krate":0,"index":2941},{"krate":0,"index":2944},{"krate":0,"index":3334},{"krate":0,"index":3340},{"krate":0,"index":3337},{"krate":0,"index":3328},{"krate":0,"index":3331},{"krate":0,"index":3341},{"krate":0,"index":3344},{"krate":0,"index":2945},{"krate":0,"index":2947},{"krate":0,"index":2949},{"krate":0,"index":2952},{"krate":0,"index":3352},{"krate":0,"index":3358},{"krate":0,"index":3355},{"krate":0,"index":3346},{"krate":0,"index":3349},{"krate":0,"index":2953},{"krate":0,"index":2955},{"krate":0,"index":2957},{"krate":0,"index":2960},{"krate":0,"index":3365},{"krate":0,"index":3371},{"krate":0,"index":3368},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":2961},{"krate":0,"index":2963},{"krate":0,"index":2965},{"krate":0,"index":2968},{"krate":0,"index":3378},{"krate":0,"index":3384},{"krate":0,"index":3381},{"krate":0,"index":3372},{"krate":0,"index":3375},{"krate":0,"index":3385},{"krate":0,"index":3388},{"krate":0,"index":2969},{"krate":0,"index":2971},{"krate":0,"index":2973},{"krate":0,"index":2976},{"krate":0,"index":3396},{"krate":0,"index":3402},{"krate":0,"index":3399},{"krate":0,"index":3390},{"krate":0,"index":3393},{"krate":0,"index":3403},{"krate":0,"index":3406},{"krate":0,"index":2977},{"krate":0,"index":2979},{"krate":0,"index":2981},{"krate":0,"index":2984},{"krate":0,"index":3414},{"krate":0,"index":3420},{"krate":0,"index":3417},{"krate":0,"index":3408},{"krate":0,"index":3411},{"krate":0,"index":3421},{"krate":0,"index":3424},{"krate":0,"index":2985},{"krate":0,"index":2987},{"krate":0,"index":2989},{"krate":0,"index":2992},{"krate":0,"index":3432},{"krate":0,"index":3438},{"krate":0,"index":3435},{"krate":0,"index":3426},{"krate":0,"index":3429},{"krate":0,"index":2993},{"krate":0,"index":2995},{"krate":0,"index":2997},{"krate":0,"index":3000},{"krate":0,"index":3445},{"krate":0,"index":3451},{"krate":0,"index":3448},{"krate":0,"index":3439},{"krate":0,"index":3442},{"krate":0,"index":3452},{"krate":0,"index":3455},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3463},{"krate":0,"index":3469},{"krate":0,"index":3466},{"krate":0,"index":3457},{"krate":0,"index":3460},{"krate":0,"index":3009},{"krate":0,"index":3011},{"krate":0,"index":3013},{"krate":0,"index":3016},{"krate":0,"index":3476},{"krate":0,"index":3482},{"krate":0,"index":3479},{"krate":0,"index":3470},{"krate":0,"index":3473},{"krate":0,"index":3483},{"krate":0,"index":3486},{"krate":0,"index":3017},{"krate":0,"index":3019},{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3494},{"krate":0,"index":3500},{"krate":0,"index":3497},{"krate":0,"index":3488},{"krate":0,"index":3491},{"krate":0,"index":3501},{"krate":0,"index":3504},{"krate":0,"index":3025},{"krate":0,"index":3027},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3512},{"krate":0,"index":3518},{"krate":0,"index":3515},{"krate":0,"index":3506},{"krate":0,"index":3509},{"krate":0,"index":3033},{"krate":0,"index":3035},{"krate":0,"index":3037},{"krate":0,"index":3040},{"krate":0,"index":3525},{"krate":0,"index":3531},{"krate":0,"index":3528},{"krate":0,"index":3519},{"krate":0,"index":3522},{"krate":0,"index":3532},{"krate":0,"index":3535},{"krate":0,"index":3041},{"krate":0,"index":3043},{"krate":0,"index":3045},{"krate":0,"index":3048},{"krate":0,"index":3543},{"krate":0,"index":3549},{"krate":0,"index":3546},{"krate":0,"index":3537},{"krate":0,"index":3540},{"krate":0,"index":3550},{"krate":0,"index":3553},{"krate":0,"index":3049},{"krate":0,"index":3051},{"krate":0,"index":3053},{"krate":0,"index":3056},{"krate":0,"index":3561},{"krate":0,"index":3567},{"krate":0,"index":3564},{"krate":0,"index":3555},{"krate":0,"index":3558},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":3061},{"krate":0,"index":3064},{"krate":0,"index":3574},{"krate":0,"index":3580},{"krate":0,"index":3577},{"krate":0,"index":3568},{"krate":0,"index":3571},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":3072},{"krate":0,"index":3587},{"krate":0,"index":3593},{"krate":0,"index":3590},{"krate":0,"index":3581},{"krate":0,"index":3584},{"krate":0,"index":3073},{"krate":0,"index":3075},{"krate":0,"index":3077},{"krate":0,"index":3080},{"krate":0,"index":3600},{"krate":0,"index":3606},{"krate":0,"index":3603},{"krate":0,"index":3594},{"krate":0,"index":3597},{"krate":0,"index":3607},{"krate":0,"index":3610},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3085},{"krate":0,"index":3088},{"krate":0,"index":3618},{"krate":0,"index":3624},{"krate":0,"index":3621},{"krate":0,"index":3612},{"krate":0,"index":3615},{"krate":0,"index":3089},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3096},{"krate":0,"index":3631},{"krate":0,"index":3637},{"krate":0,"index":3634},{"krate":0,"index":3625},{"krate":0,"index":3628},{"krate":0,"index":3097},{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3104},{"krate":0,"index":3644},{"krate":0,"index":3650},{"krate":0,"index":3647},{"krate":0,"index":3638},{"krate":0,"index":3641},{"krate":0,"index":3651},{"krate":0,"index":3654},{"krate":0,"index":3105},{"krate":0,"index":3107},{"krate":0,"index":3109},{"krate":0,"index":3112},{"krate":0,"index":3662},{"krate":0,"index":3668},{"krate":0,"index":3665},{"krate":0,"index":3656},{"krate":0,"index":3659},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3117},{"krate":0,"index":3120},{"krate":0,"index":3675},{"krate":0,"index":3681},{"krate":0,"index":3678},{"krate":0,"index":3669},{"krate":0,"index":3672},{"krate":0,"index":3682},{"krate":0,"index":3685},{"krate":0,"index":3121},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3128},{"krate":0,"index":3693},{"krate":0,"index":3699},{"krate":0,"index":3696},{"krate":0,"index":3687},{"krate":0,"index":3690},{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":3136},{"krate":0,"index":3706},{"krate":0,"index":3712},{"krate":0,"index":3709},{"krate":0,"index":3700},{"krate":0,"index":3703},{"krate":0,"index":3137},{"krate":0,"index":3139},{"krate":0,"index":3141},{"krate":0,"index":3144},{"krate":0,"index":3719},{"krate":0,"index":3725},{"krate":0,"index":3722},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3726},{"krate":0,"index":3729},{"krate":0,"index":3145},{"krate":0,"index":3147},{"krate":0,"index":3149},{"krate":0,"index":3152},{"krate":0,"index":3737},{"krate":0,"index":3743},{"krate":0,"index":3740},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3160},{"krate":0,"index":3750},{"krate":0,"index":3756},{"krate":0,"index":3753},{"krate":0,"index":3744},{"krate":0,"index":3747},{"krate":0,"index":3161},{"krate":0,"index":3163},{"krate":0,"index":3165},{"krate":0,"index":3168},{"krate":0,"index":3763},{"krate":0,"index":3769},{"krate":0,"index":3766},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":3770},{"krate":0,"index":3773},{"krate":0,"index":3169},{"krate":0,"index":3171},{"krate":0,"index":3173},{"krate":0,"index":3176},{"krate":0,"index":3781},{"krate":0,"index":3787},{"krate":0,"index":3784},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3788},{"krate":0,"index":3791},{"krate":0,"index":3177},{"krate":0,"index":3179},{"krate":0,"index":3181},{"krate":0,"index":3184},{"krate":0,"index":3799},{"krate":0,"index":3805},{"krate":0,"index":3802},{"krate":0,"index":3793},{"krate":0,"index":3796},{"krate":0,"index":3185},{"krate":0,"index":3187},{"krate":0,"index":3189},{"krate":0,"index":3192},{"krate":0,"index":3812},{"krate":0,"index":3818},{"krate":0,"index":3815},{"krate":0,"index":3806},{"krate":0,"index":3809},{"krate":0,"index":3193},{"krate":0,"index":3195},{"krate":0,"index":3197},{"krate":0,"index":3200},{"krate":0,"index":3825},{"krate":0,"index":3831},{"krate":0,"index":3828},{"krate":0,"index":3819},{"krate":0,"index":3822},{"krate":0,"index":3832},{"krate":0,"index":3835},{"krate":0,"index":3201},{"krate":0,"index":3203},{"krate":0,"index":3205},{"krate":0,"index":3208},{"krate":0,"index":3843},{"krate":0,"index":3849},{"krate":0,"index":3846},{"krate":0,"index":3837},{"krate":0,"index":3840},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3216},{"krate":0,"index":3856},{"krate":0,"index":3862},{"krate":0,"index":3859},{"krate":0,"index":3850},{"krate":0,"index":3853},{"krate":0,"index":3217},{"krate":0,"index":3219},{"krate":0,"index":3221},{"krate":0,"index":3224},{"krate":0,"index":3869},{"krate":0,"index":3875},{"krate":0,"index":3872},{"krate":0,"index":3863},{"krate":0,"index":3866},{"krate":0,"index":3876},{"krate":0,"index":3879},{"krate":0,"index":3225},{"krate":0,"index":3227},{"krate":0,"index":3229},{"krate":0,"index":3232},{"krate":0,"index":3887},{"krate":0,"index":3893},{"krate":0,"index":3890},{"krate":0,"index":3881},{"krate":0,"index":3884},{"krate":0,"index":3233},{"krate":0,"index":3235},{"krate":0,"index":3237},{"krate":0,"index":3240},{"krate":0,"index":3900},{"krate":0,"index":3906},{"krate":0,"index":3903},{"krate":0,"index":3894},{"krate":0,"index":3897},{"krate":0,"index":3241},{"krate":0,"index":3243},{"krate":0,"index":3245},{"krate":0,"index":3248},{"krate":0,"index":3913},{"krate":0,"index":3919},{"krate":0,"index":3916},{"krate":0,"index":3907},{"krate":0,"index":3910},{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3253},{"krate":0,"index":3256},{"krate":0,"index":3926},{"krate":0,"index":3932},{"krate":0,"index":3929},{"krate":0,"index":3920},{"krate":0,"index":3923},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3261},{"krate":0,"index":3264},{"krate":0,"index":3939},{"krate":0,"index":3945},{"krate":0,"index":3942},{"krate":0,"index":3933},{"krate":0,"index":3936},{"krate":0,"index":3946},{"krate":0,"index":3949},{"krate":0,"index":3265},{"krate":0,"index":3267},{"krate":0,"index":3269},{"krate":0,"index":3272},{"krate":0,"index":3957},{"krate":0,"index":3963},{"krate":0,"index":3960},{"krate":0,"index":3951},{"krate":0,"index":3954},{"krate":0,"index":3964},{"krate":0,"index":3967},{"krate":0,"index":3273},{"krate":0,"index":3275},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3975},{"krate":0,"index":3981},{"krate":0,"index":3978},{"krate":0,"index":3969},{"krate":0,"index":3972},{"krate":0,"index":3281},{"krate":0,"index":3283},{"krate":0,"index":3285},{"krate":0,"index":3288},{"krate":0,"index":3988},{"krate":0,"index":3994},{"krate":0,"index":3991},{"krate":0,"index":3982},{"krate":0,"index":3985},{"krate":0,"index":3995},{"krate":0,"index":3998},{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":4036},{"krate":0,"index":4040},{"krate":0,"index":4038},{"krate":0,"index":4000},{"krate":0,"index":4003},{"krate":0,"index":4005},{"krate":0,"index":4008},{"krate":0,"index":4041},{"krate":0,"index":4045},{"krate":0,"index":4043},{"krate":0,"index":4009},{"krate":0,"index":4012},{"krate":0,"index":4014},{"krate":0,"index":4017},{"krate":0,"index":4046},{"krate":0,"index":4050},{"krate":0,"index":4048},{"krate":0,"index":4018},{"krate":0,"index":4021},{"krate":0,"index":4023},{"krate":0,"index":4026},{"krate":0,"index":4051},{"krate":0,"index":4055},{"krate":0,"index":4053},{"krate":0,"index":4027},{"krate":0,"index":4030},{"krate":0,"index":4032},{"krate":0,"index":4035},{"krate":0,"index":136},{"krate":0,"index":5523},{"krate":0,"index":137},{"krate":0,"index":5525},{"krate":0,"index":138},{"krate":0,"index":158}],"decl_id":null,"docs":" Tokens representing Rust punctuation, keywords, and delimiters.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10786,"byte_end":10798,"line_start":298,"line_end":298,"column_start":1,"column_end":13}},{"value":"/ Tokens representing Rust punctuation, keywords, and delimiters.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":37647,"byte_end":37714,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":37715,"byte_end":37718,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The type names in this module can be difficult to keep straight, so we","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":37719,"byte_end":37793,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ prefer to use the [`Token!`] macro instead. This is a type-macro that","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":37794,"byte_end":37867,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ expands to the token type of the given token.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":37868,"byte_end":37917,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":37918,"byte_end":37921,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`Token!`]: ../macro.Token.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":37922,"byte_end":37957,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":37958,"byte_end":37961,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":37962,"byte_end":37975,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":37976,"byte_end":37979,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The [`ItemStatic`] syntax tree node is defined like this.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":37980,"byte_end":38041,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38042,"byte_end":38045,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`ItemStatic`]: ../struct.ItemStatic.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38046,"byte_end":38091,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38092,"byte_end":38095,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38096,"byte_end":38114,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ # use syn::{Attribute, Expr, Ident, Token, Type, Visibility};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38115,"byte_end":38180,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38181,"byte_end":38186,"line_start":17,"line_end":17,"column_start":1,"column_end":6}},{"value":"/ pub struct ItemStatic {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38187,"byte_end":38214,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/     pub attrs: Vec<Attribute>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38215,"byte_end":38249,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/     pub vis: Visibility,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38250,"byte_end":38278,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/     pub static_token: Token![static],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38279,"byte_end":38320,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/     pub mutability: Option<Token![mut]>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38321,"byte_end":38365,"line_start":22,"line_end":22,"column_start":1,"column_end":45}},{"value":"/     pub ident: Ident,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38366,"byte_end":38391,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/     pub colon_token: Token![:],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38392,"byte_end":38427,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/     pub ty: Box<Type>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38428,"byte_end":38454,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/     pub eq_token: Token![=],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38455,"byte_end":38487,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     pub expr: Box<Expr>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38488,"byte_end":38516,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/     pub semi_token: Token![;],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38517,"byte_end":38551,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38552,"byte_end":38557,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38558,"byte_end":38565,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38566,"byte_end":38569,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Parsing","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38570,"byte_end":38583,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38584,"byte_end":38587,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Keywords and punctuation can be parsed through the [`ParseStream::parse`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38588,"byte_end":38665,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ method. Delimiter tokens are parsed using the [`parenthesized!`],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38666,"byte_end":38735,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"/ [`bracketed!`] and [`braced!`] macros.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38736,"byte_end":38778,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38779,"byte_end":38782,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`ParseStream::parse`]: ../parse/struct.ParseBuffer.html#method.parse","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38783,"byte_end":38856,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ [`parenthesized!`]: ../macro.parenthesized.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38857,"byte_end":38908,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/ [`bracketed!`]: ../macro.bracketed.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38909,"byte_end":38952,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/ [`braced!`]: ../macro.braced.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38953,"byte_end":38990,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38991,"byte_end":38994,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":38995,"byte_end":39013,"line_start":43,"line_end":43,"column_start":1,"column_end":19}},{"value":"/ use syn::{Attribute, Result};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39014,"byte_end":39047,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39048,"byte_end":39089,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39090,"byte_end":39095,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # enum ItemStatic {}","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39096,"byte_end":39120,"line_start":47,"line_end":47,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39121,"byte_end":39124,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Parse the ItemStatic struct shown above.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39125,"byte_end":39172,"line_start":49,"line_end":49,"column_start":1,"column_end":48}},{"value":"/ impl Parse for ItemStatic {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39173,"byte_end":39204,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39205,"byte_end":39259,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/         # use syn::ItemStatic;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39260,"byte_end":39294,"line_start":52,"line_end":52,"column_start":1,"column_end":35}},{"value":"/         # fn parse(input: ParseStream) -> Result<ItemStatic> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39295,"byte_end":39361,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/         Ok(ItemStatic {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39362,"byte_end":39389,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/             attrs: input.call(Attribute::parse_outer)?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39390,"byte_end":39449,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/             vis: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39450,"byte_end":39486,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/             static_token: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39487,"byte_end":39532,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/             mutability: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39533,"byte_end":39576,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/             ident: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39577,"byte_end":39615,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/             colon_token: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39616,"byte_end":39660,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/             ty: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39661,"byte_end":39696,"line_start":61,"line_end":61,"column_start":1,"column_end":36}},{"value":"/             eq_token: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39697,"byte_end":39738,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/             expr: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39739,"byte_end":39776,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/             semi_token: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39777,"byte_end":39820,"line_start":64,"line_end":64,"column_start":1,"column_end":44}},{"value":"/         })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39821,"byte_end":39835,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/         # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39836,"byte_end":39851,"line_start":66,"line_end":66,"column_start":1,"column_end":16}},{"value":"/         # unimplemented!()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39852,"byte_end":39882,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39883,"byte_end":39892,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39893,"byte_end":39898,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39899,"byte_end":39906,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39907,"byte_end":39910,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Other operations","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39911,"byte_end":39933,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39934,"byte_end":39937,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ Every keyword and punctuation token supports the following operations.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":39938,"byte_end":40012,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40013,"byte_end":40016,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ - [Peeking] — `input.peek(Token![...])`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40017,"byte_end":40062,"line_start":76,"line_end":76,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40063,"byte_end":40066,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - [Parsing] — `input.parse::<Token![...]>()?`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40067,"byte_end":40118,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40119,"byte_end":40122,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ - [Printing] — `quote!( ... #the_token ... )`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40123,"byte_end":40174,"line_start":80,"line_end":80,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40175,"byte_end":40178,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ - Construction from a [`Span`] — `let the_token = Token![...](sp)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40179,"byte_end":40251,"line_start":82,"line_end":82,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40252,"byte_end":40255,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ - Field access to its span — `let sp = the_token.span`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40256,"byte_end":40316,"line_start":84,"line_end":84,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40317,"byte_end":40320,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [Peeking]: ../parse/struct.ParseBuffer.html#method.peek","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40321,"byte_end":40380,"line_start":86,"line_end":86,"column_start":1,"column_end":60}},{"value":"/ [Parsing]: ../parse/struct.ParseBuffer.html#method.parse","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40381,"byte_end":40441,"line_start":87,"line_end":87,"column_start":1,"column_end":61}},{"value":"/ [Printing]: https://docs.rs/quote/0.6/quote/trait.ToTokens.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40442,"byte_end":40509,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/ [`Span`]: https://docs.rs/proc-macro2/0.4/proc_macro2/struct.Span.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":40510,"byte_end":40584,"line_start":89,"line_end":89,"column_start":1,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41775,"byte_end":41780,"line_start":131,"line_end":131,"column_start":11,"column_end":16},"name":"Token","qualname":"::token::Token","value":"Token: private::Sealed","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" Marker trait for types that represent single tokens.","sig":null,"attributes":[{"value":"/ Marker trait for types that represent single tokens.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41599,"byte_end":41655,"line_start":127,"line_end":127,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41656,"byte_end":41659,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside of Syn.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41660,"byte_end":41736,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41737,"byte_end":41764,"line_start":130,"line_end":130,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41849,"byte_end":41853,"line_start":134,"line_end":134,"column_start":8,"column_end":12},"name":"peek","qualname":"::token::Token::peek","value":"pub fn peek(Cursor) -> bool","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41929,"byte_end":41936,"line_start":138,"line_end":138,"column_start":8,"column_end":15},"name":"display","qualname":"::token::Token::display","value":"pub fn display() -> &'static str","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42047,"byte_end":42053,"line_start":145,"line_end":145,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::token::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42005,"byte_end":42032,"line_start":144,"line_end":144,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42197,"byte_end":42205,"line_start":150,"line_end":150,"column_start":16,"column_end":24},"name":"WithSpan","qualname":"::token::private::WithSpan","value":"WithSpan { span }","parent":null,"children":[{"krate":0,"index":94}],"decl_id":null,"docs":" Support writing `token.span` rather than `token.spans[0]` on tokens that\n hold a single span.\n","sig":null,"attributes":[{"value":"/ Support writing `token.span` rather than `token.spans[0]` on tokens that","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42062,"byte_end":42138,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ hold a single span.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42143,"byte_end":42166,"line_start":148,"line_end":148,"column_start":5,"column_end":28}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42171,"byte_end":42181,"line_start":149,"line_end":149,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42220,"byte_end":42224,"line_start":151,"line_end":151,"column_start":13,"column_end":17},"name":"span","qualname":"::token::private::WithSpan::span","value":"proc_macro2::Span","parent":{"krate":0,"index":93},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44144,"byte_end":44155,"line_start":214,"line_end":214,"column_start":11,"column_end":22},"name":"CustomToken","qualname":"::token::CustomToken","value":"CustomToken","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44106,"byte_end":44133,"line_start":213,"line_end":213,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44165,"byte_end":44169,"line_start":215,"line_end":215,"column_start":8,"column_end":12},"name":"peek","qualname":"::token::CustomToken::peek","value":"pub fn peek(Cursor) -> bool","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44202,"byte_end":44209,"line_start":216,"line_end":216,"column_start":8,"column_end":15},"name":"display","qualname":"::token::CustomToken::display","value":"pub fn display() -> &'static str","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52406,"byte_end":52416,"line_start":500,"line_end":500,"column_start":20,"column_end":30},"name":"Underscore","qualname":"::token::Underscore","value":"Underscore { spans }","parent":null,"children":[{"krate":0,"index":1982}],"decl_id":null,"docs":" `_`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1975},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52406,"byte_end":52416,"line_start":500,"line_end":500,"column_start":20,"column_end":30},"name":"Underscore","qualname":"::token::Underscore","value":"pub fn Underscore<S: IntoSpans<[Span; ]>>(S) -> Underscore","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54586,"byte_end":54594,"line_start":594,"line_end":594,"column_start":30,"column_end":38},"name":"Abstract","qualname":"::token::Abstract","value":"Abstract { span }","parent":null,"children":[{"krate":0,"index":2670}],"decl_id":null,"docs":" `abstract`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54586,"byte_end":54594,"line_start":594,"line_end":594,"column_start":30,"column_end":38},"name":"Abstract","qualname":"::token::Abstract","value":"pub fn Abstract<S: IntoSpans<[Span; ]>>(S) -> Abstract","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54643,"byte_end":54645,"line_start":595,"line_end":595,"column_start":30,"column_end":32},"name":"As","qualname":"::token::As","value":"As { span }","parent":null,"children":[{"krate":0,"index":2675}],"decl_id":null,"docs":" `as`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2006},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54643,"byte_end":54645,"line_start":595,"line_end":595,"column_start":30,"column_end":32},"name":"As","qualname":"::token::As","value":"pub fn As<S: IntoSpans<[Span; ]>>(S) -> As","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2679},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54694,"byte_end":54699,"line_start":596,"line_end":596,"column_start":30,"column_end":35},"name":"Async","qualname":"::token::Async","value":"Async { span }","parent":null,"children":[{"krate":0,"index":2680}],"decl_id":null,"docs":" `async`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2019},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54694,"byte_end":54699,"line_start":596,"line_end":596,"column_start":30,"column_end":35},"name":"Async","qualname":"::token::Async","value":"pub fn Async<S: IntoSpans<[Span; ]>>(S) -> Async","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2684},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54748,"byte_end":54752,"line_start":597,"line_end":597,"column_start":30,"column_end":34},"name":"Auto","qualname":"::token::Auto","value":"Auto { span }","parent":null,"children":[{"krate":0,"index":2685}],"decl_id":null,"docs":" `auto`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2032},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54748,"byte_end":54752,"line_start":597,"line_end":597,"column_start":30,"column_end":34},"name":"Auto","qualname":"::token::Auto","value":"pub fn Auto<S: IntoSpans<[Span; ]>>(S) -> Auto","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2689},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54801,"byte_end":54807,"line_start":598,"line_end":598,"column_start":30,"column_end":36},"name":"Become","qualname":"::token::Become","value":"Become { span }","parent":null,"children":[{"krate":0,"index":2690}],"decl_id":null,"docs":" `become`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54801,"byte_end":54807,"line_start":598,"line_end":598,"column_start":30,"column_end":36},"name":"Become","qualname":"::token::Become","value":"pub fn Become<S: IntoSpans<[Span; ]>>(S) -> Become","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2694},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54856,"byte_end":54859,"line_start":599,"line_end":599,"column_start":30,"column_end":33},"name":"Box","qualname":"::token::Box","value":"Box { span }","parent":null,"children":[{"krate":0,"index":2695}],"decl_id":null,"docs":" `box`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54856,"byte_end":54859,"line_start":599,"line_end":599,"column_start":30,"column_end":33},"name":"Box","qualname":"::token::Box","value":"pub fn Box<S: IntoSpans<[Span; ]>>(S) -> Box","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2699},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54908,"byte_end":54913,"line_start":600,"line_end":600,"column_start":30,"column_end":35},"name":"Break","qualname":"::token::Break","value":"Break { span }","parent":null,"children":[{"krate":0,"index":2700}],"decl_id":null,"docs":" `break`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54908,"byte_end":54913,"line_start":600,"line_end":600,"column_start":30,"column_end":35},"name":"Break","qualname":"::token::Break","value":"pub fn Break<S: IntoSpans<[Span; ]>>(S) -> Break","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54962,"byte_end":54967,"line_start":601,"line_end":601,"column_start":30,"column_end":35},"name":"Const","qualname":"::token::Const","value":"Const { span }","parent":null,"children":[{"krate":0,"index":2705}],"decl_id":null,"docs":" `const`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2084},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54962,"byte_end":54967,"line_start":601,"line_end":601,"column_start":30,"column_end":35},"name":"Const","qualname":"::token::Const","value":"pub fn Const<S: IntoSpans<[Span; ]>>(S) -> Const","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2709},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55016,"byte_end":55024,"line_start":602,"line_end":602,"column_start":30,"column_end":38},"name":"Continue","qualname":"::token::Continue","value":"Continue { span }","parent":null,"children":[{"krate":0,"index":2710}],"decl_id":null,"docs":" `continue`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55016,"byte_end":55024,"line_start":602,"line_end":602,"column_start":30,"column_end":38},"name":"Continue","qualname":"::token::Continue","value":"pub fn Continue<S: IntoSpans<[Span; ]>>(S) -> Continue","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2714},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55073,"byte_end":55078,"line_start":603,"line_end":603,"column_start":30,"column_end":35},"name":"Crate","qualname":"::token::Crate","value":"Crate { span }","parent":null,"children":[{"krate":0,"index":2715}],"decl_id":null,"docs":" `crate`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55073,"byte_end":55078,"line_start":603,"line_end":603,"column_start":30,"column_end":35},"name":"Crate","qualname":"::token::Crate","value":"pub fn Crate<S: IntoSpans<[Span; ]>>(S) -> Crate","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2719},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55127,"byte_end":55134,"line_start":604,"line_end":604,"column_start":30,"column_end":37},"name":"Default","qualname":"::token::Default","value":"Default { span }","parent":null,"children":[{"krate":0,"index":2720}],"decl_id":null,"docs":" `default`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55127,"byte_end":55134,"line_start":604,"line_end":604,"column_start":30,"column_end":37},"name":"Default","qualname":"::token::Default","value":"pub fn Default<S: IntoSpans<[Span; ]>>(S) -> Default","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2724},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55183,"byte_end":55185,"line_start":605,"line_end":605,"column_start":30,"column_end":32},"name":"Do","qualname":"::token::Do","value":"Do { span }","parent":null,"children":[{"krate":0,"index":2725}],"decl_id":null,"docs":" `do`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55183,"byte_end":55185,"line_start":605,"line_end":605,"column_start":30,"column_end":32},"name":"Do","qualname":"::token::Do","value":"pub fn Do<S: IntoSpans<[Span; ]>>(S) -> Do","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2729},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55234,"byte_end":55237,"line_start":606,"line_end":606,"column_start":30,"column_end":33},"name":"Dyn","qualname":"::token::Dyn","value":"Dyn { span }","parent":null,"children":[{"krate":0,"index":2730}],"decl_id":null,"docs":" `dyn`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55234,"byte_end":55237,"line_start":606,"line_end":606,"column_start":30,"column_end":33},"name":"Dyn","qualname":"::token::Dyn","value":"pub fn Dyn<S: IntoSpans<[Span; ]>>(S) -> Dyn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2734},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55286,"byte_end":55290,"line_start":607,"line_end":607,"column_start":30,"column_end":34},"name":"Else","qualname":"::token::Else","value":"Else { span }","parent":null,"children":[{"krate":0,"index":2735}],"decl_id":null,"docs":" `else`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55286,"byte_end":55290,"line_start":607,"line_end":607,"column_start":30,"column_end":34},"name":"Else","qualname":"::token::Else","value":"pub fn Else<S: IntoSpans<[Span; ]>>(S) -> Else","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2739},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55339,"byte_end":55343,"line_start":608,"line_end":608,"column_start":30,"column_end":34},"name":"Enum","qualname":"::token::Enum","value":"Enum { span }","parent":null,"children":[{"krate":0,"index":2740}],"decl_id":null,"docs":" `enum`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55339,"byte_end":55343,"line_start":608,"line_end":608,"column_start":30,"column_end":34},"name":"Enum","qualname":"::token::Enum","value":"pub fn Enum<S: IntoSpans<[Span; ]>>(S) -> Enum","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55392,"byte_end":55403,"line_start":609,"line_end":609,"column_start":30,"column_end":41},"name":"Existential","qualname":"::token::Existential","value":"Existential { span }","parent":null,"children":[{"krate":0,"index":2745}],"decl_id":null,"docs":" `existential`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55392,"byte_end":55403,"line_start":609,"line_end":609,"column_start":30,"column_end":41},"name":"Existential","qualname":"::token::Existential","value":"pub fn Existential<S: IntoSpans<[Span; ]>>(S) -> Existential","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55452,"byte_end":55458,"line_start":610,"line_end":610,"column_start":30,"column_end":36},"name":"Extern","qualname":"::token::Extern","value":"Extern { span }","parent":null,"children":[{"krate":0,"index":2750}],"decl_id":null,"docs":" `extern`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55452,"byte_end":55458,"line_start":610,"line_end":610,"column_start":30,"column_end":36},"name":"Extern","qualname":"::token::Extern","value":"pub fn Extern<S: IntoSpans<[Span; ]>>(S) -> Extern","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2754},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55507,"byte_end":55512,"line_start":611,"line_end":611,"column_start":30,"column_end":35},"name":"Final","qualname":"::token::Final","value":"Final { span }","parent":null,"children":[{"krate":0,"index":2755}],"decl_id":null,"docs":" `final`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55507,"byte_end":55512,"line_start":611,"line_end":611,"column_start":30,"column_end":35},"name":"Final","qualname":"::token::Final","value":"pub fn Final<S: IntoSpans<[Span; ]>>(S) -> Final","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55561,"byte_end":55563,"line_start":612,"line_end":612,"column_start":30,"column_end":32},"name":"Fn","qualname":"::token::Fn","value":"Fn { span }","parent":null,"children":[{"krate":0,"index":2760}],"decl_id":null,"docs":" `fn`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2227},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55561,"byte_end":55563,"line_start":612,"line_end":612,"column_start":30,"column_end":32},"name":"Fn","qualname":"::token::Fn","value":"pub fn Fn<S: IntoSpans<[Span; ]>>(S) -> Fn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2764},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55612,"byte_end":55615,"line_start":613,"line_end":613,"column_start":30,"column_end":33},"name":"For","qualname":"::token::For","value":"For { span }","parent":null,"children":[{"krate":0,"index":2765}],"decl_id":null,"docs":" `for`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55612,"byte_end":55615,"line_start":613,"line_end":613,"column_start":30,"column_end":33},"name":"For","qualname":"::token::For","value":"pub fn For<S: IntoSpans<[Span; ]>>(S) -> For","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2769},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55664,"byte_end":55666,"line_start":614,"line_end":614,"column_start":30,"column_end":32},"name":"If","qualname":"::token::If","value":"If { span }","parent":null,"children":[{"krate":0,"index":2770}],"decl_id":null,"docs":" `if`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55664,"byte_end":55666,"line_start":614,"line_end":614,"column_start":30,"column_end":32},"name":"If","qualname":"::token::If","value":"pub fn If<S: IntoSpans<[Span; ]>>(S) -> If","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2774},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55715,"byte_end":55719,"line_start":615,"line_end":615,"column_start":30,"column_end":34},"name":"Impl","qualname":"::token::Impl","value":"Impl { span }","parent":null,"children":[{"krate":0,"index":2775}],"decl_id":null,"docs":" `impl`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55715,"byte_end":55719,"line_start":615,"line_end":615,"column_start":30,"column_end":34},"name":"Impl","qualname":"::token::Impl","value":"pub fn Impl<S: IntoSpans<[Span; ]>>(S) -> Impl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55768,"byte_end":55770,"line_start":616,"line_end":616,"column_start":30,"column_end":32},"name":"In","qualname":"::token::In","value":"In { span }","parent":null,"children":[{"krate":0,"index":2780}],"decl_id":null,"docs":" `in`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2279},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55768,"byte_end":55770,"line_start":616,"line_end":616,"column_start":30,"column_end":32},"name":"In","qualname":"::token::In","value":"pub fn In<S: IntoSpans<[Span; ]>>(S) -> In","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55819,"byte_end":55822,"line_start":617,"line_end":617,"column_start":30,"column_end":33},"name":"Let","qualname":"::token::Let","value":"Let { span }","parent":null,"children":[{"krate":0,"index":2785}],"decl_id":null,"docs":" `let`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55819,"byte_end":55822,"line_start":617,"line_end":617,"column_start":30,"column_end":33},"name":"Let","qualname":"::token::Let","value":"pub fn Let<S: IntoSpans<[Span; ]>>(S) -> Let","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2789},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55871,"byte_end":55875,"line_start":618,"line_end":618,"column_start":30,"column_end":34},"name":"Loop","qualname":"::token::Loop","value":"Loop { span }","parent":null,"children":[{"krate":0,"index":2790}],"decl_id":null,"docs":" `loop`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2305},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55871,"byte_end":55875,"line_start":618,"line_end":618,"column_start":30,"column_end":34},"name":"Loop","qualname":"::token::Loop","value":"pub fn Loop<S: IntoSpans<[Span; ]>>(S) -> Loop","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2794},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55924,"byte_end":55929,"line_start":619,"line_end":619,"column_start":30,"column_end":35},"name":"Macro","qualname":"::token::Macro","value":"Macro { span }","parent":null,"children":[{"krate":0,"index":2795}],"decl_id":null,"docs":" `macro`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2318},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55924,"byte_end":55929,"line_start":619,"line_end":619,"column_start":30,"column_end":35},"name":"Macro","qualname":"::token::Macro","value":"pub fn Macro<S: IntoSpans<[Span; ]>>(S) -> Macro","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55978,"byte_end":55983,"line_start":620,"line_end":620,"column_start":30,"column_end":35},"name":"Match","qualname":"::token::Match","value":"Match { span }","parent":null,"children":[{"krate":0,"index":2800}],"decl_id":null,"docs":" `match`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":55978,"byte_end":55983,"line_start":620,"line_end":620,"column_start":30,"column_end":35},"name":"Match","qualname":"::token::Match","value":"pub fn Match<S: IntoSpans<[Span; ]>>(S) -> Match","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2804},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56032,"byte_end":56035,"line_start":621,"line_end":621,"column_start":30,"column_end":33},"name":"Mod","qualname":"::token::Mod","value":"Mod { span }","parent":null,"children":[{"krate":0,"index":2805}],"decl_id":null,"docs":" `mod`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56032,"byte_end":56035,"line_start":621,"line_end":621,"column_start":30,"column_end":33},"name":"Mod","qualname":"::token::Mod","value":"pub fn Mod<S: IntoSpans<[Span; ]>>(S) -> Mod","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2809},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56084,"byte_end":56088,"line_start":622,"line_end":622,"column_start":30,"column_end":34},"name":"Move","qualname":"::token::Move","value":"Move { span }","parent":null,"children":[{"krate":0,"index":2810}],"decl_id":null,"docs":" `move`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2357},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56084,"byte_end":56088,"line_start":622,"line_end":622,"column_start":30,"column_end":34},"name":"Move","qualname":"::token::Move","value":"pub fn Move<S: IntoSpans<[Span; ]>>(S) -> Move","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2814},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56137,"byte_end":56140,"line_start":623,"line_end":623,"column_start":30,"column_end":33},"name":"Mut","qualname":"::token::Mut","value":"Mut { span }","parent":null,"children":[{"krate":0,"index":2815}],"decl_id":null,"docs":" `mut`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2370},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56137,"byte_end":56140,"line_start":623,"line_end":623,"column_start":30,"column_end":33},"name":"Mut","qualname":"::token::Mut","value":"pub fn Mut<S: IntoSpans<[Span; ]>>(S) -> Mut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2819},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56189,"byte_end":56197,"line_start":624,"line_end":624,"column_start":30,"column_end":38},"name":"Override","qualname":"::token::Override","value":"Override { span }","parent":null,"children":[{"krate":0,"index":2820}],"decl_id":null,"docs":" `override`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2383},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56189,"byte_end":56197,"line_start":624,"line_end":624,"column_start":30,"column_end":38},"name":"Override","qualname":"::token::Override","value":"pub fn Override<S: IntoSpans<[Span; ]>>(S) -> Override","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2824},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56246,"byte_end":56250,"line_start":625,"line_end":625,"column_start":30,"column_end":34},"name":"Priv","qualname":"::token::Priv","value":"Priv { span }","parent":null,"children":[{"krate":0,"index":2825}],"decl_id":null,"docs":" `priv`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2396},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56246,"byte_end":56250,"line_start":625,"line_end":625,"column_start":30,"column_end":34},"name":"Priv","qualname":"::token::Priv","value":"pub fn Priv<S: IntoSpans<[Span; ]>>(S) -> Priv","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56299,"byte_end":56302,"line_start":626,"line_end":626,"column_start":30,"column_end":33},"name":"Pub","qualname":"::token::Pub","value":"Pub { span }","parent":null,"children":[{"krate":0,"index":2830}],"decl_id":null,"docs":" `pub`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2409},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56299,"byte_end":56302,"line_start":626,"line_end":626,"column_start":30,"column_end":33},"name":"Pub","qualname":"::token::Pub","value":"pub fn Pub<S: IntoSpans<[Span; ]>>(S) -> Pub","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56351,"byte_end":56354,"line_start":627,"line_end":627,"column_start":30,"column_end":33},"name":"Ref","qualname":"::token::Ref","value":"Ref { span }","parent":null,"children":[{"krate":0,"index":2835}],"decl_id":null,"docs":" `ref`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2422},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56351,"byte_end":56354,"line_start":627,"line_end":627,"column_start":30,"column_end":33},"name":"Ref","qualname":"::token::Ref","value":"pub fn Ref<S: IntoSpans<[Span; ]>>(S) -> Ref","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2839},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56403,"byte_end":56409,"line_start":628,"line_end":628,"column_start":30,"column_end":36},"name":"Return","qualname":"::token::Return","value":"Return { span }","parent":null,"children":[{"krate":0,"index":2840}],"decl_id":null,"docs":" `return`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2435},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56403,"byte_end":56409,"line_start":628,"line_end":628,"column_start":30,"column_end":36},"name":"Return","qualname":"::token::Return","value":"pub fn Return<S: IntoSpans<[Span; ]>>(S) -> Return","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56458,"byte_end":56466,"line_start":629,"line_end":629,"column_start":30,"column_end":38},"name":"SelfType","qualname":"::token::SelfType","value":"SelfType { span }","parent":null,"children":[{"krate":0,"index":2845}],"decl_id":null,"docs":" `Self`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2448},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56458,"byte_end":56466,"line_start":629,"line_end":629,"column_start":30,"column_end":38},"name":"SelfType","qualname":"::token::SelfType","value":"pub fn SelfType<S: IntoSpans<[Span; ]>>(S) -> SelfType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56511,"byte_end":56520,"line_start":630,"line_end":630,"column_start":30,"column_end":39},"name":"SelfValue","qualname":"::token::SelfValue","value":"SelfValue { span }","parent":null,"children":[{"krate":0,"index":2850}],"decl_id":null,"docs":" `self`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2461},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56511,"byte_end":56520,"line_start":630,"line_end":630,"column_start":30,"column_end":39},"name":"SelfValue","qualname":"::token::SelfValue","value":"pub fn SelfValue<S: IntoSpans<[Span; ]>>(S) -> SelfValue","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2854},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56564,"byte_end":56570,"line_start":631,"line_end":631,"column_start":30,"column_end":36},"name":"Static","qualname":"::token::Static","value":"Static { span }","parent":null,"children":[{"krate":0,"index":2855}],"decl_id":null,"docs":" `static`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2474},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56564,"byte_end":56570,"line_start":631,"line_end":631,"column_start":30,"column_end":36},"name":"Static","qualname":"::token::Static","value":"pub fn Static<S: IntoSpans<[Span; ]>>(S) -> Static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56619,"byte_end":56625,"line_start":632,"line_end":632,"column_start":30,"column_end":36},"name":"Struct","qualname":"::token::Struct","value":"Struct { span }","parent":null,"children":[{"krate":0,"index":2860}],"decl_id":null,"docs":" `struct`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56619,"byte_end":56625,"line_start":632,"line_end":632,"column_start":30,"column_end":36},"name":"Struct","qualname":"::token::Struct","value":"pub fn Struct<S: IntoSpans<[Span; ]>>(S) -> Struct","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2864},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56674,"byte_end":56679,"line_start":633,"line_end":633,"column_start":30,"column_end":35},"name":"Super","qualname":"::token::Super","value":"Super { span }","parent":null,"children":[{"krate":0,"index":2865}],"decl_id":null,"docs":" `super`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56674,"byte_end":56679,"line_start":633,"line_end":633,"column_start":30,"column_end":35},"name":"Super","qualname":"::token::Super","value":"pub fn Super<S: IntoSpans<[Span; ]>>(S) -> Super","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56728,"byte_end":56733,"line_start":634,"line_end":634,"column_start":30,"column_end":35},"name":"Trait","qualname":"::token::Trait","value":"Trait { span }","parent":null,"children":[{"krate":0,"index":2870}],"decl_id":null,"docs":" `trait`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56728,"byte_end":56733,"line_start":634,"line_end":634,"column_start":30,"column_end":35},"name":"Trait","qualname":"::token::Trait","value":"pub fn Trait<S: IntoSpans<[Span; ]>>(S) -> Trait","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56782,"byte_end":56785,"line_start":635,"line_end":635,"column_start":30,"column_end":33},"name":"Try","qualname":"::token::Try","value":"Try { span }","parent":null,"children":[{"krate":0,"index":2875}],"decl_id":null,"docs":" `try`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56782,"byte_end":56785,"line_start":635,"line_end":635,"column_start":30,"column_end":33},"name":"Try","qualname":"::token::Try","value":"pub fn Try<S: IntoSpans<[Span; ]>>(S) -> Try","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2879},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56834,"byte_end":56838,"line_start":636,"line_end":636,"column_start":30,"column_end":34},"name":"Type","qualname":"::token::Type","value":"Type { span }","parent":null,"children":[{"krate":0,"index":2880}],"decl_id":null,"docs":" `type`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2539},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56834,"byte_end":56838,"line_start":636,"line_end":636,"column_start":30,"column_end":34},"name":"Type","qualname":"::token::Type","value":"pub fn Type<S: IntoSpans<[Span; ]>>(S) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2884},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56887,"byte_end":56893,"line_start":637,"line_end":637,"column_start":30,"column_end":36},"name":"Typeof","qualname":"::token::Typeof","value":"Typeof { span }","parent":null,"children":[{"krate":0,"index":2885}],"decl_id":null,"docs":" `typeof`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2552},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56887,"byte_end":56893,"line_start":637,"line_end":637,"column_start":30,"column_end":36},"name":"Typeof","qualname":"::token::Typeof","value":"pub fn Typeof<S: IntoSpans<[Span; ]>>(S) -> Typeof","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2889},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56942,"byte_end":56947,"line_start":638,"line_end":638,"column_start":30,"column_end":35},"name":"Union","qualname":"::token::Union","value":"Union { span }","parent":null,"children":[{"krate":0,"index":2890}],"decl_id":null,"docs":" `union`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2565},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56942,"byte_end":56947,"line_start":638,"line_end":638,"column_start":30,"column_end":35},"name":"Union","qualname":"::token::Union","value":"pub fn Union<S: IntoSpans<[Span; ]>>(S) -> Union","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56996,"byte_end":57002,"line_start":639,"line_end":639,"column_start":30,"column_end":36},"name":"Unsafe","qualname":"::token::Unsafe","value":"Unsafe { span }","parent":null,"children":[{"krate":0,"index":2895}],"decl_id":null,"docs":" `unsafe`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":56996,"byte_end":57002,"line_start":639,"line_end":639,"column_start":30,"column_end":36},"name":"Unsafe","qualname":"::token::Unsafe","value":"pub fn Unsafe<S: IntoSpans<[Span; ]>>(S) -> Unsafe","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2899},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57051,"byte_end":57058,"line_start":640,"line_end":640,"column_start":30,"column_end":37},"name":"Unsized","qualname":"::token::Unsized","value":"Unsized { span }","parent":null,"children":[{"krate":0,"index":2900}],"decl_id":null,"docs":" `unsized`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57051,"byte_end":57058,"line_start":640,"line_end":640,"column_start":30,"column_end":37},"name":"Unsized","qualname":"::token::Unsized","value":"pub fn Unsized<S: IntoSpans<[Span; ]>>(S) -> Unsized","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2904},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57107,"byte_end":57110,"line_start":641,"line_end":641,"column_start":30,"column_end":33},"name":"Use","qualname":"::token::Use","value":"Use { span }","parent":null,"children":[{"krate":0,"index":2905}],"decl_id":null,"docs":" `use`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2604},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57107,"byte_end":57110,"line_start":641,"line_end":641,"column_start":30,"column_end":33},"name":"Use","qualname":"::token::Use","value":"pub fn Use<S: IntoSpans<[Span; ]>>(S) -> Use","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57159,"byte_end":57166,"line_start":642,"line_end":642,"column_start":30,"column_end":37},"name":"Virtual","qualname":"::token::Virtual","value":"Virtual { span }","parent":null,"children":[{"krate":0,"index":2910}],"decl_id":null,"docs":" `virtual`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2617},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57159,"byte_end":57166,"line_start":642,"line_end":642,"column_start":30,"column_end":37},"name":"Virtual","qualname":"::token::Virtual","value":"pub fn Virtual<S: IntoSpans<[Span; ]>>(S) -> Virtual","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2914},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57215,"byte_end":57220,"line_start":643,"line_end":643,"column_start":30,"column_end":35},"name":"Where","qualname":"::token::Where","value":"Where { span }","parent":null,"children":[{"krate":0,"index":2915}],"decl_id":null,"docs":" `where`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2630},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57215,"byte_end":57220,"line_start":643,"line_end":643,"column_start":30,"column_end":35},"name":"Where","qualname":"::token::Where","value":"pub fn Where<S: IntoSpans<[Span; ]>>(S) -> Where","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2919},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57269,"byte_end":57274,"line_start":644,"line_end":644,"column_start":30,"column_end":35},"name":"While","qualname":"::token::While","value":"While { span }","parent":null,"children":[{"krate":0,"index":2920}],"decl_id":null,"docs":" `while`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2643},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57269,"byte_end":57274,"line_start":644,"line_end":644,"column_start":30,"column_end":35},"name":"While","qualname":"::token::While","value":"pub fn While<S: IntoSpans<[Span; ]>>(S) -> While","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2924},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57323,"byte_end":57328,"line_start":645,"line_end":645,"column_start":30,"column_end":35},"name":"Yield","qualname":"::token::Yield","value":"Yield { span }","parent":null,"children":[{"krate":0,"index":2925}],"decl_id":null,"docs":" `yield`","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44749,"byte_end":44752,"line_start":238,"line_end":238,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44765,"byte_end":44834,"line_start":239,"line_end":239,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44847,"byte_end":44865,"line_start":240,"line_end":240,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44878,"byte_end":44881,"line_start":241,"line_end":241,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44894,"byte_end":44922,"line_start":242,"line_end":242,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2656},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57323,"byte_end":57328,"line_start":645,"line_end":645,"column_start":30,"column_end":35},"name":"Yield","qualname":"::token::Yield","value":"pub fn Yield<S: IntoSpans<[Span; ]>>(S) -> Yield","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":45040,"byte_end":45064,"line_start":248,"line_end":248,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3303},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57402,"byte_end":57405,"line_start":649,"line_end":649,"column_start":30,"column_end":33},"name":"Add","qualname":"::token::Add","value":"Add { spans }","parent":null,"children":[{"krate":0,"index":3304}],"decl_id":null,"docs":" `+`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3297},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57402,"byte_end":57405,"line_start":649,"line_end":649,"column_start":30,"column_end":33},"name":"Add","qualname":"::token::Add","value":"pub fn Add<S: IntoSpans<[Span; ]>>(S) -> Add","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57452,"byte_end":57457,"line_start":650,"line_end":650,"column_start":30,"column_end":35},"name":"AddEq","qualname":"::token::AddEq","value":"AddEq { spans }","parent":null,"children":[{"krate":0,"index":3322}],"decl_id":null,"docs":" `+=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57452,"byte_end":57457,"line_start":650,"line_end":650,"column_start":30,"column_end":35},"name":"AddEq","qualname":"::token::AddEq","value":"pub fn AddEq<S: IntoSpans<[Span; ]>>(S) -> AddEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3334},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57503,"byte_end":57506,"line_start":651,"line_end":651,"column_start":30,"column_end":33},"name":"And","qualname":"::token::And","value":"And { spans }","parent":null,"children":[{"krate":0,"index":3335}],"decl_id":null,"docs":" `&`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3328},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57503,"byte_end":57506,"line_start":651,"line_end":651,"column_start":30,"column_end":33},"name":"And","qualname":"::token::And","value":"pub fn And<S: IntoSpans<[Span; ]>>(S) -> And","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3352},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57553,"byte_end":57559,"line_start":652,"line_end":652,"column_start":30,"column_end":36},"name":"AndAnd","qualname":"::token::AndAnd","value":"AndAnd { spans }","parent":null,"children":[{"krate":0,"index":3353}],"decl_id":null,"docs":" `&&`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3346},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57553,"byte_end":57559,"line_start":652,"line_end":652,"column_start":30,"column_end":36},"name":"AndAnd","qualname":"::token::AndAnd","value":"pub fn AndAnd<S: IntoSpans<[Span; ]>>(S) -> AndAnd","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3365},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57604,"byte_end":57609,"line_start":653,"line_end":653,"column_start":30,"column_end":35},"name":"AndEq","qualname":"::token::AndEq","value":"AndEq { spans }","parent":null,"children":[{"krate":0,"index":3366}],"decl_id":null,"docs":" `&=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3359},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57604,"byte_end":57609,"line_start":653,"line_end":653,"column_start":30,"column_end":35},"name":"AndEq","qualname":"::token::AndEq","value":"pub fn AndEq<S: IntoSpans<[Span; ]>>(S) -> AndEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57655,"byte_end":57657,"line_start":654,"line_end":654,"column_start":30,"column_end":32},"name":"At","qualname":"::token::At","value":"At { spans }","parent":null,"children":[{"krate":0,"index":3379}],"decl_id":null,"docs":" `@`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3372},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57655,"byte_end":57657,"line_start":654,"line_end":654,"column_start":30,"column_end":32},"name":"At","qualname":"::token::At","value":"pub fn At<S: IntoSpans<[Span; ]>>(S) -> At","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3396},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57705,"byte_end":57709,"line_start":655,"line_end":655,"column_start":30,"column_end":34},"name":"Bang","qualname":"::token::Bang","value":"Bang { spans }","parent":null,"children":[{"krate":0,"index":3397}],"decl_id":null,"docs":" `!`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3390},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57705,"byte_end":57709,"line_start":655,"line_end":655,"column_start":30,"column_end":34},"name":"Bang","qualname":"::token::Bang","value":"pub fn Bang<S: IntoSpans<[Span; ]>>(S) -> Bang","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3414},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57755,"byte_end":57760,"line_start":656,"line_end":656,"column_start":30,"column_end":35},"name":"Caret","qualname":"::token::Caret","value":"Caret { spans }","parent":null,"children":[{"krate":0,"index":3415}],"decl_id":null,"docs":" `^`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57755,"byte_end":57760,"line_start":656,"line_end":656,"column_start":30,"column_end":35},"name":"Caret","qualname":"::token::Caret","value":"pub fn Caret<S: IntoSpans<[Span; ]>>(S) -> Caret","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3432},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57805,"byte_end":57812,"line_start":657,"line_end":657,"column_start":30,"column_end":37},"name":"CaretEq","qualname":"::token::CaretEq","value":"CaretEq { spans }","parent":null,"children":[{"krate":0,"index":3433}],"decl_id":null,"docs":" `^=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3426},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57805,"byte_end":57812,"line_start":657,"line_end":657,"column_start":30,"column_end":37},"name":"CaretEq","qualname":"::token::CaretEq","value":"pub fn CaretEq<S: IntoSpans<[Span; ]>>(S) -> CaretEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57856,"byte_end":57861,"line_start":658,"line_end":658,"column_start":30,"column_end":35},"name":"Colon","qualname":"::token::Colon","value":"Colon { spans }","parent":null,"children":[{"krate":0,"index":3446}],"decl_id":null,"docs":" `:`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57856,"byte_end":57861,"line_start":658,"line_end":658,"column_start":30,"column_end":35},"name":"Colon","qualname":"::token::Colon","value":"pub fn Colon<S: IntoSpans<[Span; ]>>(S) -> Colon","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57906,"byte_end":57912,"line_start":659,"line_end":659,"column_start":30,"column_end":36},"name":"Colon2","qualname":"::token::Colon2","value":"Colon2 { spans }","parent":null,"children":[{"krate":0,"index":3464}],"decl_id":null,"docs":" `::`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3457},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57906,"byte_end":57912,"line_start":659,"line_end":659,"column_start":30,"column_end":36},"name":"Colon2","qualname":"::token::Colon2","value":"pub fn Colon2<S: IntoSpans<[Span; ]>>(S) -> Colon2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57957,"byte_end":57962,"line_start":660,"line_end":660,"column_start":30,"column_end":35},"name":"Comma","qualname":"::token::Comma","value":"Comma { spans }","parent":null,"children":[{"krate":0,"index":3477}],"decl_id":null,"docs":" `,`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":57957,"byte_end":57962,"line_start":660,"line_end":660,"column_start":30,"column_end":35},"name":"Comma","qualname":"::token::Comma","value":"pub fn Comma<S: IntoSpans<[Span; ]>>(S) -> Comma","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3494},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58007,"byte_end":58010,"line_start":661,"line_end":661,"column_start":30,"column_end":33},"name":"Div","qualname":"::token::Div","value":"Div { spans }","parent":null,"children":[{"krate":0,"index":3495}],"decl_id":null,"docs":" `/`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58007,"byte_end":58010,"line_start":661,"line_end":661,"column_start":30,"column_end":33},"name":"Div","qualname":"::token::Div","value":"pub fn Div<S: IntoSpans<[Span; ]>>(S) -> Div","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3512},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58057,"byte_end":58062,"line_start":662,"line_end":662,"column_start":30,"column_end":35},"name":"DivEq","qualname":"::token::DivEq","value":"DivEq { spans }","parent":null,"children":[{"krate":0,"index":3513}],"decl_id":null,"docs":" `/=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58057,"byte_end":58062,"line_start":662,"line_end":662,"column_start":30,"column_end":35},"name":"DivEq","qualname":"::token::DivEq","value":"pub fn DivEq<S: IntoSpans<[Span; ]>>(S) -> DivEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58108,"byte_end":58114,"line_start":663,"line_end":663,"column_start":30,"column_end":36},"name":"Dollar","qualname":"::token::Dollar","value":"Dollar { spans }","parent":null,"children":[{"krate":0,"index":3526}],"decl_id":null,"docs":" `$`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3519},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58108,"byte_end":58114,"line_start":663,"line_end":663,"column_start":30,"column_end":36},"name":"Dollar","qualname":"::token::Dollar","value":"pub fn Dollar<S: IntoSpans<[Span; ]>>(S) -> Dollar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58158,"byte_end":58161,"line_start":664,"line_end":664,"column_start":30,"column_end":33},"name":"Dot","qualname":"::token::Dot","value":"Dot { spans }","parent":null,"children":[{"krate":0,"index":3544}],"decl_id":null,"docs":" `.`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3537},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58158,"byte_end":58161,"line_start":664,"line_end":664,"column_start":30,"column_end":33},"name":"Dot","qualname":"::token::Dot","value":"pub fn Dot<S: IntoSpans<[Span; ]>>(S) -> Dot","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58208,"byte_end":58212,"line_start":665,"line_end":665,"column_start":30,"column_end":34},"name":"Dot2","qualname":"::token::Dot2","value":"Dot2 { spans }","parent":null,"children":[{"krate":0,"index":3562}],"decl_id":null,"docs":" `..`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58208,"byte_end":58212,"line_start":665,"line_end":665,"column_start":30,"column_end":34},"name":"Dot2","qualname":"::token::Dot2","value":"pub fn Dot2<S: IntoSpans<[Span; ]>>(S) -> Dot2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3574},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58259,"byte_end":58263,"line_start":666,"line_end":666,"column_start":30,"column_end":34},"name":"Dot3","qualname":"::token::Dot3","value":"Dot3 { spans }","parent":null,"children":[{"krate":0,"index":3575}],"decl_id":null,"docs":" `...`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3568},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58259,"byte_end":58263,"line_start":666,"line_end":666,"column_start":30,"column_end":34},"name":"Dot3","qualname":"::token::Dot3","value":"pub fn Dot3<S: IntoSpans<[Span; ]>>(S) -> Dot3","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3587},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58311,"byte_end":58319,"line_start":667,"line_end":667,"column_start":30,"column_end":38},"name":"DotDotEq","qualname":"::token::DotDotEq","value":"DotDotEq { spans }","parent":null,"children":[{"krate":0,"index":3588}],"decl_id":null,"docs":" `..=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3581},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58311,"byte_end":58319,"line_start":667,"line_end":667,"column_start":30,"column_end":38},"name":"DotDotEq","qualname":"::token::DotDotEq","value":"pub fn DotDotEq<S: IntoSpans<[Span; ]>>(S) -> DotDotEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3600},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58363,"byte_end":58365,"line_start":668,"line_end":668,"column_start":30,"column_end":32},"name":"Eq","qualname":"::token::Eq","value":"Eq { spans }","parent":null,"children":[{"krate":0,"index":3601}],"decl_id":null,"docs":" `=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3594},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58363,"byte_end":58365,"line_start":668,"line_end":668,"column_start":30,"column_end":32},"name":"Eq","qualname":"::token::Eq","value":"pub fn Eq<S: IntoSpans<[Span; ]>>(S) -> Eq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58413,"byte_end":58417,"line_start":669,"line_end":669,"column_start":30,"column_end":34},"name":"EqEq","qualname":"::token::EqEq","value":"EqEq { spans }","parent":null,"children":[{"krate":0,"index":3619}],"decl_id":null,"docs":" `==`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58413,"byte_end":58417,"line_start":669,"line_end":669,"column_start":30,"column_end":34},"name":"EqEq","qualname":"::token::EqEq","value":"pub fn EqEq<S: IntoSpans<[Span; ]>>(S) -> EqEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3631},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58464,"byte_end":58466,"line_start":670,"line_end":670,"column_start":30,"column_end":32},"name":"Ge","qualname":"::token::Ge","value":"Ge { spans }","parent":null,"children":[{"krate":0,"index":3632}],"decl_id":null,"docs":" `>=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3625},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58464,"byte_end":58466,"line_start":670,"line_end":670,"column_start":30,"column_end":32},"name":"Ge","qualname":"::token::Ge","value":"pub fn Ge<S: IntoSpans<[Span; ]>>(S) -> Ge","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3644},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58515,"byte_end":58517,"line_start":671,"line_end":671,"column_start":30,"column_end":32},"name":"Gt","qualname":"::token::Gt","value":"Gt { spans }","parent":null,"children":[{"krate":0,"index":3645}],"decl_id":null,"docs":" `>`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3638},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58515,"byte_end":58517,"line_start":671,"line_end":671,"column_start":30,"column_end":32},"name":"Gt","qualname":"::token::Gt","value":"pub fn Gt<S: IntoSpans<[Span; ]>>(S) -> Gt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58565,"byte_end":58567,"line_start":672,"line_end":672,"column_start":30,"column_end":32},"name":"Le","qualname":"::token::Le","value":"Le { spans }","parent":null,"children":[{"krate":0,"index":3663}],"decl_id":null,"docs":" `<=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3656},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58565,"byte_end":58567,"line_start":672,"line_end":672,"column_start":30,"column_end":32},"name":"Le","qualname":"::token::Le","value":"pub fn Le<S: IntoSpans<[Span; ]>>(S) -> Le","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3675},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58616,"byte_end":58618,"line_start":673,"line_end":673,"column_start":30,"column_end":32},"name":"Lt","qualname":"::token::Lt","value":"Lt { spans }","parent":null,"children":[{"krate":0,"index":3676}],"decl_id":null,"docs":" `<`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3669},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58616,"byte_end":58618,"line_start":673,"line_end":673,"column_start":30,"column_end":32},"name":"Lt","qualname":"::token::Lt","value":"pub fn Lt<S: IntoSpans<[Span; ]>>(S) -> Lt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3693},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58666,"byte_end":58671,"line_start":674,"line_end":674,"column_start":30,"column_end":35},"name":"MulEq","qualname":"::token::MulEq","value":"MulEq { spans }","parent":null,"children":[{"krate":0,"index":3694}],"decl_id":null,"docs":" `*=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3687},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58666,"byte_end":58671,"line_start":674,"line_end":674,"column_start":30,"column_end":35},"name":"MulEq","qualname":"::token::MulEq","value":"pub fn MulEq<S: IntoSpans<[Span; ]>>(S) -> MulEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3706},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58717,"byte_end":58719,"line_start":675,"line_end":675,"column_start":30,"column_end":32},"name":"Ne","qualname":"::token::Ne","value":"Ne { spans }","parent":null,"children":[{"krate":0,"index":3707}],"decl_id":null,"docs":" `!=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58717,"byte_end":58719,"line_start":675,"line_end":675,"column_start":30,"column_end":32},"name":"Ne","qualname":"::token::Ne","value":"pub fn Ne<S: IntoSpans<[Span; ]>>(S) -> Ne","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3719},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58768,"byte_end":58770,"line_start":676,"line_end":676,"column_start":30,"column_end":32},"name":"Or","qualname":"::token::Or","value":"Or { spans }","parent":null,"children":[{"krate":0,"index":3720}],"decl_id":null,"docs":" `|`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3713},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58768,"byte_end":58770,"line_start":676,"line_end":676,"column_start":30,"column_end":32},"name":"Or","qualname":"::token::Or","value":"pub fn Or<S: IntoSpans<[Span; ]>>(S) -> Or","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3737},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58818,"byte_end":58822,"line_start":677,"line_end":677,"column_start":30,"column_end":34},"name":"OrEq","qualname":"::token::OrEq","value":"OrEq { spans }","parent":null,"children":[{"krate":0,"index":3738}],"decl_id":null,"docs":" `|=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3731},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58818,"byte_end":58822,"line_start":677,"line_end":677,"column_start":30,"column_end":34},"name":"OrEq","qualname":"::token::OrEq","value":"pub fn OrEq<S: IntoSpans<[Span; ]>>(S) -> OrEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3750},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58869,"byte_end":58873,"line_start":678,"line_end":678,"column_start":30,"column_end":34},"name":"OrOr","qualname":"::token::OrOr","value":"OrOr { spans }","parent":null,"children":[{"krate":0,"index":3751}],"decl_id":null,"docs":" `||`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58869,"byte_end":58873,"line_start":678,"line_end":678,"column_start":30,"column_end":34},"name":"OrOr","qualname":"::token::OrOr","value":"pub fn OrOr<S: IntoSpans<[Span; ]>>(S) -> OrOr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3763},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58920,"byte_end":58925,"line_start":679,"line_end":679,"column_start":30,"column_end":35},"name":"Pound","qualname":"::token::Pound","value":"Pound { spans }","parent":null,"children":[{"krate":0,"index":3764}],"decl_id":null,"docs":" `#`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3757},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58920,"byte_end":58925,"line_start":679,"line_end":679,"column_start":30,"column_end":35},"name":"Pound","qualname":"::token::Pound","value":"pub fn Pound<S: IntoSpans<[Span; ]>>(S) -> Pound","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3781},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58970,"byte_end":58978,"line_start":680,"line_end":680,"column_start":30,"column_end":38},"name":"Question","qualname":"::token::Question","value":"Question { spans }","parent":null,"children":[{"krate":0,"index":3782}],"decl_id":null,"docs":" `?`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3775},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":58970,"byte_end":58978,"line_start":680,"line_end":680,"column_start":30,"column_end":38},"name":"Question","qualname":"::token::Question","value":"pub fn Question<S: IntoSpans<[Span; ]>>(S) -> Question","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59020,"byte_end":59026,"line_start":681,"line_end":681,"column_start":30,"column_end":36},"name":"RArrow","qualname":"::token::RArrow","value":"RArrow { spans }","parent":null,"children":[{"krate":0,"index":3800}],"decl_id":null,"docs":" `->`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59020,"byte_end":59026,"line_start":681,"line_end":681,"column_start":30,"column_end":36},"name":"RArrow","qualname":"::token::RArrow","value":"pub fn RArrow<S: IntoSpans<[Span; ]>>(S) -> RArrow","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3812},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59071,"byte_end":59077,"line_start":682,"line_end":682,"column_start":30,"column_end":36},"name":"LArrow","qualname":"::token::LArrow","value":"LArrow { spans }","parent":null,"children":[{"krate":0,"index":3813}],"decl_id":null,"docs":" `<-`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3806},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59071,"byte_end":59077,"line_start":682,"line_end":682,"column_start":30,"column_end":36},"name":"LArrow","qualname":"::token::LArrow","value":"pub fn LArrow<S: IntoSpans<[Span; ]>>(S) -> LArrow","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3825},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59122,"byte_end":59125,"line_start":683,"line_end":683,"column_start":30,"column_end":33},"name":"Rem","qualname":"::token::Rem","value":"Rem { spans }","parent":null,"children":[{"krate":0,"index":3826}],"decl_id":null,"docs":" `%`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3819},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59122,"byte_end":59125,"line_start":683,"line_end":683,"column_start":30,"column_end":33},"name":"Rem","qualname":"::token::Rem","value":"pub fn Rem<S: IntoSpans<[Span; ]>>(S) -> Rem","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3843},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59172,"byte_end":59177,"line_start":684,"line_end":684,"column_start":30,"column_end":35},"name":"RemEq","qualname":"::token::RemEq","value":"RemEq { spans }","parent":null,"children":[{"krate":0,"index":3844}],"decl_id":null,"docs":" `%=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3837},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59172,"byte_end":59177,"line_start":684,"line_end":684,"column_start":30,"column_end":35},"name":"RemEq","qualname":"::token::RemEq","value":"pub fn RemEq<S: IntoSpans<[Span; ]>>(S) -> RemEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3856},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59223,"byte_end":59231,"line_start":685,"line_end":685,"column_start":30,"column_end":38},"name":"FatArrow","qualname":"::token::FatArrow","value":"FatArrow { spans }","parent":null,"children":[{"krate":0,"index":3857}],"decl_id":null,"docs":" `=>`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3850},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59223,"byte_end":59231,"line_start":685,"line_end":685,"column_start":30,"column_end":38},"name":"FatArrow","qualname":"::token::FatArrow","value":"pub fn FatArrow<S: IntoSpans<[Span; ]>>(S) -> FatArrow","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3869},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59274,"byte_end":59278,"line_start":686,"line_end":686,"column_start":30,"column_end":34},"name":"Semi","qualname":"::token::Semi","value":"Semi { spans }","parent":null,"children":[{"krate":0,"index":3870}],"decl_id":null,"docs":" `;`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3863},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59274,"byte_end":59278,"line_start":686,"line_end":686,"column_start":30,"column_end":34},"name":"Semi","qualname":"::token::Semi","value":"pub fn Semi<S: IntoSpans<[Span; ]>>(S) -> Semi","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3887},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59324,"byte_end":59327,"line_start":687,"line_end":687,"column_start":30,"column_end":33},"name":"Shl","qualname":"::token::Shl","value":"Shl { spans }","parent":null,"children":[{"krate":0,"index":3888}],"decl_id":null,"docs":" `<<`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3881},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59324,"byte_end":59327,"line_start":687,"line_end":687,"column_start":30,"column_end":33},"name":"Shl","qualname":"::token::Shl","value":"pub fn Shl<S: IntoSpans<[Span; ]>>(S) -> Shl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59375,"byte_end":59380,"line_start":688,"line_end":688,"column_start":30,"column_end":35},"name":"ShlEq","qualname":"::token::ShlEq","value":"ShlEq { spans }","parent":null,"children":[{"krate":0,"index":3901}],"decl_id":null,"docs":" `<<=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3894},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59375,"byte_end":59380,"line_start":688,"line_end":688,"column_start":30,"column_end":35},"name":"ShlEq","qualname":"::token::ShlEq","value":"pub fn ShlEq<S: IntoSpans<[Span; ]>>(S) -> ShlEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3913},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59427,"byte_end":59430,"line_start":689,"line_end":689,"column_start":30,"column_end":33},"name":"Shr","qualname":"::token::Shr","value":"Shr { spans }","parent":null,"children":[{"krate":0,"index":3914}],"decl_id":null,"docs":" `>>`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3907},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59427,"byte_end":59430,"line_start":689,"line_end":689,"column_start":30,"column_end":33},"name":"Shr","qualname":"::token::Shr","value":"pub fn Shr<S: IntoSpans<[Span; ]>>(S) -> Shr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3926},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59478,"byte_end":59483,"line_start":690,"line_end":690,"column_start":30,"column_end":35},"name":"ShrEq","qualname":"::token::ShrEq","value":"ShrEq { spans }","parent":null,"children":[{"krate":0,"index":3927}],"decl_id":null,"docs":" `>>=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3920},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59478,"byte_end":59483,"line_start":690,"line_end":690,"column_start":30,"column_end":35},"name":"ShrEq","qualname":"::token::ShrEq","value":"pub fn ShrEq<S: IntoSpans<[Span; ]>>(S) -> ShrEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59530,"byte_end":59534,"line_start":691,"line_end":691,"column_start":30,"column_end":34},"name":"Star","qualname":"::token::Star","value":"Star { spans }","parent":null,"children":[{"krate":0,"index":3940}],"decl_id":null,"docs":" `*`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3933},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59530,"byte_end":59534,"line_start":691,"line_end":691,"column_start":30,"column_end":34},"name":"Star","qualname":"::token::Star","value":"pub fn Star<S: IntoSpans<[Span; ]>>(S) -> Star","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3957},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59580,"byte_end":59583,"line_start":692,"line_end":692,"column_start":30,"column_end":33},"name":"Sub","qualname":"::token::Sub","value":"Sub { spans }","parent":null,"children":[{"krate":0,"index":3958}],"decl_id":null,"docs":" `-`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3951},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59580,"byte_end":59583,"line_start":692,"line_end":692,"column_start":30,"column_end":33},"name":"Sub","qualname":"::token::Sub","value":"pub fn Sub<S: IntoSpans<[Span; ]>>(S) -> Sub","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3975},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59630,"byte_end":59635,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"name":"SubEq","qualname":"::token::SubEq","value":"SubEq { spans }","parent":null,"children":[{"krate":0,"index":3976}],"decl_id":null,"docs":" `-=`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3969},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59630,"byte_end":59635,"line_start":693,"line_end":693,"column_start":30,"column_end":35},"name":"SubEq","qualname":"::token::SubEq","value":"pub fn SubEq<S: IntoSpans<[Span; ]>>(S) -> SubEq","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3988},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59681,"byte_end":59686,"line_start":694,"line_end":694,"column_start":30,"column_end":35},"name":"Tilde","qualname":"::token::Tilde","value":"Tilde { spans }","parent":null,"children":[{"krate":0,"index":3989}],"decl_id":null,"docs":" `~`","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47807,"byte_end":47817,"line_start":342,"line_end":342,"column_start":13,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47850,"byte_end":47853,"line_start":344,"line_end":344,"column_start":13,"column_end":16}},{"value":"/ Don't try to remember the name of this type -- use the [`Token!`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47866,"byte_end":47935,"line_start":345,"line_end":345,"column_start":13,"column_end":82}},{"value":"/ macro instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47948,"byte_end":47966,"line_start":346,"line_end":346,"column_start":13,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47979,"byte_end":47982,"line_start":347,"line_end":347,"column_start":13,"column_end":16}},{"value":"/ [`Token!`]: crate::token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":47995,"byte_end":48023,"line_start":348,"line_end":348,"column_start":13,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3982},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59681,"byte_end":59686,"line_start":694,"line_end":694,"column_start":30,"column_end":35},"name":"Tilde","qualname":"::token::Tilde","value":"pub fn Tilde<S: IntoSpans<[Span; ]>>(S) -> Tilde","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":48150,"byte_end":48174,"line_start":354,"line_end":354,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4036},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59755,"byte_end":59760,"line_start":698,"line_end":698,"column_start":30,"column_end":35},"name":"Brace","qualname":"::token::Brace","value":"Brace { span }","parent":null,"children":[{"krate":0,"index":4037}],"decl_id":null,"docs":" `{...}`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4000},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59755,"byte_end":59760,"line_start":698,"line_end":698,"column_start":30,"column_end":35},"name":"Brace","qualname":"::token::Brace","value":"pub fn Brace<S: IntoSpans<[Span; ]>>(S) -> Brace","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":50824,"byte_end":50848,"line_start":446,"line_end":446,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4041},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59809,"byte_end":59816,"line_start":699,"line_end":699,"column_start":30,"column_end":37},"name":"Bracket","qualname":"::token::Bracket","value":"Bracket { span }","parent":null,"children":[{"krate":0,"index":4042}],"decl_id":null,"docs":" `[...]`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4009},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59809,"byte_end":59816,"line_start":699,"line_end":699,"column_start":30,"column_end":37},"name":"Bracket","qualname":"::token::Bracket","value":"pub fn Bracket<S: IntoSpans<[Span; ]>>(S) -> Bracket","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":50824,"byte_end":50848,"line_start":446,"line_end":446,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4046},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59863,"byte_end":59868,"line_start":700,"line_end":700,"column_start":30,"column_end":35},"name":"Paren","qualname":"::token::Paren","value":"Paren { span }","parent":null,"children":[{"krate":0,"index":4047}],"decl_id":null,"docs":" `(...)`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4018},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59863,"byte_end":59868,"line_start":700,"line_end":700,"column_start":30,"column_end":35},"name":"Paren","qualname":"::token::Paren","value":"pub fn Paren<S: IntoSpans<[Span; ]>>(S) -> Paren","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":50824,"byte_end":50848,"line_start":446,"line_end":446,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4051},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59917,"byte_end":59922,"line_start":701,"line_end":701,"column_start":30,"column_end":35},"name":"Group","qualname":"::token::Group","value":"Group { span }","parent":null,"children":[{"krate":0,"index":4052}],"decl_id":null,"docs":" None-delimited group\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4027},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":59917,"byte_end":59922,"line_start":701,"line_end":701,"column_start":30,"column_end":35},"name":"Group","qualname":"::token::Group","value":"pub fn Group<S: IntoSpans<[Span; ]>>(S) -> Group","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":50824,"byte_end":50848,"line_start":446,"line_end":446,"column_start":13,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66343,"byte_end":66350,"line_start":836,"line_end":836,"column_start":9,"column_end":16},"name":"parsing","qualname":"::token::parsing","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66307,"byte_end":66334,"line_start":835,"line_end":835,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66513,"byte_end":66520,"line_start":844,"line_end":844,"column_start":12,"column_end":19},"name":"keyword","qualname":"::token::parsing::keyword","value":"pub fn keyword(ParseStream, &str) -> Result<Span>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":66873,"byte_end":66885,"line_start":855,"line_end":855,"column_start":12,"column_end":24},"name":"peek_keyword","qualname":"::token::parsing::peek_keyword","value":"pub fn peek_keyword(Cursor, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":67070,"byte_end":67075,"line_start":863,"line_end":863,"column_start":12,"column_end":17},"name":"punct","qualname":"::token::parsing::punct","value":"pub fn punct<S: FromSpans>(ParseStream, &str) -> Result<S>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":68232,"byte_end":68242,"line_start":895,"line_end":895,"column_start":12,"column_end":22},"name":"peek_punct","qualname":"::token::parsing::peek_punct","value":"pub fn peek_punct(Cursor, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":68902,"byte_end":68910,"line_start":918,"line_end":918,"column_start":9,"column_end":17},"name":"printing","qualname":"::token::printing","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"printing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":68865,"byte_end":68893,"line_start":917,"line_end":917,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":69039,"byte_end":69044,"line_start":922,"line_end":922,"column_start":12,"column_end":17},"name":"punct","qualname":"::token::printing::punct","value":"pub fn punct(&str, &[Span], &mut TokenStream)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":69608,"byte_end":69615,"line_start":940,"line_end":940,"column_start":12,"column_end":19},"name":"keyword","qualname":"::token::printing::keyword","value":"pub fn keyword(&str, Span, &mut TokenStream)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":69727,"byte_end":69732,"line_start":944,"line_end":944,"column_start":12,"column_end":17},"name":"delim","qualname":"::token::printing::delim","value":"pub fn delim<F>(&str, Span, &mut TokenStream, F) where\nF: FnOnce(&mut TokenStream) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":70587,"byte_end":70592,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"Ident","qualname":"::ident::Ident","value":"pub fn Ident(lookahead::TokenMarker) -> Ident","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":70512,"byte_end":70539,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":70555,"byte_end":70579,"line_start":14,"line_end":14,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":4067},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76556,"byte_end":76565,"line_start":96,"line_end":96,"column_start":16,"column_end":25},"name":"Attribute","qualname":"::attr::Attribute","value":"Attribute { pound_token, style, bracket_token, path, tts }","parent":null,"children":[{"krate":0,"index":4068},{"krate":0,"index":4069},{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4072}],"decl_id":null,"docs":" An attribute like `#[repr(transparent)]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76601,"byte_end":76612,"line_start":97,"line_end":97,"column_start":13,"column_end":24},"name":"pound_token","qualname":"::attr::Attribute::pound_token","value":"token::Pound","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4069},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76637,"byte_end":76642,"line_start":98,"line_end":98,"column_start":13,"column_end":18},"name":"style","qualname":"::attr::Attribute::style","value":"attr::AttrStyle","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4070},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76667,"byte_end":76680,"line_start":99,"line_end":99,"column_start":13,"column_end":26},"name":"bracket_token","qualname":"::attr::Attribute::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4071},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76710,"byte_end":76714,"line_start":100,"line_end":100,"column_start":13,"column_end":17},"name":"path","qualname":"::attr::Attribute::path","value":"path::Path","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4072},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":76734,"byte_end":76737,"line_start":101,"line_end":101,"column_start":13,"column_end":16},"name":"tts","qualname":"::attr::Attribute::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":4067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":77738,"byte_end":77752,"line_start":139,"line_end":139,"column_start":12,"column_end":26},"name":"interpret_meta","qualname":"<Attribute>::interpret_meta","value":"pub fn interpret_meta(&Self) -> Option<Meta>","parent":null,"children":[],"decl_id":null,"docs":" Parses the content of the attribute, consisting of the path and tts, as\n a [`Meta`] if possible.","sig":null,"attributes":[{"value":"/ Parses the content of the attribute, consisting of the path and tts, as","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":77546,"byte_end":77621,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ a [`Meta`] if possible.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":77626,"byte_end":77653,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":77658,"byte_end":77661,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Deprecated; use `parse_meta` instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":77666,"byte_end":77707,"line_start":137,"line_end":137,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":78879,"byte_end":78889,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"parse_meta","qualname":"<Attribute>::parse_meta","value":"pub fn parse_meta(&Self) -> Result<Meta>","parent":null,"children":[],"decl_id":null,"docs":" Parses the content of the attribute, consisting of the path and tts, as\n a [`Meta`] if possible.\n","sig":null,"attributes":[{"value":"/ Parses the content of the attribute, consisting of the path and tts, as","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":78728,"byte_end":78803,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ a [`Meta`] if possible.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":78808,"byte_end":78835,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":78840,"byte_end":78867,"line_start":177,"line_end":177,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":79767,"byte_end":79778,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"parse_outer","qualname":"<Attribute>::parse_outer","value":"pub fn parse_outer(ParseStream) -> Result<Vec<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more outer attributes from the stream.","sig":null,"attributes":[{"value":"/ Parses zero or more outer attributes from the stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":79567,"byte_end":79624,"line_start":197,"line_end":197,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":79629,"byte_end":79632,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":79637,"byte_end":79705,"line_start":199,"line_end":199,"column_start":5,"column_end":73}},{"value":"/ feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":79710,"byte_end":79723,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":79728,"byte_end":79755,"line_start":201,"line_end":201,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":80201,"byte_end":80212,"line_start":215,"line_end":215,"column_start":12,"column_end":23},"name":"parse_inner","qualname":"<Attribute>::parse_inner","value":"pub fn parse_inner(ParseStream) -> Result<Vec<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more inner attributes from the stream.","sig":null,"attributes":[{"value":"/ Parses zero or more inner attributes from the stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":80001,"byte_end":80058,"line_start":210,"line_end":210,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":80063,"byte_end":80066,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":80071,"byte_end":80139,"line_start":212,"line_end":212,"column_start":5,"column_end":73}},{"value":"/ feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":80144,"byte_end":80157,"line_start":213,"line_end":213,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":80162,"byte_end":80189,"line_start":214,"line_end":214,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4076},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":85436,"byte_end":85441,"line_start":384,"line_end":384,"column_start":9,"column_end":14},"name":"Outer","qualname":"::attr::AttrStyle::Outer","value":"AttrStyle::Outer","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4078},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":85451,"byte_end":85456,"line_start":385,"line_end":385,"column_start":9,"column_end":14},"name":"Inner","qualname":"::attr::AttrStyle::Inner","value":"AttrStyle::Inner(crate::token::Bang)","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4075},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":85416,"byte_end":85425,"line_start":383,"line_end":383,"column_start":14,"column_end":23},"name":"AttrStyle","qualname":"::attr::AttrStyle","value":"pub enum AttrStyle { Outer, Inner(crate::token::Bang), }","parent":null,"children":[{"krate":0,"index":4076},{"krate":0,"index":4078}],"decl_id":null,"docs":" Distinguishes between attributes that decorate an item and attributes\n that are contained within an item.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4091},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86317,"byte_end":86321,"line_start":417,"line_end":417,"column_start":13,"column_end":17},"name":"Word","qualname":"::attr::Meta::Word","value":"Meta::Word(Ident)","parent":{"krate":0,"index":4090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4094},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86539,"byte_end":86543,"line_start":422,"line_end":422,"column_start":13,"column_end":17},"name":"List","qualname":"::attr::Meta::List","value":"Meta::List(MetaList)","parent":{"krate":0,"index":4090},"children":[],"decl_id":null,"docs":" A structured list within an attribute, like `derive(Copy, Clone)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4097},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86908,"byte_end":86917,"line_start":431,"line_end":431,"column_start":13,"column_end":22},"name":"NameValue","qualname":"::attr::Meta::NameValue","value":"Meta::NameValue(MetaNameValue)","parent":{"krate":0,"index":4090},"children":[],"decl_id":null,"docs":" A name-value pair within an attribute, like `feature = \"nightly\"`.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4090},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86298,"byte_end":86302,"line_start":416,"line_end":416,"column_start":14,"column_end":18},"name":"Meta","qualname":"::attr::Meta","value":"pub enum Meta {\n    Word(Ident),\n\n    #[doc =\n      r\" A structured list within an attribute, like `derive(Copy, Clone)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    List(MetaList),\n\n    #[doc =\n      r#\" A name-value pair within an attribute, like `feature = \"nightly\"`.\"#]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    NameValue(MetaNameValue),\n}","parent":null,"children":[{"krate":0,"index":4091},{"krate":0,"index":4094},{"krate":0,"index":4097}],"decl_id":null,"docs":" Content of a compile-time structured attribute.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4102},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86544,"byte_end":86552,"line_start":422,"line_end":422,"column_start":18,"column_end":26},"name":"MetaList","qualname":"::attr::MetaList","value":"MetaList { ident, paren_token, nested }","parent":null,"children":[{"krate":0,"index":4103},{"krate":0,"index":4104},{"krate":0,"index":4105}],"decl_id":null,"docs":" A structured list within an attribute, like `derive(Copy, Clone)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4103},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86571,"byte_end":86576,"line_start":423,"line_end":423,"column_start":17,"column_end":22},"name":"ident","qualname":"::attr::MetaList::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":4102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86601,"byte_end":86612,"line_start":424,"line_end":424,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::attr::MetaList::paren_token","value":"token::Paren","parent":{"krate":0,"index":4102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4105},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86644,"byte_end":86650,"line_start":425,"line_end":425,"column_start":17,"column_end":23},"name":"nested","qualname":"::attr::MetaList::nested","value":"punctuated::Punctuated<attr::NestedMeta, token::Comma>","parent":{"krate":0,"index":4102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4108},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86918,"byte_end":86931,"line_start":431,"line_end":431,"column_start":23,"column_end":36},"name":"MetaNameValue","qualname":"::attr::MetaNameValue","value":"MetaNameValue { ident, eq_token, lit }","parent":null,"children":[{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4111}],"decl_id":null,"docs":" A name-value pair within an attribute, like `feature = \"nightly\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4109},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86950,"byte_end":86955,"line_start":432,"line_end":432,"column_start":17,"column_end":22},"name":"ident","qualname":"::attr::MetaNameValue::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4110},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":86980,"byte_end":86988,"line_start":433,"line_end":433,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::attr::MetaNameValue::eq_token","value":"token::Eq","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4111},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87017,"byte_end":87020,"line_start":434,"line_end":434,"column_start":17,"column_end":20},"name":"lit","qualname":"::attr::MetaNameValue::lit","value":"lit::Lit","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87303,"byte_end":87307,"line_start":444,"line_end":444,"column_start":12,"column_end":16},"name":"name","qualname":"<Meta>::name","value":"pub fn name(&Self) -> Ident","parent":null,"children":[],"decl_id":null,"docs":" Returns the identifier that begins this structured meta item.","sig":null,"attributes":[{"value":"/ Returns the identifier that begins this structured meta item.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87064,"byte_end":87129,"line_start":440,"line_end":440,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87134,"byte_end":87137,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ For example this would return the `test` in `#[test]`, the `derive` in","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87142,"byte_end":87216,"line_start":442,"line_end":442,"column_start":5,"column_end":79}},{"value":"/ `#[derive(Copy)]`, and the `path` in `#[path = \"sys/windows.rs\"]`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87221,"byte_end":87291,"line_start":443,"line_end":443,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4121},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87874,"byte_end":87878,"line_start":461,"line_end":461,"column_start":13,"column_end":17},"name":"Meta","qualname":"::attr::NestedMeta::Meta","value":"NestedMeta::Meta(Meta)","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" A structured meta item, like the `Copy` in `#[derive(Copy)]` which\n would be a nested `Meta::Word`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4124},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87977,"byte_end":87984,"line_start":464,"line_end":464,"column_start":13,"column_end":20},"name":"Literal","qualname":"::attr::NestedMeta::Literal","value":"NestedMeta::Literal(Lit)","parent":{"krate":0,"index":4120},"children":[],"decl_id":null,"docs":" A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4120},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87726,"byte_end":87736,"line_start":458,"line_end":458,"column_start":14,"column_end":24},"name":"NestedMeta","qualname":"::attr::NestedMeta","value":"pub enum NestedMeta {\n\n    #[doc =\n      r\" A structured meta item, like the `Copy` in `#[derive(Copy)]` which\"]\n    #[doc = r\" would be a nested `Meta::Word`.\"]\n    Meta(Meta),\n\n    #[doc =\n      r#\" A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.\"#]\n    Literal(Lit),\n}","parent":null,"children":[{"krate":0,"index":4121},{"krate":0,"index":4124}],"decl_id":null,"docs":" Element of a compile-time attribute list.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88995,"byte_end":89008,"line_start":503,"line_end":503,"column_start":10,"column_end":23},"name":"AttributeArgs","qualname":"::attr::AttributeArgs","value":"Vec<NestedMeta>","parent":null,"children":[],"decl_id":null,"docs":" Conventional argument type associated with an invocation of an attribute\n macro.","sig":null,"attributes":[{"value":"/ Conventional argument type associated with an invocation of an attribute","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88000,"byte_end":88076,"line_start":468,"line_end":468,"column_start":1,"column_end":77}},{"value":"/ macro.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88077,"byte_end":88087,"line_start":469,"line_end":469,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88088,"byte_end":88091,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ For example if we are developing an attribute macro that is intended to be","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88092,"byte_end":88170,"line_start":471,"line_end":471,"column_start":1,"column_end":79}},{"value":"/ invoked on function items as follows:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88171,"byte_end":88212,"line_start":472,"line_end":472,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88213,"byte_end":88216,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88217,"byte_end":88235,"line_start":474,"line_end":474,"column_start":1,"column_end":19}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88236,"byte_end":88275,"line_start":475,"line_end":475,"column_start":1,"column_end":40}},{"value":"/ #[my_attribute(path = \"/v1/refresh\")]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88276,"byte_end":88317,"line_start":476,"line_end":476,"column_start":1,"column_end":42}},{"value":"/ # };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88318,"byte_end":88326,"line_start":477,"line_end":477,"column_start":1,"column_end":9}},{"value":"/ pub fn refresh() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88327,"byte_end":88349,"line_start":478,"line_end":478,"column_start":1,"column_end":23}},{"value":"/     /* ... */","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88350,"byte_end":88367,"line_start":479,"line_end":479,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88368,"byte_end":88373,"line_start":480,"line_end":480,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88374,"byte_end":88381,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88382,"byte_end":88385,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ The implementation of this macro would want to parse its attribute arguments","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88386,"byte_end":88466,"line_start":483,"line_end":483,"column_start":1,"column_end":81}},{"value":"/ as type `AttributeArgs`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88467,"byte_end":88495,"line_start":484,"line_end":484,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88496,"byte_end":88499,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88500,"byte_end":88518,"line_start":486,"line_end":486,"column_start":1,"column_end":19}},{"value":"/ extern crate proc_macro;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88519,"byte_end":88547,"line_start":487,"line_end":487,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88548,"byte_end":88551,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88552,"byte_end":88584,"line_start":489,"line_end":489,"column_start":1,"column_end":33}},{"value":"/ use syn::{parse_macro_input, AttributeArgs, ItemFn};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88585,"byte_end":88641,"line_start":490,"line_end":490,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88642,"byte_end":88645,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88646,"byte_end":88685,"line_start":492,"line_end":492,"column_start":1,"column_end":40}},{"value":"/ #[proc_macro_attribute]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88686,"byte_end":88713,"line_start":493,"line_end":493,"column_start":1,"column_end":28}},{"value":"/ # };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88714,"byte_end":88722,"line_start":494,"line_end":494,"column_start":1,"column_end":9}},{"value":"/ pub fn my_attribute(args: TokenStream, input: TokenStream) -> TokenStream {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88723,"byte_end":88802,"line_start":495,"line_end":495,"column_start":1,"column_end":80}},{"value":"/     let args = parse_macro_input!(args as AttributeArgs);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88803,"byte_end":88864,"line_start":496,"line_end":496,"column_start":1,"column_end":62}},{"value":"/     let input = parse_macro_input!(input as ItemFn);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88865,"byte_end":88921,"line_start":497,"line_end":497,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88922,"byte_end":88925,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/     /* ... */","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88926,"byte_end":88943,"line_start":499,"line_end":499,"column_start":1,"column_end":18}},{"value":"/ #   \"\".parse().unwrap()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88944,"byte_end":88971,"line_start":500,"line_end":500,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88972,"byte_end":88977,"line_start":501,"line_end":501,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":88978,"byte_end":88985,"line_start":502,"line_end":502,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":89066,"byte_end":89069,"line_start":506,"line_end":506,"column_start":10,"column_end":13},"name":"Ret","qualname":"::attr::FilterAttrs::Ret","value":"type Ret: Iterator<Item = &'a Attribute>;","parent":{"krate":0,"index":215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4131},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94468,"byte_end":94475,"line_start":9,"line_end":9,"column_start":16,"column_end":23},"name":"Variant","qualname":"::data::Variant","value":"Variant { attrs, ident, fields, discriminant }","parent":null,"children":[{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4135}],"decl_id":null,"docs":" An enum variant.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94536,"byte_end":94541,"line_start":11,"line_end":11,"column_start":13,"column_end":18},"name":"attrs","qualname":"::data::Variant::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4131},"children":[],"decl_id":null,"docs":" Attributes tagged on the variant.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the variant.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94486,"byte_end":94523,"line_start":10,"line_end":10,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":4133},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94605,"byte_end":94610,"line_start":14,"line_end":14,"column_start":13,"column_end":18},"name":"ident","qualname":"::data::Variant::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":4131},"children":[],"decl_id":null,"docs":" Name of the variant.\n","sig":null,"attributes":[{"value":"/ Name of the variant.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94568,"byte_end":94592,"line_start":13,"line_end":13,"column_start":9,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":4134},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94675,"byte_end":94681,"line_start":17,"line_end":17,"column_start":13,"column_end":19},"name":"fields","qualname":"::data::Variant::fields","value":"data::Fields","parent":{"krate":0,"index":4131},"children":[],"decl_id":null,"docs":" Content stored in the variant.\n","sig":null,"attributes":[{"value":"/ Content stored in the variant.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94628,"byte_end":94662,"line_start":16,"line_end":16,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":4135},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94753,"byte_end":94765,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"name":"discriminant","qualname":"::data::Variant::discriminant","value":"std::option::Option<(token::Eq, expr::Expr)>","parent":{"krate":0,"index":4131},"children":[],"decl_id":null,"docs":" Explicit discriminant: `Variant = 1`\n","sig":null,"attributes":[{"value":"/ Explicit discriminant: `Variant = 1`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":94700,"byte_end":94740,"line_start":19,"line_end":19,"column_start":9,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4143},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95546,"byte_end":95551,"line_start":44,"line_end":44,"column_start":13,"column_end":18},"name":"Named","qualname":"::data::Fields::Named","value":"Fields::Named(FieldsNamed)","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Named fields of a struct or struct variant such as `Point { x: f64,\n y: f64 }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4146},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95886,"byte_end":95893,"line_start":53,"line_end":53,"column_start":13,"column_end":20},"name":"Unnamed","qualname":"::data::Fields::Unnamed","value":"Fields::Unnamed(FieldsUnnamed)","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4149},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96089,"byte_end":96093,"line_start":59,"line_end":59,"column_start":13,"column_end":17},"name":"Unit","qualname":"::data::Fields::Unit","value":"Fields::Unit","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Unit struct or unit variant such as `None`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4142},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95304,"byte_end":95310,"line_start":38,"line_end":38,"column_start":14,"column_end":20},"name":"Fields","qualname":"::data::Fields","value":"pub enum Fields {\n\n    #[doc =\n      r\" Named fields of a struct or struct variant such as `Point { x: f64,\"]\n    #[doc = r\" y: f64 }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Named(FieldsNamed),\n\n    #[doc =\n      r\" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Unnamed(FieldsUnnamed),\n\n    #[doc = r\" Unit struct or unit variant such as `None`.\"]\n    Unit,\n}","parent":null,"children":[{"krate":0,"index":4143},{"krate":0,"index":4146},{"krate":0,"index":4149}],"decl_id":null,"docs":" Data stored within an enum variant or struct.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4153},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95552,"byte_end":95563,"line_start":44,"line_end":44,"column_start":19,"column_end":30},"name":"FieldsNamed","qualname":"::data::FieldsNamed","value":"FieldsNamed { brace_token, named }","parent":null,"children":[{"krate":0,"index":4154},{"krate":0,"index":4155}],"decl_id":null,"docs":" Named fields of a struct or struct variant such as `Point { x: f64,\n y: f64 }`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4154},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95582,"byte_end":95593,"line_start":45,"line_end":45,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::data::FieldsNamed::brace_token","value":"token::Brace","parent":{"krate":0,"index":4153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4155},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95625,"byte_end":95630,"line_start":46,"line_end":46,"column_start":17,"column_end":22},"name":"named","qualname":"::data::FieldsNamed::named","value":"punctuated::Punctuated<data::Field, token::Comma>","parent":{"krate":0,"index":4153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4158},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95894,"byte_end":95907,"line_start":53,"line_end":53,"column_start":21,"column_end":34},"name":"FieldsUnnamed","qualname":"::data::FieldsUnnamed","value":"FieldsUnnamed { paren_token, unnamed }","parent":null,"children":[{"krate":0,"index":4159},{"krate":0,"index":4160}],"decl_id":null,"docs":" Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4159},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95926,"byte_end":95937,"line_start":54,"line_end":54,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::data::FieldsUnnamed::paren_token","value":"token::Paren","parent":{"krate":0,"index":4158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4160},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":95969,"byte_end":95976,"line_start":55,"line_end":55,"column_start":17,"column_end":24},"name":"unnamed","qualname":"::data::FieldsUnnamed::unnamed","value":"punctuated::Punctuated<data::Field, token::Comma>","parent":{"krate":0,"index":4158},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96318,"byte_end":96322,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"iter","qualname":"<Fields>::iter","value":"pub fn iter(&Self) -> punctuated::Iter<, Field>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the borrowed [`Field`] items in this object. This\n iterator can be used to iterate over a named or unnamed struct or\n variant's fields uniformly.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the borrowed [`Field`] items in this object. This","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96122,"byte_end":96196,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ iterator can be used to iterate over a named or unnamed struct or","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96201,"byte_end":96270,"line_start":65,"line_end":65,"column_start":5,"column_end":74}},{"value":"/ variant's fields uniformly.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96275,"byte_end":96306,"line_start":66,"line_end":66,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96776,"byte_end":96784,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Fields>::iter_mut","value":"pub fn iter_mut(&mut Self) -> punctuated::IterMut<, Field>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the mutably borrowed [`Field`] items in this\n object. This iterator can be used to iterate over a named or unnamed\n struct or variant's fields uniformly.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the mutably borrowed [`Field`] items in this","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96572,"byte_end":96641,"line_start":75,"line_end":75,"column_start":5,"column_end":74}},{"value":"/ object. This iterator can be used to iterate over a named or unnamed","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96646,"byte_end":96718,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ struct or variant's fields uniformly.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96723,"byte_end":96764,"line_start":77,"line_end":77,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4165},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97630,"byte_end":97635,"line_start":110,"line_end":110,"column_start":16,"column_end":21},"name":"Field","qualname":"::data::Field","value":"Field { attrs, vis, ident, colon_token, ty }","parent":null,"children":[{"krate":0,"index":4166},{"krate":0,"index":4167},{"krate":0,"index":4168},{"krate":0,"index":4169},{"krate":0,"index":4170}],"decl_id":null,"docs":" A field of a struct or enum variant.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4166},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97694,"byte_end":97699,"line_start":112,"line_end":112,"column_start":13,"column_end":18},"name":"attrs","qualname":"::data::Field::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4165},"children":[],"decl_id":null,"docs":" Attributes tagged on the field.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the field.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97646,"byte_end":97681,"line_start":111,"line_end":111,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":4167},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97767,"byte_end":97770,"line_start":115,"line_end":115,"column_start":13,"column_end":16},"name":"vis","qualname":"::data::Field::vis","value":"data::Visibility","parent":{"krate":0,"index":4165},"children":[],"decl_id":null,"docs":" Visibility of the field.\n","sig":null,"attributes":[{"value":"/ Visibility of the field.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97726,"byte_end":97754,"line_start":114,"line_end":114,"column_start":9,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4168},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97899,"byte_end":97904,"line_start":120,"line_end":120,"column_start":13,"column_end":18},"name":"ident","qualname":"::data::Field::ident","value":"std::option::Option<proc_macro2::Ident>","parent":{"krate":0,"index":4165},"children":[],"decl_id":null,"docs":" Name of the field, if any.","sig":null,"attributes":[{"value":"/ Name of the field, if any.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97793,"byte_end":97823,"line_start":117,"line_end":117,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97832,"byte_end":97835,"line_start":118,"line_end":118,"column_start":9,"column_end":12}},{"value":"/ Fields of tuple structs have no names.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97844,"byte_end":97886,"line_start":119,"line_end":119,"column_start":9,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4169},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97934,"byte_end":97945,"line_start":122,"line_end":122,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::data::Field::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":4165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4170},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":98010,"byte_end":98012,"line_start":125,"line_end":125,"column_start":13,"column_end":15},"name":"ty","qualname":"::data::Field::ty","value":"ty::Type","parent":{"krate":0,"index":4165},"children":[],"decl_id":null,"docs":" Type of the field.\n","sig":null,"attributes":[{"value":"/ Type of the field.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":97975,"byte_end":97997,"line_start":124,"line_end":124,"column_start":9,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4180},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":98755,"byte_end":98761,"line_start":149,"line_end":149,"column_start":13,"column_end":19},"name":"Public","qualname":"::data::Visibility::Public","value":"Visibility::Public(VisPublic)","parent":{"krate":0,"index":4179},"children":[],"decl_id":null,"docs":" A public visibility level: `pub`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4183},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99004,"byte_end":99009,"line_start":157,"line_end":157,"column_start":13,"column_end":18},"name":"Crate","qualname":"::data::Visibility::Crate","value":"Visibility::Crate(VisCrate)","parent":{"krate":0,"index":4179},"children":[],"decl_id":null,"docs":" A crate-level visibility: `crate`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4186},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99347,"byte_end":99357,"line_start":166,"line_end":166,"column_start":13,"column_end":23},"name":"Restricted","qualname":"::data::Visibility::Restricted","value":"Visibility::Restricted(VisRestricted)","parent":{"krate":0,"index":4179},"children":[],"decl_id":null,"docs":" A visibility level restricted to some path: `pub(self)` or\n `pub(super)` or `pub(crate)` or `pub(in some::module)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4189},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99627,"byte_end":99636,"line_start":174,"line_end":174,"column_start":13,"column_end":22},"name":"Inherited","qualname":"::data::Visibility::Inherited","value":"Visibility::Inherited","parent":{"krate":0,"index":4179},"children":[],"decl_id":null,"docs":" An inherited visibility, which usually means private.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4179},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":98566,"byte_end":98576,"line_start":144,"line_end":144,"column_start":14,"column_end":24},"name":"Visibility","qualname":"::data::Visibility","value":"pub enum Visibility {\n\n    #[doc = r\" A public visibility level: `pub`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Public(VisPublic),\n\n    #[doc = r\" A crate-level visibility: `crate`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Crate(VisCrate),\n\n    #[doc = r\" A visibility level restricted to some path: `pub(self)` or\"]\n    #[doc = r\" `pub(super)` or `pub(crate)` or `pub(in some::module)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Restricted(VisRestricted),\n\n    #[doc = r\" An inherited visibility, which usually means private.\"]\n    Inherited,\n}","parent":null,"children":[{"krate":0,"index":4180},{"krate":0,"index":4183},{"krate":0,"index":4186},{"krate":0,"index":4189}],"decl_id":null,"docs":" The visibility level of an item: inherited or `pub` or\n `pub(restricted)`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4193},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":98762,"byte_end":98771,"line_start":149,"line_end":149,"column_start":20,"column_end":29},"name":"VisPublic","qualname":"::data::VisPublic","value":"VisPublic { pub_token }","parent":null,"children":[{"krate":0,"index":4194}],"decl_id":null,"docs":" A public visibility level: `pub`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4194},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":98790,"byte_end":98799,"line_start":150,"line_end":150,"column_start":17,"column_end":26},"name":"pub_token","qualname":"::data::VisPublic::pub_token","value":"token::Pub","parent":{"krate":0,"index":4193},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4197},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99010,"byte_end":99018,"line_start":157,"line_end":157,"column_start":19,"column_end":27},"name":"VisCrate","qualname":"::data::VisCrate","value":"VisCrate { crate_token }","parent":null,"children":[{"krate":0,"index":4198}],"decl_id":null,"docs":" A crate-level visibility: `crate`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4198},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99037,"byte_end":99048,"line_start":158,"line_end":158,"column_start":17,"column_end":28},"name":"crate_token","qualname":"::data::VisCrate::crate_token","value":"token::Crate","parent":{"krate":0,"index":4197},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99358,"byte_end":99371,"line_start":166,"line_end":166,"column_start":24,"column_end":37},"name":"VisRestricted","qualname":"::data::VisRestricted","value":"VisRestricted { pub_token, paren_token, in_token, path }","parent":null,"children":[{"krate":0,"index":4202},{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":4205}],"decl_id":null,"docs":" A visibility level restricted to some path: `pub(self)` or\n `pub(super)` or `pub(crate)` or `pub(in some::module)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99390,"byte_end":99399,"line_start":167,"line_end":167,"column_start":17,"column_end":26},"name":"pub_token","qualname":"::data::VisRestricted::pub_token","value":"token::Pub","parent":{"krate":0,"index":4201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4203},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99430,"byte_end":99441,"line_start":168,"line_end":168,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::data::VisRestricted::paren_token","value":"token::Paren","parent":{"krate":0,"index":4201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4204},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99473,"byte_end":99481,"line_start":169,"line_end":169,"column_start":17,"column_end":25},"name":"in_token","qualname":"::data::VisRestricted::in_token","value":"std::option::Option<token::In>","parent":{"krate":0,"index":4201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4205},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99519,"byte_end":99523,"line_start":170,"line_end":170,"column_start":17,"column_end":21},"name":"path","qualname":"::data::VisRestricted::path","value":"std::boxed::Box<path::Path>","parent":{"krate":0,"index":4201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101432,"byte_end":101443,"line_start":234,"line_end":234,"column_start":16,"column_end":27},"name":"parse_named","qualname":"<Field>::parse_named","value":"pub fn parse_named(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses a named (braced struct) field.\n","sig":null,"attributes":[{"value":"/ Parses a named (braced struct) field.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101375,"byte_end":101416,"line_start":233,"line_end":233,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101827,"byte_end":101840,"line_start":245,"line_end":245,"column_start":16,"column_end":29},"name":"parse_unnamed","qualname":"<Field>::parse_unnamed","value":"pub fn parse_unnamed(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parses an unnamed (tuple struct) field.\n","sig":null,"attributes":[{"value":"/ Parses an unnamed (tuple struct) field.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101768,"byte_end":101811,"line_start":244,"line_end":244,"column_start":9,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4291},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109418,"byte_end":109421,"line_start":90,"line_end":90,"column_start":13,"column_end":16},"name":"Box","qualname":"::expr::Expr::Box","value":"Expr::Box(ExprBox)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A box expression: `box f`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4294},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109721,"byte_end":109728,"line_start":99,"line_end":99,"column_start":13,"column_end":20},"name":"InPlace","qualname":"::expr::Expr::InPlace","value":"Expr::InPlace(ExprInPlace)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A placement expression: `place <- value`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4297},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110070,"byte_end":110075,"line_start":109,"line_end":109,"column_start":13,"column_end":18},"name":"Array","qualname":"::expr::Expr::Array","value":"Expr::Array(ExprArray)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A slice literal expression: `[a, b, c, d]`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4300},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110431,"byte_end":110435,"line_start":119,"line_end":119,"column_start":13,"column_end":17},"name":"Call","qualname":"::expr::Expr::Call","value":"Expr::Call(ExprCall)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A function call expression: `invoke(a, b)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4303},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110788,"byte_end":110798,"line_start":129,"line_end":129,"column_start":13,"column_end":23},"name":"MethodCall","qualname":"::expr::Expr::MethodCall","value":"Expr::MethodCall(ExprMethodCall)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A method call expression: `x.foo::<T>(a, b)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4306},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111278,"byte_end":111283,"line_start":142,"line_end":142,"column_start":13,"column_end":18},"name":"Tuple","qualname":"::expr::Expr::Tuple","value":"Expr::Tuple(ExprTuple)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A tuple expression: `(a, b, c, d)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4309},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111629,"byte_end":111635,"line_start":152,"line_end":152,"column_start":13,"column_end":19},"name":"Binary","qualname":"::expr::Expr::Binary","value":"Expr::Binary(ExprBinary)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A binary operation: `a + b`, `a * b`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111968,"byte_end":111973,"line_start":163,"line_end":163,"column_start":13,"column_end":18},"name":"Unary","qualname":"::expr::Expr::Unary","value":"Expr::Unary(ExprUnary)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A unary operation: `!x`, `*x`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4315},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112290,"byte_end":112293,"line_start":173,"line_end":173,"column_start":13,"column_end":16},"name":"Lit","qualname":"::expr::Expr::Lit","value":"Expr::Lit(ExprLit)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A literal in place of an expression: `1`, `\"foo\"`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4318},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112557,"byte_end":112561,"line_start":182,"line_end":182,"column_start":13,"column_end":17},"name":"Cast","qualname":"::expr::Expr::Cast","value":"Expr::Cast(ExprCast)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A cast expression: `foo as f64`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4321},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112885,"byte_end":112889,"line_start":192,"line_end":192,"column_start":13,"column_end":17},"name":"Type","qualname":"::expr::Expr::Type","value":"Expr::Type(ExprType)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A type ascription expression: `foo: f64`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4324},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113215,"byte_end":113218,"line_start":202,"line_end":202,"column_start":13,"column_end":16},"name":"Let","qualname":"::expr::Expr::Let","value":"Expr::Let(ExprLet)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A `let` guard: `let Some(x) = opt`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4327},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113807,"byte_end":113809,"line_start":217,"line_end":217,"column_start":13,"column_end":15},"name":"If","qualname":"::expr::Expr::If","value":"Expr::If(ExprIf)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" An `if` expression with an optional `else` block: `if expr { ... }\n else { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4330},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114200,"byte_end":114205,"line_start":228,"line_end":228,"column_start":13,"column_end":18},"name":"While","qualname":"::expr::Expr::While","value":"Expr::While(ExprWhile)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A while loop: `while expr { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4333},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114575,"byte_end":114582,"line_start":239,"line_end":239,"column_start":13,"column_end":20},"name":"ForLoop","qualname":"::expr::Expr::ForLoop","value":"Expr::ForLoop(ExprForLoop)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A for loop: `for pat in expr { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4336},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115016,"byte_end":115020,"line_start":252,"line_end":252,"column_start":13,"column_end":17},"name":"Loop","qualname":"::expr::Expr::Loop","value":"Expr::Loop(ExprLoop)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" Conditionless loop: `loop { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4339},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115378,"byte_end":115383,"line_start":262,"line_end":262,"column_start":13,"column_end":18},"name":"Match","qualname":"::expr::Expr::Match","value":"Expr::Match(ExprMatch)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A `match` expression: `match n { Some(n) => {}, None => {} }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4342},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115760,"byte_end":115767,"line_start":273,"line_end":273,"column_start":13,"column_end":20},"name":"Closure","qualname":"::expr::Expr::Closure","value":"Expr::Closure(ExprClosure)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A closure expression: `|a, b| a + b`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4345},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116339,"byte_end":116345,"line_start":288,"line_end":288,"column_start":13,"column_end":19},"name":"Unsafe","qualname":"::expr::Expr::Unsafe","value":"Expr::Unsafe(ExprUnsafe)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" An unsafe block: `unsafe { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4348},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116637,"byte_end":116642,"line_start":297,"line_end":297,"column_start":13,"column_end":18},"name":"Block","qualname":"::expr::Expr::Block","value":"Expr::Block(ExprBlock)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A blocked scope: `{ ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4351},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116940,"byte_end":116946,"line_start":306,"line_end":306,"column_start":13,"column_end":19},"name":"Assign","qualname":"::expr::Expr::Assign","value":"Expr::Assign(ExprAssign)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" An assignment expression: `a = compute()`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4354},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117288,"byte_end":117296,"line_start":316,"line_end":316,"column_start":13,"column_end":21},"name":"AssignOp","qualname":"::expr::Expr::AssignOp","value":"Expr::AssignOp(ExprAssignOp)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A compound assignment expression: `counter += 1`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4357},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117674,"byte_end":117679,"line_start":327,"line_end":327,"column_start":13,"column_end":18},"name":"Field","qualname":"::expr::Expr::Field","value":"Expr::Field(ExprField)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" Access of a named struct field (`obj.k`) or unnamed tuple struct\n field (`obj.0`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4360},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118042,"byte_end":118047,"line_start":338,"line_end":338,"column_start":13,"column_end":18},"name":"Index","qualname":"::expr::Expr::Index","value":"Expr::Index(ExprIndex)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A square bracketed indexing expression: `vector[2]`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4363},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118401,"byte_end":118406,"line_start":348,"line_end":348,"column_start":13,"column_end":18},"name":"Range","qualname":"::expr::Expr::Range","value":"Expr::Range(ExprRange)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4366},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118921,"byte_end":118925,"line_start":362,"line_end":362,"column_start":13,"column_end":17},"name":"Path","qualname":"::expr::Expr::Path","value":"Expr::Path(ExprPath)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A path like `std::mem::replace` possibly containing generic\n parameters and a qualified self-type.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4369},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119214,"byte_end":119223,"line_start":371,"line_end":371,"column_start":13,"column_end":22},"name":"Reference","qualname":"::expr::Expr::Reference","value":"Expr::Reference(ExprReference)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A referencing operation: `&a` or `&mut a`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4372},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119617,"byte_end":119622,"line_start":382,"line_end":382,"column_start":13,"column_end":18},"name":"Break","qualname":"::expr::Expr::Break","value":"Expr::Break(ExprBreak)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A `break`, with an optional label to break and an optional\n expression.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4375},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119973,"byte_end":119981,"line_start":392,"line_end":392,"column_start":13,"column_end":21},"name":"Continue","qualname":"::expr::Expr::Continue","value":"Expr::Continue(ExprContinue)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A `continue`, with an optional label.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4378},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120313,"byte_end":120319,"line_start":401,"line_end":401,"column_start":13,"column_end":19},"name":"Return","qualname":"::expr::Expr::Return","value":"Expr::Return(ExprReturn)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A `return`, with an optional value to be returned.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4381},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120645,"byte_end":120650,"line_start":410,"line_end":410,"column_start":13,"column_end":18},"name":"Macro","qualname":"::expr::Expr::Macro","value":"Expr::Macro(ExprMacro)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A macro invocation expression: `format!(\"{}\", q)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4384},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121042,"byte_end":121048,"line_start":421,"line_end":421,"column_start":13,"column_end":19},"name":"Struct","qualname":"::expr::Expr::Struct","value":"Expr::Struct(ExprStruct)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A struct literal expression: `Point { x: 1, y: 1 }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4387},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121523,"byte_end":121529,"line_start":433,"line_end":433,"column_start":13,"column_end":19},"name":"Repeat","qualname":"::expr::Expr::Repeat","value":"Expr::Repeat(ExprRepeat)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" An array literal constructed from one repeated element: `[0u8; N]`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4390},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121907,"byte_end":121912,"line_start":444,"line_end":444,"column_start":13,"column_end":18},"name":"Paren","qualname":"::expr::Expr::Paren","value":"Expr::Paren(ExprParen)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A parenthesized expression: `(a + b)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4393},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122415,"byte_end":122420,"line_start":457,"line_end":457,"column_start":13,"column_end":18},"name":"Group","qualname":"::expr::Expr::Group","value":"Expr::Group(ExprGroup)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" An expression contained within invisible delimiters.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4396},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122710,"byte_end":122713,"line_start":466,"line_end":466,"column_start":13,"column_end":16},"name":"Try","qualname":"::expr::Expr::Try","value":"Expr::Try(ExprTry)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A try-expression: `expr?`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4399},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123007,"byte_end":123012,"line_start":475,"line_end":475,"column_start":13,"column_end":18},"name":"Async","qualname":"::expr::Expr::Async","value":"Expr::Async(ExprAsync)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" An async block: `async { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4402},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123348,"byte_end":123356,"line_start":485,"line_end":485,"column_start":13,"column_end":21},"name":"TryBlock","qualname":"::expr::Expr::TryBlock","value":"Expr::TryBlock(ExprTryBlock)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A try block: `try { ... }`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4405},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123650,"byte_end":123655,"line_start":494,"line_end":494,"column_start":13,"column_end":18},"name":"Yield","qualname":"::expr::Expr::Yield","value":"Expr::Yield(ExprYield)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" A yield expression: `yield expr`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":124007,"byte_end":124015,"line_start":504,"line_end":504,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::expr::Expr::Verbatim","value":"Expr::Verbatim(ExprVerbatim)","parent":{"krate":0,"index":4290},"children":[],"decl_id":null,"docs":" Tokens in expression position not interpreted by Syn.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4290},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109268,"byte_end":109272,"line_start":86,"line_end":86,"column_start":14,"column_end":18},"name":"Expr","qualname":"::expr::Expr","value":"pub enum Expr {\n\n    #[doc = r\" A box expression: `box f`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Box(ExprBox),\n\n    #[doc = r\" A placement expression: `place <- value`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    InPlace(ExprInPlace),\n\n    #[doc = r\" A slice literal expression: `[a, b, c, d]`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Array(ExprArray),\n\n    #[doc = r\" A function call expression: `invoke(a, b)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Call(ExprCall),\n\n    #[doc = r\" A method call expression: `x.foo::<T>(a, b)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    MethodCall(ExprMethodCall),\n\n    #[doc = r\" A tuple expression: `(a, b, c, d)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Tuple(ExprTuple),\n\n    #[doc = r\" A binary operation: `a + b`, `a * b`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Binary(ExprBinary),\n\n    #[doc = r\" A unary operation: `!x`, `*x`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Unary(ExprUnary),\n\n    #[doc = r#\" A literal in place of an expression: `1`, `\"foo\"`.\"#]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Lit(ExprLit),\n\n    #[doc = r\" A cast expression: `foo as f64`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Cast(ExprCast),\n\n    #[doc = r\" A type ascription expression: `foo: f64`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Type(ExprType),\n\n    #[doc = r\" A `let` guard: `let Some(x) = opt`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Let(ExprLet),\n\n    #[doc =\n      r\" An `if` expression with an optional `else` block: `if expr { ... }\"]\n    #[doc = r\" else { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc = r\" The `else` branch expression may only be an `If` or `Block`\"]\n    #[doc = r\" expression, not any of the other types of expression.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    If(ExprIf),\n\n    #[doc = r\" A while loop: `while expr { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    While(ExprWhile),\n\n    #[doc = r\" A for loop: `for pat in expr { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    ForLoop(ExprForLoop),\n\n    #[doc = r\" Conditionless loop: `loop { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Loop(ExprLoop),\n\n    #[doc =\n      r\" A `match` expression: `match n { Some(n) => {}, None => {} }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Match(ExprMatch),\n\n    #[doc = r\" A closure expression: `|a, b| a + b`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Closure(ExprClosure),\n\n    #[doc = r\" An unsafe block: `unsafe { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Unsafe(ExprUnsafe),\n\n    #[doc = r\" A blocked scope: `{ ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Block(ExprBlock),\n\n    #[doc = r\" An assignment expression: `a = compute()`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Assign(ExprAssign),\n\n    #[doc = r\" A compound assignment expression: `counter += 1`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    AssignOp(ExprAssignOp),\n\n    #[doc =\n      r\" Access of a named struct field (`obj.k`) or unnamed tuple struct\"]\n    #[doc = r\" field (`obj.0`).\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Field(ExprField),\n\n    #[doc = r\" A square bracketed indexing expression: `vector[2]`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Index(ExprIndex),\n\n    #[doc = r\" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Range(ExprRange),\n\n    #[doc = r\" A path like `std::mem::replace` possibly containing generic\"]\n    #[doc = r\" parameters and a qualified self-type.\"]\n    #[doc = r\"\"]\n    #[doc = r\" A plain identifier like `x` is a path of length 1.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Path(ExprPath),\n\n    #[doc = r\" A referencing operation: `&a` or `&mut a`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Reference(ExprReference),\n\n    #[doc = r\" A `break`, with an optional label to break and an optional\"]\n    #[doc = r\" expression.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Break(ExprBreak),\n\n    #[doc = r\" A `continue`, with an optional label.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Continue(ExprContinue),\n\n    #[doc = r\" A `return`, with an optional value to be returned.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Return(ExprReturn),\n\n    #[doc = r#\" A macro invocation expression: `format!(\"{}\", q)`.\"#]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Macro(ExprMacro),\n\n    #[doc = r\" A struct literal expression: `Point { x: 1, y: 1 }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" The `rest` provides the value of the remaining fields as in `S { a:\"]\n    #[doc = r\" 1, b: 1, ..rest }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Struct(ExprStruct),\n\n    #[doc =\n      r\" An array literal constructed from one repeated element: `[0u8; N]`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Repeat(ExprRepeat),\n\n    #[doc = r\" A parenthesized expression: `(a + b)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Paren(ExprParen),\n\n    #[doc = r\" An expression contained within invisible delimiters.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" This variant is important for faithfully representing the precedence\"]\n    #[doc = r\" of expressions and is related to `None`-delimited spans in a\"]\n    #[doc = r\" `TokenStream`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Group(ExprGroup),\n\n    #[doc = r\" A try-expression: `expr?`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Try(ExprTry),\n\n    #[doc = r\" An async block: `async { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Async(ExprAsync),\n\n    #[doc = r\" A try block: `try { ... }`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    TryBlock(ExprTryBlock),\n\n    #[doc = r\" A yield expression: `yield expr`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"full\"` feature.*\"#]\n    Yield(ExprYield),\n\n    #[doc = r\" Tokens in expression position not interpreted by Syn.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Verbatim(ExprVerbatim),\n}","parent":null,"children":[{"krate":0,"index":4291},{"krate":0,"index":4294},{"krate":0,"index":4297},{"krate":0,"index":4300},{"krate":0,"index":4303},{"krate":0,"index":4306},{"krate":0,"index":4309},{"krate":0,"index":4312},{"krate":0,"index":4315},{"krate":0,"index":4318},{"krate":0,"index":4321},{"krate":0,"index":4324},{"krate":0,"index":4327},{"krate":0,"index":4330},{"krate":0,"index":4333},{"krate":0,"index":4336},{"krate":0,"index":4339},{"krate":0,"index":4342},{"krate":0,"index":4345},{"krate":0,"index":4348},{"krate":0,"index":4351},{"krate":0,"index":4354},{"krate":0,"index":4357},{"krate":0,"index":4360},{"krate":0,"index":4363},{"krate":0,"index":4366},{"krate":0,"index":4369},{"krate":0,"index":4372},{"krate":0,"index":4375},{"krate":0,"index":4378},{"krate":0,"index":4381},{"krate":0,"index":4384},{"krate":0,"index":4387},{"krate":0,"index":4390},{"krate":0,"index":4393},{"krate":0,"index":4396},{"krate":0,"index":4399},{"krate":0,"index":4402},{"krate":0,"index":4405},{"krate":0,"index":4408}],"decl_id":null,"docs":" A Rust expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4413},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109422,"byte_end":109429,"line_start":90,"line_end":90,"column_start":17,"column_end":24},"name":"ExprBox","qualname":"::expr::ExprBox","value":"ExprBox {  }","parent":null,"children":[{"krate":0,"index":4414}],"decl_id":null,"docs":" A box expression: `box f`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4417},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":109729,"byte_end":109740,"line_start":99,"line_end":99,"column_start":21,"column_end":32},"name":"ExprInPlace","qualname":"::expr::ExprInPlace","value":"ExprInPlace {  }","parent":null,"children":[{"krate":0,"index":4418}],"decl_id":null,"docs":" A placement expression: `place <- value`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4421},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110076,"byte_end":110085,"line_start":109,"line_end":109,"column_start":19,"column_end":28},"name":"ExprArray","qualname":"::expr::ExprArray","value":"ExprArray {  }","parent":null,"children":[{"krate":0,"index":4422}],"decl_id":null,"docs":" A slice literal expression: `[a, b, c, d]`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4425},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110436,"byte_end":110444,"line_start":119,"line_end":119,"column_start":18,"column_end":26},"name":"ExprCall","qualname":"::expr::ExprCall","value":"ExprCall { attrs, func, paren_token, args }","parent":null,"children":[{"krate":0,"index":4426},{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429}],"decl_id":null,"docs":" A function call expression: `invoke(a, b)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4426},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110463,"byte_end":110468,"line_start":120,"line_end":120,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprCall::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4427},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110502,"byte_end":110506,"line_start":121,"line_end":121,"column_start":17,"column_end":21},"name":"func","qualname":"::expr::ExprCall::func","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4428},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110535,"byte_end":110546,"line_start":122,"line_end":122,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::expr::ExprCall::paren_token","value":"token::Paren","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4429},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110578,"byte_end":110582,"line_start":123,"line_end":123,"column_start":17,"column_end":21},"name":"args","qualname":"::expr::ExprCall::args","value":"punctuated::Punctuated<expr::Expr, token::Comma>","parent":{"krate":0,"index":4425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4432},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":110799,"byte_end":110813,"line_start":129,"line_end":129,"column_start":24,"column_end":38},"name":"ExprMethodCall","qualname":"::expr::ExprMethodCall","value":"ExprMethodCall {  }","parent":null,"children":[{"krate":0,"index":4433}],"decl_id":null,"docs":" A method call expression: `x.foo::<T>(a, b)`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4436},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111284,"byte_end":111293,"line_start":142,"line_end":142,"column_start":19,"column_end":28},"name":"ExprTuple","qualname":"::expr::ExprTuple","value":"ExprTuple {  }","parent":null,"children":[{"krate":0,"index":4437}],"decl_id":null,"docs":" A tuple expression: `(a, b, c, d)`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4440},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111636,"byte_end":111646,"line_start":152,"line_end":152,"column_start":20,"column_end":30},"name":"ExprBinary","qualname":"::expr::ExprBinary","value":"ExprBinary { attrs, left, op, right }","parent":null,"children":[{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4443},{"krate":0,"index":4444}],"decl_id":null,"docs":" A binary operation: `a + b`, `a * b`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4441},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111665,"byte_end":111670,"line_start":153,"line_end":153,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprBinary::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4442},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111704,"byte_end":111708,"line_start":154,"line_end":154,"column_start":17,"column_end":21},"name":"left","qualname":"::expr::ExprBinary::left","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4443},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111737,"byte_end":111739,"line_start":155,"line_end":155,"column_start":17,"column_end":19},"name":"op","qualname":"::expr::ExprBinary::op","value":"op::BinOp","parent":{"krate":0,"index":4440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4444},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111764,"byte_end":111769,"line_start":156,"line_end":156,"column_start":17,"column_end":22},"name":"right","qualname":"::expr::ExprBinary::right","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4440},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4447},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":111974,"byte_end":111983,"line_start":163,"line_end":163,"column_start":19,"column_end":28},"name":"ExprUnary","qualname":"::expr::ExprUnary","value":"ExprUnary { attrs, op, expr }","parent":null,"children":[{"krate":0,"index":4448},{"krate":0,"index":4449},{"krate":0,"index":4450}],"decl_id":null,"docs":" A unary operation: `!x`, `*x`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4448},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112002,"byte_end":112007,"line_start":164,"line_end":164,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprUnary::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4449},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112041,"byte_end":112043,"line_start":165,"line_end":165,"column_start":17,"column_end":19},"name":"op","qualname":"::expr::ExprUnary::op","value":"op::UnOp","parent":{"krate":0,"index":4447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4450},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112067,"byte_end":112071,"line_start":166,"line_end":166,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprUnary::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4453},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112294,"byte_end":112301,"line_start":173,"line_end":173,"column_start":17,"column_end":24},"name":"ExprLit","qualname":"::expr::ExprLit","value":"ExprLit { attrs, lit }","parent":null,"children":[{"krate":0,"index":4454},{"krate":0,"index":4455}],"decl_id":null,"docs":" A literal in place of an expression: `1`, `\"foo\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4454},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112320,"byte_end":112325,"line_start":174,"line_end":174,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprLit::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4455},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112359,"byte_end":112362,"line_start":175,"line_end":175,"column_start":17,"column_end":20},"name":"lit","qualname":"::expr::ExprLit::lit","value":"lit::Lit","parent":{"krate":0,"index":4453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4458},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112562,"byte_end":112570,"line_start":182,"line_end":182,"column_start":18,"column_end":26},"name":"ExprCast","qualname":"::expr::ExprCast","value":"ExprCast { attrs, expr, as_token, ty }","parent":null,"children":[{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4462}],"decl_id":null,"docs":" A cast expression: `foo as f64`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4459},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112589,"byte_end":112594,"line_start":183,"line_end":183,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprCast::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4460},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112628,"byte_end":112632,"line_start":184,"line_end":184,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprCast::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4461},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112661,"byte_end":112669,"line_start":185,"line_end":185,"column_start":17,"column_end":25},"name":"as_token","qualname":"::expr::ExprCast::as_token","value":"token::As","parent":{"krate":0,"index":4458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4462},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112699,"byte_end":112701,"line_start":186,"line_end":186,"column_start":17,"column_end":19},"name":"ty","qualname":"::expr::ExprCast::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":4458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4465},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":112890,"byte_end":112898,"line_start":192,"line_end":192,"column_start":18,"column_end":26},"name":"ExprType","qualname":"::expr::ExprType","value":"ExprType {  }","parent":null,"children":[{"krate":0,"index":4466}],"decl_id":null,"docs":" A type ascription expression: `foo: f64`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4469},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113219,"byte_end":113226,"line_start":202,"line_end":202,"column_start":17,"column_end":24},"name":"ExprLet","qualname":"::expr::ExprLet","value":"ExprLet {  }","parent":null,"children":[{"krate":0,"index":4470}],"decl_id":null,"docs":" A `let` guard: `let Some(x) = opt`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4473},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":113810,"byte_end":113816,"line_start":217,"line_end":217,"column_start":16,"column_end":22},"name":"ExprIf","qualname":"::expr::ExprIf","value":"ExprIf {  }","parent":null,"children":[{"krate":0,"index":4474}],"decl_id":null,"docs":" An `if` expression with an optional `else` block: `if expr { ... }\n else { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4477},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114206,"byte_end":114215,"line_start":228,"line_end":228,"column_start":19,"column_end":28},"name":"ExprWhile","qualname":"::expr::ExprWhile","value":"ExprWhile {  }","parent":null,"children":[{"krate":0,"index":4478}],"decl_id":null,"docs":" A while loop: `while expr { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4481},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":114583,"byte_end":114594,"line_start":239,"line_end":239,"column_start":21,"column_end":32},"name":"ExprForLoop","qualname":"::expr::ExprForLoop","value":"ExprForLoop {  }","parent":null,"children":[{"krate":0,"index":4482}],"decl_id":null,"docs":" A for loop: `for pat in expr { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4485},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115021,"byte_end":115029,"line_start":252,"line_end":252,"column_start":18,"column_end":26},"name":"ExprLoop","qualname":"::expr::ExprLoop","value":"ExprLoop {  }","parent":null,"children":[{"krate":0,"index":4486}],"decl_id":null,"docs":" Conditionless loop: `loop { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4489},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115384,"byte_end":115393,"line_start":262,"line_end":262,"column_start":19,"column_end":28},"name":"ExprMatch","qualname":"::expr::ExprMatch","value":"ExprMatch {  }","parent":null,"children":[{"krate":0,"index":4490}],"decl_id":null,"docs":" A `match` expression: `match n { Some(n) => {}, None => {} }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4493},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":115768,"byte_end":115779,"line_start":273,"line_end":273,"column_start":21,"column_end":32},"name":"ExprClosure","qualname":"::expr::ExprClosure","value":"ExprClosure {  }","parent":null,"children":[{"krate":0,"index":4494}],"decl_id":null,"docs":" A closure expression: `|a, b| a + b`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4497},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116346,"byte_end":116356,"line_start":288,"line_end":288,"column_start":20,"column_end":30},"name":"ExprUnsafe","qualname":"::expr::ExprUnsafe","value":"ExprUnsafe {  }","parent":null,"children":[{"krate":0,"index":4498}],"decl_id":null,"docs":" An unsafe block: `unsafe { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4501},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116643,"byte_end":116652,"line_start":297,"line_end":297,"column_start":19,"column_end":28},"name":"ExprBlock","qualname":"::expr::ExprBlock","value":"ExprBlock {  }","parent":null,"children":[{"krate":0,"index":4502}],"decl_id":null,"docs":" A blocked scope: `{ ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4505},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":116947,"byte_end":116957,"line_start":306,"line_end":306,"column_start":20,"column_end":30},"name":"ExprAssign","qualname":"::expr::ExprAssign","value":"ExprAssign {  }","parent":null,"children":[{"krate":0,"index":4506}],"decl_id":null,"docs":" An assignment expression: `a = compute()`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4509},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117297,"byte_end":117309,"line_start":316,"line_end":316,"column_start":22,"column_end":34},"name":"ExprAssignOp","qualname":"::expr::ExprAssignOp","value":"ExprAssignOp {  }","parent":null,"children":[{"krate":0,"index":4510}],"decl_id":null,"docs":" A compound assignment expression: `counter += 1`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4513},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117680,"byte_end":117689,"line_start":327,"line_end":327,"column_start":19,"column_end":28},"name":"ExprField","qualname":"::expr::ExprField","value":"ExprField { attrs, base, dot_token, member }","parent":null,"children":[{"krate":0,"index":4514},{"krate":0,"index":4515},{"krate":0,"index":4516},{"krate":0,"index":4517}],"decl_id":null,"docs":" Access of a named struct field (`obj.k`) or unnamed tuple struct\n field (`obj.0`).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4514},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117708,"byte_end":117713,"line_start":328,"line_end":328,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprField::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4515},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117747,"byte_end":117751,"line_start":329,"line_end":329,"column_start":17,"column_end":21},"name":"base","qualname":"::expr::ExprField::base","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4516},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117780,"byte_end":117789,"line_start":330,"line_end":330,"column_start":17,"column_end":26},"name":"dot_token","qualname":"::expr::ExprField::dot_token","value":"token::Dot","parent":{"krate":0,"index":4513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4517},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":117818,"byte_end":117824,"line_start":331,"line_end":331,"column_start":17,"column_end":23},"name":"member","qualname":"::expr::ExprField::member","value":"expr::Member","parent":{"krate":0,"index":4513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4520},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118048,"byte_end":118057,"line_start":338,"line_end":338,"column_start":19,"column_end":28},"name":"ExprIndex","qualname":"::expr::ExprIndex","value":"ExprIndex { attrs, expr, bracket_token, index }","parent":null,"children":[{"krate":0,"index":4521},{"krate":0,"index":4522},{"krate":0,"index":4523},{"krate":0,"index":4524}],"decl_id":null,"docs":" A square bracketed indexing expression: `vector[2]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4521},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118076,"byte_end":118081,"line_start":339,"line_end":339,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprIndex::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4522},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118115,"byte_end":118119,"line_start":340,"line_end":340,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprIndex::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4523},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118148,"byte_end":118161,"line_start":341,"line_end":341,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::expr::ExprIndex::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":4520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4524},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118195,"byte_end":118200,"line_start":342,"line_end":342,"column_start":17,"column_end":22},"name":"index","qualname":"::expr::ExprIndex::index","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4527},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118407,"byte_end":118416,"line_start":348,"line_end":348,"column_start":19,"column_end":28},"name":"ExprRange","qualname":"::expr::ExprRange","value":"ExprRange {  }","parent":null,"children":[{"krate":0,"index":4528}],"decl_id":null,"docs":" A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4531},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118926,"byte_end":118934,"line_start":362,"line_end":362,"column_start":18,"column_end":26},"name":"ExprPath","qualname":"::expr::ExprPath","value":"ExprPath { attrs, qself, path }","parent":null,"children":[{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4534}],"decl_id":null,"docs":" A path like `std::mem::replace` possibly containing generic\n parameters and a qualified self-type.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4532},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118953,"byte_end":118958,"line_start":363,"line_end":363,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprPath::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4533},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":118992,"byte_end":118997,"line_start":364,"line_end":364,"column_start":17,"column_end":22},"name":"qself","qualname":"::expr::ExprPath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4534},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119030,"byte_end":119034,"line_start":365,"line_end":365,"column_start":17,"column_end":21},"name":"path","qualname":"::expr::ExprPath::path","value":"path::Path","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4537},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119224,"byte_end":119237,"line_start":371,"line_end":371,"column_start":23,"column_end":36},"name":"ExprReference","qualname":"::expr::ExprReference","value":"ExprReference {  }","parent":null,"children":[{"krate":0,"index":4538}],"decl_id":null,"docs":" A referencing operation: `&a` or `&mut a`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4541},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119623,"byte_end":119632,"line_start":382,"line_end":382,"column_start":19,"column_end":28},"name":"ExprBreak","qualname":"::expr::ExprBreak","value":"ExprBreak {  }","parent":null,"children":[{"krate":0,"index":4542}],"decl_id":null,"docs":" A `break`, with an optional label to break and an optional\n expression.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4545},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":119982,"byte_end":119994,"line_start":392,"line_end":392,"column_start":22,"column_end":34},"name":"ExprContinue","qualname":"::expr::ExprContinue","value":"ExprContinue {  }","parent":null,"children":[{"krate":0,"index":4546}],"decl_id":null,"docs":" A `continue`, with an optional label.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4549},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120320,"byte_end":120330,"line_start":401,"line_end":401,"column_start":20,"column_end":30},"name":"ExprReturn","qualname":"::expr::ExprReturn","value":"ExprReturn {  }","parent":null,"children":[{"krate":0,"index":4550}],"decl_id":null,"docs":" A `return`, with an optional value to be returned.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4553},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":120651,"byte_end":120660,"line_start":410,"line_end":410,"column_start":19,"column_end":28},"name":"ExprMacro","qualname":"::expr::ExprMacro","value":"ExprMacro {  }","parent":null,"children":[{"krate":0,"index":4554}],"decl_id":null,"docs":" A macro invocation expression: `format!(\"{}\", q)`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4557},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121049,"byte_end":121059,"line_start":421,"line_end":421,"column_start":20,"column_end":30},"name":"ExprStruct","qualname":"::expr::ExprStruct","value":"ExprStruct {  }","parent":null,"children":[{"krate":0,"index":4558}],"decl_id":null,"docs":" A struct literal expression: `Point { x: 1, y: 1 }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4561},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121530,"byte_end":121540,"line_start":433,"line_end":433,"column_start":20,"column_end":30},"name":"ExprRepeat","qualname":"::expr::ExprRepeat","value":"ExprRepeat {  }","parent":null,"children":[{"krate":0,"index":4562}],"decl_id":null,"docs":" An array literal constructed from one repeated element: `[0u8; N]`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4565},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121913,"byte_end":121922,"line_start":444,"line_end":444,"column_start":19,"column_end":28},"name":"ExprParen","qualname":"::expr::ExprParen","value":"ExprParen { attrs, paren_token, expr }","parent":null,"children":[{"krate":0,"index":4566},{"krate":0,"index":4567},{"krate":0,"index":4568}],"decl_id":null,"docs":" A parenthesized expression: `(a + b)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4566},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121941,"byte_end":121946,"line_start":445,"line_end":445,"column_start":17,"column_end":22},"name":"attrs","qualname":"::expr::ExprParen::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4567},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":121980,"byte_end":121991,"line_start":446,"line_end":446,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::expr::ExprParen::paren_token","value":"token::Paren","parent":{"krate":0,"index":4565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4568},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122023,"byte_end":122027,"line_start":447,"line_end":447,"column_start":17,"column_end":21},"name":"expr","qualname":"::expr::ExprParen::expr","value":"std::boxed::Box<expr::Expr>","parent":{"krate":0,"index":4565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4571},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122421,"byte_end":122430,"line_start":457,"line_end":457,"column_start":19,"column_end":28},"name":"ExprGroup","qualname":"::expr::ExprGroup","value":"ExprGroup {  }","parent":null,"children":[{"krate":0,"index":4572}],"decl_id":null,"docs":" An expression contained within invisible delimiters.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4575},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":122714,"byte_end":122721,"line_start":466,"line_end":466,"column_start":17,"column_end":24},"name":"ExprTry","qualname":"::expr::ExprTry","value":"ExprTry {  }","parent":null,"children":[{"krate":0,"index":4576}],"decl_id":null,"docs":" A try-expression: `expr?`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4579},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123013,"byte_end":123022,"line_start":475,"line_end":475,"column_start":19,"column_end":28},"name":"ExprAsync","qualname":"::expr::ExprAsync","value":"ExprAsync {  }","parent":null,"children":[{"krate":0,"index":4580}],"decl_id":null,"docs":" An async block: `async { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4583},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123357,"byte_end":123369,"line_start":485,"line_end":485,"column_start":22,"column_end":34},"name":"ExprTryBlock","qualname":"::expr::ExprTryBlock","value":"ExprTryBlock {  }","parent":null,"children":[{"krate":0,"index":4584}],"decl_id":null,"docs":" A try block: `try { ... }`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4587},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":123656,"byte_end":123665,"line_start":494,"line_end":494,"column_start":19,"column_end":28},"name":"ExprYield","qualname":"::expr::ExprYield","value":"ExprYield {  }","parent":null,"children":[{"krate":0,"index":4588}],"decl_id":null,"docs":" A yield expression: `yield expr`.","sig":null,"attributes":[{"value":"cfg(not(feature = \"full\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\macros.rs","byte_start":25752,"byte_end":25781,"line_start":13,"line_end":13,"column_start":9,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4591},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":124016,"byte_end":124028,"line_start":504,"line_end":504,"column_start":22,"column_end":34},"name":"ExprVerbatim","qualname":"::expr::ExprVerbatim","value":"ExprVerbatim { tts }","parent":null,"children":[{"krate":0,"index":4592}],"decl_id":null,"docs":" Tokens in expression position not interpreted by Syn.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4592},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":124068,"byte_end":124071,"line_start":505,"line_end":505,"column_start":17,"column_end":20},"name":"tts","qualname":"::expr::ExprVerbatim::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":4591},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4598},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127417,"byte_end":127422,"line_start":586,"line_end":586,"column_start":9,"column_end":14},"name":"Named","qualname":"::expr::Member::Named","value":"Member::Named(Ident)","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" A named field like `self.x`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4601},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127483,"byte_end":127490,"line_start":588,"line_end":588,"column_start":9,"column_end":16},"name":"Unnamed","qualname":"::expr::Member::Unnamed","value":"Member::Unnamed(Index)","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" An unnamed field like `self.0`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4597},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127359,"byte_end":127365,"line_start":584,"line_end":584,"column_start":14,"column_end":20},"name":"Member","qualname":"::expr::Member","value":"pub enum Member {\n\n    #[doc = r\" A named field like `self.x`.\"]\n    Named(Ident),\n\n    #[doc = r\" An unnamed field like `self.0`.\"]\n    Unnamed(Index),\n}","parent":null,"children":[{"krate":0,"index":4598},{"krate":0,"index":4601}],"decl_id":null,"docs":" A struct or tuple struct field accessed in a struct literal or field\n expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4606},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127695,"byte_end":127700,"line_start":597,"line_end":597,"column_start":16,"column_end":21},"name":"Index","qualname":"::expr::Index","value":"Index { index, span }","parent":null,"children":[{"krate":0,"index":4607},{"krate":0,"index":4608}],"decl_id":null,"docs":" The index of an unnamed tuple struct field.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4607},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127736,"byte_end":127741,"line_start":598,"line_end":598,"column_start":13,"column_end":18},"name":"index","qualname":"::expr::Index::index","value":"u32","parent":{"krate":0,"index":4606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4608},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127760,"byte_end":127764,"line_start":599,"line_end":599,"column_start":13,"column_end":17},"name":"span","qualname":"::expr::Index::span","value":"proc_macro2::Span","parent":{"krate":0,"index":4606},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4652},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":236971,"byte_end":236979,"line_start":11,"line_end":11,"column_start":16,"column_end":24},"name":"Generics","qualname":"::generics::Generics","value":"Generics { lt_token, params, gt_token, where_clause }","parent":null,"children":[{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4655},{"krate":0,"index":4656}],"decl_id":null,"docs":" Lifetimes and type parameters attached to a declaration of a function,\n enum, trait, etc.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4653},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":236994,"byte_end":237002,"line_start":12,"line_end":12,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::generics::Generics::lt_token","value":"std::option::Option<token::Lt>","parent":{"krate":0,"index":4652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4654},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237035,"byte_end":237041,"line_start":13,"line_end":13,"column_start":13,"column_end":19},"name":"params","qualname":"::generics::Generics::params","value":"punctuated::Punctuated<generics::GenericParam, token::Comma>","parent":{"krate":0,"index":4652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4655},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237092,"byte_end":237100,"line_start":14,"line_end":14,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::generics::Generics::gt_token","value":"std::option::Option<token::Gt>","parent":{"krate":0,"index":4652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4656},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237133,"byte_end":237145,"line_start":15,"line_end":15,"column_start":13,"column_end":25},"name":"where_clause","qualname":"::generics::Generics::where_clause","value":"std::option::Option<generics::WhereClause>","parent":{"krate":0,"index":4652},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4668},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237945,"byte_end":237949,"line_start":39,"line_end":39,"column_start":13,"column_end":17},"name":"Type","qualname":"::generics::GenericParam::Type","value":"GenericParam::Type(TypeParam)","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":" A generic type parameter: `T: Into<String>`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4671},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238424,"byte_end":238432,"line_start":52,"line_end":52,"column_start":13,"column_end":21},"name":"Lifetime","qualname":"::generics::GenericParam::Lifetime","value":"GenericParam::Lifetime(LifetimeDef)","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":" A lifetime definition: `'a: 'b + 'c + 'd`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4674},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238832,"byte_end":238837,"line_start":63,"line_end":63,"column_start":13,"column_end":18},"name":"Const","qualname":"::generics::GenericParam::Const","value":"GenericParam::Const(ConstParam)","parent":{"krate":0,"index":4667},"children":[],"decl_id":null,"docs":" A const generic parameter: `const LENGTH: usize`.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4667},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237743,"byte_end":237755,"line_start":34,"line_end":34,"column_start":14,"column_end":26},"name":"GenericParam","qualname":"::generics::GenericParam","value":"pub enum GenericParam {\n\n    #[doc = r\" A generic type parameter: `T: Into<String>`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Type(TypeParam),\n\n    #[doc = r\" A lifetime definition: `'a: 'b + 'c + 'd`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Lifetime(LifetimeDef),\n\n    #[doc = r\" A const generic parameter: `const LENGTH: usize`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Const(ConstParam),\n}","parent":null,"children":[{"krate":0,"index":4668},{"krate":0,"index":4671},{"krate":0,"index":4674}],"decl_id":null,"docs":" A generic type parameter, lifetime, or const generic: `T: Into<String>`,\n `'a: 'b`, `const LEN: usize`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4679},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237950,"byte_end":237959,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"name":"TypeParam","qualname":"::generics::TypeParam","value":"TypeParam { attrs, ident, colon_token, bounds, eq_token, default }","parent":null,"children":[{"krate":0,"index":4680},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4685}],"decl_id":null,"docs":" A generic type parameter: `T: Into<String>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4680},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":237978,"byte_end":237983,"line_start":40,"line_end":40,"column_start":17,"column_end":22},"name":"attrs","qualname":"::generics::TypeParam::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4681},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238017,"byte_end":238022,"line_start":41,"line_end":41,"column_start":17,"column_end":22},"name":"ident","qualname":"::generics::TypeParam::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4682},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238047,"byte_end":238058,"line_start":42,"line_end":42,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::TypeParam::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4683},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238095,"byte_end":238101,"line_start":43,"line_end":43,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::TypeParam::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4684},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238158,"byte_end":238166,"line_start":44,"line_end":44,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::generics::TypeParam::eq_token","value":"std::option::Option<token::Eq>","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4685},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238203,"byte_end":238210,"line_start":45,"line_end":45,"column_start":17,"column_end":24},"name":"default","qualname":"::generics::TypeParam::default","value":"std::option::Option<ty::Type>","parent":{"krate":0,"index":4679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4688},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238433,"byte_end":238444,"line_start":52,"line_end":52,"column_start":22,"column_end":33},"name":"LifetimeDef","qualname":"::generics::LifetimeDef","value":"LifetimeDef { attrs, lifetime, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":4689},{"krate":0,"index":4690},{"krate":0,"index":4691},{"krate":0,"index":4692}],"decl_id":null,"docs":" A lifetime definition: `'a: 'b + 'c + 'd`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4689},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238463,"byte_end":238468,"line_start":53,"line_end":53,"column_start":17,"column_end":22},"name":"attrs","qualname":"::generics::LifetimeDef::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4690},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238502,"byte_end":238510,"line_start":54,"line_end":54,"column_start":17,"column_end":25},"name":"lifetime","qualname":"::generics::LifetimeDef::lifetime","value":"lifetime::Lifetime","parent":{"krate":0,"index":4688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4691},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238538,"byte_end":238549,"line_start":55,"line_end":55,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::LifetimeDef::colon_token","value":"std::option::Option<token::Colon>","parent":{"krate":0,"index":4688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4692},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238586,"byte_end":238592,"line_start":56,"line_end":56,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::LifetimeDef::bounds","value":"punctuated::Punctuated<lifetime::Lifetime, token::Add>","parent":{"krate":0,"index":4688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4695},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238838,"byte_end":238848,"line_start":63,"line_end":63,"column_start":19,"column_end":29},"name":"ConstParam","qualname":"::generics::ConstParam","value":"ConstParam { attrs, const_token, ident, colon_token, ty, eq_token, default }","parent":null,"children":[{"krate":0,"index":4696},{"krate":0,"index":4697},{"krate":0,"index":4698},{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4701},{"krate":0,"index":4702}],"decl_id":null,"docs":" A const generic parameter: `const LENGTH: usize`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4696},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238867,"byte_end":238872,"line_start":64,"line_end":64,"column_start":17,"column_end":22},"name":"attrs","qualname":"::generics::ConstParam::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4697},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238906,"byte_end":238917,"line_start":65,"line_end":65,"column_start":17,"column_end":28},"name":"const_token","qualname":"::generics::ConstParam::const_token","value":"token::Const","parent":{"krate":0,"index":4695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4698},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238950,"byte_end":238955,"line_start":66,"line_end":66,"column_start":17,"column_end":22},"name":"ident","qualname":"::generics::ConstParam::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":4695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4699},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":238980,"byte_end":238991,"line_start":67,"line_end":67,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::ConstParam::colon_token","value":"token::Colon","parent":{"krate":0,"index":4695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4700},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239020,"byte_end":239022,"line_start":68,"line_end":68,"column_start":17,"column_end":19},"name":"ty","qualname":"::generics::ConstParam::ty","value":"ty::Type","parent":{"krate":0,"index":4695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4701},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239046,"byte_end":239054,"line_start":69,"line_end":69,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::generics::ConstParam::eq_token","value":"std::option::Option<token::Eq>","parent":{"krate":0,"index":4695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4702},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239091,"byte_end":239098,"line_start":70,"line_end":70,"column_start":17,"column_end":24},"name":"default","qualname":"::generics::ConstParam::default","value":"std::option::Option<expr::Expr>","parent":{"krate":0,"index":4695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239482,"byte_end":239493,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"type_params","qualname":"<Generics>::type_params","value":"pub fn type_params(&Self) -> TypeParams","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.TypeParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the type parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239155,"byte_end":239169,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239174,"byte_end":239183,"line_start":77,"line_end":77,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239188,"byte_end":239252,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.TypeParam.html\"><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239257,"byte_end":239297,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"/   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239302,"byte_end":239373,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239378,"byte_end":239419,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/ over the type parameters in `self.params`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239424,"byte_end":239470,"line_start":82,"line_end":82,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239898,"byte_end":239913,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"type_params_mut","qualname":"<Generics>::type_params_mut","value":"pub fn type_params_mut(&mut Self) -> TypeParamsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.TypeParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the type parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239567,"byte_end":239581,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239586,"byte_end":239595,"line_start":88,"line_end":88,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239600,"byte_end":239668,"line_start":89,"line_end":89,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.TypeParam.html\"><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239673,"byte_end":239713,"line_start":90,"line_end":90,"column_start":5,"column_end":45}},{"value":"/   style=\"padding-left:0;padding-right:0;\">TypeParam</code></a><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239718,"byte_end":239789,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239794,"byte_end":239835,"line_start":92,"line_end":92,"column_start":5,"column_end":46}},{"value":"/ over the type parameters in `self.params`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239840,"byte_end":239886,"line_start":93,"line_end":93,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240336,"byte_end":240345,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"lifetimes","qualname":"<Generics>::lifetimes","value":"pub fn lifetimes(&Self) -> Lifetimes","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.LifetimeDef.html\"><code\n   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the lifetime parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240001,"byte_end":240015,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240020,"byte_end":240029,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240034,"byte_end":240098,"line_start":100,"line_end":100,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.LifetimeDef.html\"><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240103,"byte_end":240145,"line_start":101,"line_end":101,"column_start":5,"column_end":47}},{"value":"/   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240150,"byte_end":240223,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240228,"byte_end":240269,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/ over the lifetime parameters in `self.params`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240274,"byte_end":240324,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240756,"byte_end":240769,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"lifetimes_mut","qualname":"<Generics>::lifetimes_mut","value":"pub fn lifetimes_mut(&mut Self) -> LifetimesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.LifetimeDef.html\"><code\n   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the lifetime parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240417,"byte_end":240431,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240436,"byte_end":240445,"line_start":110,"line_end":110,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240450,"byte_end":240518,"line_start":111,"line_end":111,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.LifetimeDef.html\"><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240523,"byte_end":240565,"line_start":112,"line_end":112,"column_start":5,"column_end":47}},{"value":"/   style=\"padding-left:0;padding-right:0;\">LifetimeDef</code></a><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240570,"byte_end":240643,"line_start":113,"line_end":113,"column_start":5,"column_end":78}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240648,"byte_end":240689,"line_start":114,"line_end":114,"column_start":5,"column_end":46}},{"value":"/ over the lifetime parameters in `self.params`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240694,"byte_end":240744,"line_start":115,"line_end":115,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241188,"byte_end":241200,"line_start":127,"line_end":127,"column_start":12,"column_end":24},"name":"const_params","qualname":"<Generics>::const_params","value":"pub fn const_params(&Self) -> ConstParams","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a\n   href=\"struct.ConstParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the constant parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240855,"byte_end":240869,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240874,"byte_end":240883,"line_start":121,"line_end":121,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;</code><a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240888,"byte_end":240952,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/   href=\"struct.ConstParam.html\"><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":240957,"byte_end":240998,"line_start":123,"line_end":123,"column_start":5,"column_end":46}},{"value":"/   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241003,"byte_end":241075,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241080,"byte_end":241121,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/ over the constant parameters in `self.params`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241126,"byte_end":241176,"line_start":126,"line_end":126,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241613,"byte_end":241629,"line_start":138,"line_end":138,"column_start":12,"column_end":28},"name":"const_params_mut","qualname":"<Generics>::const_params_mut","value":"pub fn const_params_mut(&mut Self) -> ConstParamsMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an\n <code\n   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a\n   href=\"struct.ConstParam.html\"><code\n   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code\n   style=\"padding-left:0;\">&gt;</code>\n over the constant parameters in `self.params`.\n","sig":null,"attributes":[{"value":"/ Returns an","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241276,"byte_end":241290,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/ <code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241295,"byte_end":241304,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/   style=\"padding-right:0;\">Iterator&lt;Item = &amp;mut </code><a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241309,"byte_end":241377,"line_start":133,"line_end":133,"column_start":5,"column_end":73}},{"value":"/   href=\"struct.ConstParam.html\"><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241382,"byte_end":241423,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/   style=\"padding-left:0;padding-right:0;\">ConstParam</code></a><code","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241428,"byte_end":241500,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/   style=\"padding-left:0;\">&gt;</code>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241505,"byte_end":241546,"line_start":136,"line_end":136,"column_start":5,"column_end":46}},{"value":"/ over the constant parameters in `self.params`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241551,"byte_end":241601,"line_start":137,"line_end":137,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241807,"byte_end":241824,"line_start":143,"line_end":143,"column_start":12,"column_end":29},"name":"make_where_clause","qualname":"<Generics>::make_where_clause","value":"pub fn make_where_clause(&mut Self) -> &mut WhereClause","parent":null,"children":[],"decl_id":null,"docs":" Initializes an empty `where`-clause if there is not one present already.\n","sig":null,"attributes":[{"value":"/ Initializes an empty `where`-clause if there is not one present already.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":241719,"byte_end":241795,"line_start":142,"line_end":142,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242296,"byte_end":242306,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"TypeParams","qualname":"::generics::TypeParams","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242732,"byte_end":242745,"line_start":176,"line_end":176,"column_start":12,"column_end":25},"name":"TypeParamsMut","qualname":"::generics::TypeParamsMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243185,"byte_end":243194,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"Lifetimes","qualname":"::generics::Lifetimes","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243621,"byte_end":243633,"line_start":212,"line_end":212,"column_start":12,"column_end":24},"name":"LifetimesMut","qualname":"::generics::LifetimesMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244074,"byte_end":244085,"line_start":230,"line_end":230,"column_start":12,"column_end":23},"name":"ConstParams","qualname":"::generics::ConstParams","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244516,"byte_end":244530,"line_start":248,"line_end":248,"column_start":12,"column_end":26},"name":"ConstParamsMut","qualname":"::generics::ConstParamsMut","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4707},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245297,"byte_end":245309,"line_start":273,"line_end":273,"column_start":12,"column_end":24},"name":"ImplGenerics","qualname":"::generics::ImplGenerics","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `Generics::split_for_impl`.","sig":null,"attributes":[{"value":"/ Returned by `Generics::split_for_impl`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244964,"byte_end":245007,"line_start":266,"line_end":266,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245008,"byte_end":245011,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245012,"byte_end":245087,"line_start":268,"line_end":268,"column_start":1,"column_end":76}},{"value":"/ feature and the `\"printing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245088,"byte_end":245130,"line_start":269,"line_end":269,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245131,"byte_end":245159,"line_start":270,"line_end":270,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4714},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245663,"byte_end":245675,"line_start":282,"line_end":282,"column_start":12,"column_end":24},"name":"TypeGenerics","qualname":"::generics::TypeGenerics","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `Generics::split_for_impl`.","sig":null,"attributes":[{"value":"/ Returned by `Generics::split_for_impl`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245330,"byte_end":245373,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245374,"byte_end":245377,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245378,"byte_end":245453,"line_start":277,"line_end":277,"column_start":1,"column_end":76}},{"value":"/ feature and the `\"printing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245454,"byte_end":245496,"line_start":278,"line_end":278,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245497,"byte_end":245525,"line_start":279,"line_end":279,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":4721},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246031,"byte_end":246040,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"Turbofish","qualname":"::generics::Turbofish","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned by `TypeGenerics::as_turbofish`.","sig":null,"attributes":[{"value":"/ Returned by `TypeGenerics::as_turbofish`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245696,"byte_end":245741,"line_start":284,"line_end":284,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245742,"byte_end":245745,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245746,"byte_end":245821,"line_start":286,"line_end":286,"column_start":1,"column_end":76}},{"value":"/ feature and the `\"printing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245822,"byte_end":245864,"line_start":287,"line_end":287,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":245865,"byte_end":245893,"line_start":288,"line_end":288,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246895,"byte_end":246909,"line_start":318,"line_end":318,"column_start":12,"column_end":26},"name":"split_for_impl","qualname":"<Generics>::split_for_impl","value":"pub fn split_for_impl(&Self)\n-> (ImplGenerics, TypeGenerics, Option<&WhereClause>)","parent":null,"children":[],"decl_id":null,"docs":" Split a type's generics into the pieces required for impl'ing a trait\n for that type.","sig":null,"attributes":[{"value":"/ Split a type's generics into the pieces required for impl'ing a trait","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246110,"byte_end":246183,"line_start":295,"line_end":295,"column_start":5,"column_end":78}},{"value":"/ for that type.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246188,"byte_end":246206,"line_start":296,"line_end":296,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246211,"byte_end":246214,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246219,"byte_end":246237,"line_start":298,"line_end":298,"column_start":5,"column_end":23}},{"value":"/ # use proc_macro2::{Span, Ident};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246242,"byte_end":246279,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/ # use quote::quote;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246284,"byte_end":246307,"line_start":300,"line_end":300,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246312,"byte_end":246317,"line_start":301,"line_end":301,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246322,"byte_end":246339,"line_start":302,"line_end":302,"column_start":5,"column_end":22}},{"value":"/ #     let generics: syn::Generics = Default::default();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246344,"byte_end":246403,"line_start":303,"line_end":303,"column_start":5,"column_end":64}},{"value":"/ #     let name = Ident::new(\"MyType\", Span::call_site());","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246408,"byte_end":246469,"line_start":304,"line_end":304,"column_start":5,"column_end":66}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246474,"byte_end":246479,"line_start":305,"line_end":305,"column_start":5,"column_end":10}},{"value":"/ let (impl_generics, ty_generics, where_clause) = generics.split_for_impl();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246484,"byte_end":246563,"line_start":306,"line_end":306,"column_start":5,"column_end":84}},{"value":"/ quote! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246568,"byte_end":246580,"line_start":307,"line_end":307,"column_start":5,"column_end":17}},{"value":"/     impl #impl_generics MyTrait for #name #ty_generics #where_clause {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246585,"byte_end":246659,"line_start":308,"line_end":308,"column_start":5,"column_end":79}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246664,"byte_end":246682,"line_start":309,"line_end":309,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246687,"byte_end":246696,"line_start":310,"line_end":310,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246701,"byte_end":246706,"line_start":311,"line_end":311,"column_start":5,"column_end":10}},{"value":"/ #     ;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246711,"byte_end":246722,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246727,"byte_end":246734,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246739,"byte_end":246746,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246751,"byte_end":246754,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ *This method is available if Syn is built with the `\"derive\"` or","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246759,"byte_end":246827,"line_start":316,"line_end":316,"column_start":5,"column_end":73}},{"value":"/ `\"full\"` feature and the `\"printing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246832,"byte_end":246883,"line_start":317,"line_end":317,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247390,"byte_end":247402,"line_start":333,"line_end":333,"column_start":12,"column_end":24},"name":"as_turbofish","qualname":"<TypeGenerics>::as_turbofish","value":"pub fn as_turbofish(&Self) -> Turbofish","parent":null,"children":[],"decl_id":null,"docs":" Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.","sig":null,"attributes":[{"value":"/ Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247167,"byte_end":247241,"line_start":329,"line_end":329,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247246,"byte_end":247249,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ *This method is available if Syn is built with the `\"derive\"` or","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247254,"byte_end":247322,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ `\"full\"` feature and the `\"printing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247327,"byte_end":247378,"line_start":332,"line_end":332,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4728},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247671,"byte_end":247685,"line_start":344,"line_end":344,"column_start":16,"column_end":30},"name":"BoundLifetimes","qualname":"::generics::BoundLifetimes","value":"BoundLifetimes { for_token, lt_token, lifetimes, gt_token }","parent":null,"children":[{"krate":0,"index":4729},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4732}],"decl_id":null,"docs":" A set of bound lifetimes: `for<'a, 'b, 'c>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4729},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247700,"byte_end":247709,"line_start":345,"line_end":345,"column_start":13,"column_end":22},"name":"for_token","qualname":"::generics::BoundLifetimes::for_token","value":"token::For","parent":{"krate":0,"index":4728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4730},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247736,"byte_end":247744,"line_start":346,"line_end":346,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::generics::BoundLifetimes::lt_token","value":"token::Lt","parent":{"krate":0,"index":4728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4731},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247769,"byte_end":247778,"line_start":347,"line_end":347,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::BoundLifetimes::lifetimes","value":"punctuated::Punctuated<generics::LifetimeDef, token::Comma>","parent":{"krate":0,"index":4728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4732},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247828,"byte_end":247836,"line_start":348,"line_end":348,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::generics::BoundLifetimes::gt_token","value":"token::Gt","parent":{"krate":0,"index":4728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247888,"byte_end":247891,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"new","qualname":"<LifetimeDef>::new","value":"pub fn new(Lifetime) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4742},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248618,"byte_end":248623,"line_start":382,"line_end":382,"column_start":13,"column_end":18},"name":"Trait","qualname":"::generics::TypeParamBound::Trait","value":"TypeParamBound::Trait(TraitBound)","parent":{"krate":0,"index":4741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4745},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248649,"byte_end":248657,"line_start":383,"line_end":383,"column_start":13,"column_end":21},"name":"Lifetime","qualname":"::generics::TypeParamBound::Lifetime","value":"TypeParamBound::Lifetime(Lifetime)","parent":{"krate":0,"index":4741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4741},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248589,"byte_end":248603,"line_start":381,"line_end":381,"column_start":14,"column_end":28},"name":"TypeParamBound","qualname":"::generics::TypeParamBound","value":"pub enum TypeParamBound { Trait(TraitBound), Lifetime(Lifetime), }","parent":null,"children":[{"krate":0,"index":4742},{"krate":0,"index":4745}],"decl_id":null,"docs":" A trait or lifetime used as a bound on a type parameter.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4752},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248866,"byte_end":248876,"line_start":392,"line_end":392,"column_start":16,"column_end":26},"name":"TraitBound","qualname":"::generics::TraitBound","value":"TraitBound { paren_token, modifier, lifetimes, path }","parent":null,"children":[{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4756}],"decl_id":null,"docs":" A trait used as a bound on a type parameter.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4753},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248891,"byte_end":248902,"line_start":393,"line_end":393,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::generics::TraitBound::paren_token","value":"std::option::Option<token::Paren>","parent":{"krate":0,"index":4752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4754},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248938,"byte_end":248946,"line_start":394,"line_end":394,"column_start":13,"column_end":21},"name":"modifier","qualname":"::generics::TraitBound::modifier","value":"generics::TraitBoundModifier","parent":{"krate":0,"index":4752},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4755},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249030,"byte_end":249039,"line_start":396,"line_end":396,"column_start":13,"column_end":22},"name":"lifetimes","qualname":"::generics::TraitBound::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":4752},"children":[],"decl_id":null,"docs":" The `for<'a>` in `for<'a> Foo<&'a T>`\n","sig":null,"attributes":[{"value":"/ The `for<'a>` in `for<'a> Foo<&'a T>`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248976,"byte_end":249017,"line_start":395,"line_end":395,"column_start":9,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4756},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249130,"byte_end":249134,"line_start":398,"line_end":398,"column_start":13,"column_end":17},"name":"path","qualname":"::generics::TraitBound::path","value":"path::Path","parent":{"krate":0,"index":4752},"children":[],"decl_id":null,"docs":" The `Foo<&'a T>` in `for<'a> Foo<&'a T>`\n","sig":null,"attributes":[{"value":"/ The `Foo<&'a T>` in `for<'a> Foo<&'a T>`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249073,"byte_end":249117,"line_start":397,"line_end":397,"column_start":9,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4760},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249456,"byte_end":249460,"line_start":410,"line_end":410,"column_start":9,"column_end":13},"name":"None","qualname":"::generics::TraitBoundModifier::None","value":"TraitBoundModifier::None","parent":{"krate":0,"index":4759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4762},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249470,"byte_end":249475,"line_start":411,"line_end":411,"column_start":9,"column_end":14},"name":"Maybe","qualname":"::generics::TraitBoundModifier::Maybe","value":"TraitBoundModifier::Maybe(crate::token::Question)","parent":{"krate":0,"index":4759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4759},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249427,"byte_end":249445,"line_start":409,"line_end":409,"column_start":14,"column_end":32},"name":"TraitBoundModifier","qualname":"::generics::TraitBoundModifier","value":"pub enum TraitBoundModifier { None, Maybe(crate::token::Question), }","parent":null,"children":[{"krate":0,"index":4760},{"krate":0,"index":4762}],"decl_id":null,"docs":" A modifier on a trait bound, currently only used for the `?` in\n `?Sized`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4768},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249723,"byte_end":249734,"line_start":421,"line_end":421,"column_start":16,"column_end":27},"name":"WhereClause","qualname":"::generics::WhereClause","value":"WhereClause { where_token, predicates }","parent":null,"children":[{"krate":0,"index":4769},{"krate":0,"index":4770}],"decl_id":null,"docs":" A `where` clause in a definition: `where T: Deserialize<'de>, D:\n 'static`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4769},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249749,"byte_end":249760,"line_start":422,"line_end":422,"column_start":13,"column_end":24},"name":"where_token","qualname":"::generics::WhereClause::where_token","value":"token::Where","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4770},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":249789,"byte_end":249799,"line_start":423,"line_end":423,"column_start":13,"column_end":23},"name":"predicates","qualname":"::generics::WhereClause::predicates","value":"punctuated::Punctuated<generics::WherePredicate, token::Comma>","parent":{"krate":0,"index":4768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4780},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250594,"byte_end":250598,"line_start":446,"line_end":446,"column_start":13,"column_end":17},"name":"Type","qualname":"::generics::WherePredicate::Type","value":"WherePredicate::Type(PredicateType)","parent":{"krate":0,"index":4779},"children":[],"decl_id":null,"docs":" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4783},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251170,"byte_end":251178,"line_start":460,"line_end":460,"column_start":13,"column_end":21},"name":"Lifetime","qualname":"::generics::WherePredicate::Lifetime","value":"WherePredicate::Lifetime(PredicateLifetime)","parent":{"krate":0,"index":4779},"children":[],"decl_id":null,"docs":" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4786},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251544,"byte_end":251546,"line_start":470,"line_end":470,"column_start":13,"column_end":15},"name":"Eq","qualname":"::generics::WherePredicate::Eq","value":"WherePredicate::Eq(PredicateEq)","parent":{"krate":0,"index":4779},"children":[],"decl_id":null,"docs":" An equality predicate in a `where` clause (unsupported).","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4779},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250367,"byte_end":250381,"line_start":441,"line_end":441,"column_start":14,"column_end":28},"name":"WherePredicate","qualname":"::generics::WherePredicate","value":"pub enum WherePredicate {\n\n    #[doc =\n      r\" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Type(PredicateType),\n\n    #[doc = r\" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Lifetime(PredicateLifetime),\n\n    #[doc = r\" An equality predicate in a `where` clause (unsupported).\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Eq(PredicateEq),\n}","parent":null,"children":[{"krate":0,"index":4780},{"krate":0,"index":4783},{"krate":0,"index":4786}],"decl_id":null,"docs":" A single predicate in a `where` clause: `T: Deserialize<'de>`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4791},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250599,"byte_end":250612,"line_start":446,"line_end":446,"column_start":18,"column_end":31},"name":"PredicateType","qualname":"::generics::PredicateType","value":"PredicateType { lifetimes, bounded_ty, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4794},{"krate":0,"index":4795}],"decl_id":null,"docs":" A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4792},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250682,"byte_end":250691,"line_start":448,"line_end":448,"column_start":17,"column_end":26},"name":"lifetimes","qualname":"::generics::PredicateType::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":4791},"children":[],"decl_id":null,"docs":" Any lifetimes from a `for` binding\n","sig":null,"attributes":[{"value":"/ Any lifetimes from a `for` binding","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250627,"byte_end":250665,"line_start":447,"line_end":447,"column_start":13,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4793},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250772,"byte_end":250782,"line_start":450,"line_end":450,"column_start":17,"column_end":27},"name":"bounded_ty","qualname":"::generics::PredicateType::bounded_ty","value":"ty::Type","parent":{"krate":0,"index":4791},"children":[],"decl_id":null,"docs":" The type being bounded\n","sig":null,"attributes":[{"value":"/ The type being bounded","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250729,"byte_end":250755,"line_start":449,"line_end":449,"column_start":13,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":4794},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250806,"byte_end":250817,"line_start":451,"line_end":451,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::PredicateType::colon_token","value":"token::Colon","parent":{"krate":0,"index":4791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4795},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250911,"byte_end":250917,"line_start":453,"line_end":453,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::PredicateType::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":4791},"children":[],"decl_id":null,"docs":" Trait and lifetime bounds (`Clone+Send+'static`)\n","sig":null,"attributes":[{"value":"/ Trait and lifetime bounds (`Clone+Send+'static`)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":250842,"byte_end":250894,"line_start":452,"line_end":452,"column_start":13,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4798},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251179,"byte_end":251196,"line_start":460,"line_end":460,"column_start":22,"column_end":39},"name":"PredicateLifetime","qualname":"::generics::PredicateLifetime","value":"PredicateLifetime { lifetime, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":4799},{"krate":0,"index":4800},{"krate":0,"index":4801}],"decl_id":null,"docs":" A lifetime predicate in a `where` clause: `'a: 'b + 'c`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4799},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251215,"byte_end":251223,"line_start":461,"line_end":461,"column_start":17,"column_end":25},"name":"lifetime","qualname":"::generics::PredicateLifetime::lifetime","value":"lifetime::Lifetime","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4800},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251251,"byte_end":251262,"line_start":462,"line_end":462,"column_start":17,"column_end":28},"name":"colon_token","qualname":"::generics::PredicateLifetime::colon_token","value":"token::Colon","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4801},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251291,"byte_end":251297,"line_start":463,"line_end":463,"column_start":17,"column_end":23},"name":"bounds","qualname":"::generics::PredicateLifetime::bounds","value":"punctuated::Punctuated<lifetime::Lifetime, token::Add>","parent":{"krate":0,"index":4798},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4804},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251547,"byte_end":251558,"line_start":470,"line_end":470,"column_start":16,"column_end":27},"name":"PredicateEq","qualname":"::generics::PredicateEq","value":"PredicateEq { lhs_ty, eq_token, rhs_ty }","parent":null,"children":[{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4807}],"decl_id":null,"docs":" An equality predicate in a `where` clause (unsupported).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4805},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251577,"byte_end":251583,"line_start":471,"line_end":471,"column_start":17,"column_end":23},"name":"lhs_ty","qualname":"::generics::PredicateEq::lhs_ty","value":"ty::Type","parent":{"krate":0,"index":4804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4806},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251607,"byte_end":251615,"line_start":472,"line_end":472,"column_start":17,"column_end":25},"name":"eq_token","qualname":"::generics::PredicateEq::eq_token","value":"token::Eq","parent":{"krate":0,"index":4804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4807},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251644,"byte_end":251650,"line_start":473,"line_end":473,"column_start":17,"column_end":23},"name":"rhs_ty","qualname":"::generics::PredicateEq::rhs_ty","value":"ty::Type","parent":{"krate":0,"index":4804},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4812},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275960,"byte_end":275968,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"Lifetime","qualname":"::lifetime::Lifetime","value":"Lifetime { apostrophe, ident }","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4814}],"decl_id":null,"docs":" A Rust lifetime: `'a`.","sig":null,"attributes":[{"value":"/ A Rust lifetime: `'a`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275401,"byte_end":275427,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275428,"byte_end":275431,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Lifetime names must conform to the following rules:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275432,"byte_end":275487,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275488,"byte_end":275491,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - Must start with an apostrophe.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275492,"byte_end":275528,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ - Must not consist of just an apostrophe: `'`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275529,"byte_end":275579,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ - Character after the apostrophe must be `_` or a Unicode code point with","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275580,"byte_end":275657,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   the XID_Start property.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275658,"byte_end":275687,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/ - All following characters must be Unicode code points with the XID_Continue","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275688,"byte_end":275768,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   property.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275769,"byte_end":275784,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275785,"byte_end":275788,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"derive\"` or `\"full\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275789,"byte_end":275864,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275865,"byte_end":275878,"line_start":23,"line_end":23,"column_start":1,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":4813},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":275979,"byte_end":275989,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"name":"apostrophe","qualname":"::lifetime::Lifetime::apostrophe","value":"proc_macro2::Span","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4814},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276005,"byte_end":276010,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"ident","qualname":"::lifetime::Lifetime::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276385,"byte_end":276388,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<Lifetime>::new","value":"pub fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":" # Panics","sig":null,"attributes":[{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276042,"byte_end":276054,"line_start":32,"line_end":32,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276059,"byte_end":276062,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Panics if the lifetime does not conform to the bulleted rules above.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276067,"byte_end":276139,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276144,"byte_end":276147,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Invocation","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276152,"byte_end":276168,"line_start":36,"line_end":36,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276173,"byte_end":276176,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276181,"byte_end":276199,"line_start":38,"line_end":38,"column_start":5,"column_end":23}},{"value":"/ # use proc_macro2::Span;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276204,"byte_end":276232,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/ # use syn::Lifetime;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276237,"byte_end":276261,"line_start":40,"line_end":40,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276266,"byte_end":276271,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ # fn f() -> Lifetime {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276276,"byte_end":276302,"line_start":42,"line_end":42,"column_start":5,"column_end":31}},{"value":"/ Lifetime::new(\"'a\", Span::call_site())","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276307,"byte_end":276349,"line_start":43,"line_end":43,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276354,"byte_end":276361,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276366,"byte_end":276373,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":278109,"byte_end":278117,"line_start":119,"line_end":119,"column_start":8,"column_end":16},"name":"Lifetime","qualname":"::lifetime::Lifetime","value":"pub fn Lifetime(lookahead::TokenMarker) -> Lifetime","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":278034,"byte_end":278061,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":278077,"byte_end":278101,"line_start":118,"line_end":118,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4834},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":280096,"byte_end":280099,"line_start":39,"line_end":39,"column_start":13,"column_end":16},"name":"Str","qualname":"::lit::Lit::Str","value":"Lit::Str(LitStr)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" A UTF-8 string literal: `\"foo\"`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4837},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":280346,"byte_end":280353,"line_start":47,"line_end":47,"column_start":13,"column_end":20},"name":"ByteStr","qualname":"::lit::Lit::ByteStr","value":"Lit::ByteStr(LitByteStr)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" A byte string literal: `b\"foo\"`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4840},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":280595,"byte_end":280599,"line_start":55,"line_end":55,"column_start":13,"column_end":17},"name":"Byte","qualname":"::lit::Lit::Byte","value":"Lit::Byte(LitByte)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" A byte literal: `b'f'`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4843},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":280842,"byte_end":280846,"line_start":63,"line_end":63,"column_start":13,"column_end":17},"name":"Char","qualname":"::lit::Lit::Char","value":"Lit::Char(LitChar)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" A character literal: `'a'`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4846},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":281211,"byte_end":281214,"line_start":74,"line_end":74,"column_start":13,"column_end":16},"name":"Int","qualname":"::lit::Lit::Int","value":"Lit::Int(LitInt)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" An integer literal: `1` or `1u16`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4849},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":281544,"byte_end":281549,"line_start":84,"line_end":84,"column_start":13,"column_end":18},"name":"Float","qualname":"::lit::Lit::Float","value":"Lit::Float(LitFloat)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" A floating point literal: `1f64` or `1.0e10f64`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4852},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":281803,"byte_end":281807,"line_start":92,"line_end":92,"column_start":13,"column_end":17},"name":"Bool","qualname":"::lit::Lit::Bool","value":"Lit::Bool(LitBool)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" A boolean literal: `true` or `false`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4855},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282170,"byte_end":282178,"line_start":102,"line_end":102,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::lit::Lit::Verbatim","value":"Lit::Verbatim(LitVerbatim)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" A raw token literal not interpreted by Syn, possibly because it\n represents an integer larger than 64 bits.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4833},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":279915,"byte_end":279918,"line_start":34,"line_end":34,"column_start":14,"column_end":17},"name":"Lit","qualname":"::lit::Lit","value":"pub enum Lit {\n\n    #[doc = r#\" A UTF-8 string literal: `\"foo\"`.\"#]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Str(LitStr),\n\n    #[doc = r#\" A byte string literal: `b\"foo\"`.\"#]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    ByteStr(LitByteStr),\n\n    #[doc = r\" A byte literal: `b'f'`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Byte(LitByte),\n\n    #[doc = r\" A character literal: `'a'`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Char(LitChar),\n\n    #[doc = r\" An integer literal: `1` or `1u16`.\"]\n    #[doc = r\"\"]\n    #[doc = r\" Holds up to 64 bits of data. Use `LitVerbatim` for any larger\"]\n    #[doc = r\" integer literal.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Int(LitInt),\n\n    #[doc = r\" A floating point literal: `1f64` or `1.0e10f64`.\"]\n    #[doc = r\"\"]\n    #[doc = r\" Must be finite. May not be infinte or NaN.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Float(LitFloat),\n\n    #[doc = r\" A boolean literal: `true` or `false`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Bool(LitBool),\n\n    #[doc =\n      r\" A raw token literal not interpreted by Syn, possibly because it\"]\n    #[doc = r\" represents an integer larger than 64 bits.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Verbatim(LitVerbatim),\n}","parent":null,"children":[{"krate":0,"index":4834},{"krate":0,"index":4837},{"krate":0,"index":4840},{"krate":0,"index":4843},{"krate":0,"index":4846},{"krate":0,"index":4849},{"krate":0,"index":4852},{"krate":0,"index":4855}],"decl_id":null,"docs":" A Rust literal such as a string or integer or boolean.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4860},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":280100,"byte_end":280106,"line_start":39,"line_end":39,"column_start":17,"column_end":23},"name":"LitStr","qualname":"::lit::LitStr","value":"LitStr {  }","parent":null,"children":[{"krate":0,"index":4861}],"decl_id":null,"docs":" A UTF-8 string literal: `\"foo\"`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4864},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":280354,"byte_end":280364,"line_start":47,"line_end":47,"column_start":21,"column_end":31},"name":"LitByteStr","qualname":"::lit::LitByteStr","value":"LitByteStr {  }","parent":null,"children":[{"krate":0,"index":4865}],"decl_id":null,"docs":" A byte string literal: `b\"foo\"`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4868},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":280600,"byte_end":280607,"line_start":55,"line_end":55,"column_start":18,"column_end":25},"name":"LitByte","qualname":"::lit::LitByte","value":"LitByte {  }","parent":null,"children":[{"krate":0,"index":4869}],"decl_id":null,"docs":" A byte literal: `b'f'`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4872},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":280847,"byte_end":280854,"line_start":63,"line_end":63,"column_start":18,"column_end":25},"name":"LitChar","qualname":"::lit::LitChar","value":"LitChar {  }","parent":null,"children":[{"krate":0,"index":4873}],"decl_id":null,"docs":" A character literal: `'a'`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4876},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":281215,"byte_end":281221,"line_start":74,"line_end":74,"column_start":17,"column_end":23},"name":"LitInt","qualname":"::lit::LitInt","value":"LitInt {  }","parent":null,"children":[{"krate":0,"index":4877}],"decl_id":null,"docs":" An integer literal: `1` or `1u16`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4880},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":281550,"byte_end":281558,"line_start":84,"line_end":84,"column_start":19,"column_end":27},"name":"LitFloat","qualname":"::lit::LitFloat","value":"LitFloat {  }","parent":null,"children":[{"krate":0,"index":4881}],"decl_id":null,"docs":" A floating point literal: `1f64` or `1.0e10f64`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4884},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":281808,"byte_end":281815,"line_start":92,"line_end":92,"column_start":18,"column_end":25},"name":"LitBool","qualname":"::lit::LitBool","value":"LitBool { value, span }","parent":null,"children":[{"krate":0,"index":4885},{"krate":0,"index":4886}],"decl_id":null,"docs":" A boolean literal: `true` or `false`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4885},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":281855,"byte_end":281860,"line_start":93,"line_end":93,"column_start":17,"column_end":22},"name":"value","qualname":"::lit::LitBool::value","value":"bool","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4886},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":281884,"byte_end":281888,"line_start":94,"line_end":94,"column_start":17,"column_end":21},"name":"span","qualname":"::lit::LitBool::span","value":"proc_macro2::Span","parent":{"krate":0,"index":4884},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4889},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282179,"byte_end":282190,"line_start":102,"line_end":102,"column_start":22,"column_end":33},"name":"LitVerbatim","qualname":"::lit::LitVerbatim","value":"LitVerbatim { token }","parent":null,"children":[{"krate":0,"index":4890}],"decl_id":null,"docs":" A raw token literal not interpreted by Syn, possibly because it\n represents an integer larger than 64 bits.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4890},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282230,"byte_end":282235,"line_start":103,"line_end":103,"column_start":17,"column_end":22},"name":"token","qualname":"::lit::LitVerbatim::token","value":"proc_macro2::Literal","parent":{"krate":0,"index":4889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282292,"byte_end":282295,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<LitStr>::new","value":"pub fn new(&str, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282453,"byte_end":282458,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"value","qualname":"<LitStr>::value","value":"pub fn value(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283658,"byte_end":283663,"line_start":151,"line_end":151,"column_start":12,"column_end":17},"name":"parse","qualname":"<LitStr>::parse","value":"pub fn parse<T: Parse>(&Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse a syntax tree node from the content of this string literal.","sig":null,"attributes":[{"value":"/ Parse a syntax tree node from the content of this string literal.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282543,"byte_end":282612,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282617,"byte_end":282620,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ All spans in the syntax tree will point to the span of this `LitStr`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282625,"byte_end":282698,"line_start":121,"line_end":121,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282703,"byte_end":282706,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282711,"byte_end":282724,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282729,"byte_end":282732,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282737,"byte_end":282755,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ use proc_macro2::Span;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282760,"byte_end":282786,"line_start":126,"line_end":126,"column_start":5,"column_end":31}},{"value":"/ use syn::{Attribute, Error, Ident, Lit, Meta, MetaNameValue, Path, Result};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282791,"byte_end":282870,"line_start":127,"line_end":127,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282875,"byte_end":282878,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ // Parses the path from an attribute that looks like:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282883,"byte_end":282940,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282945,"byte_end":282951,"line_start":130,"line_end":130,"column_start":5,"column_end":11}},{"value":"/ //     #[path = \"a::b::c\"]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282956,"byte_end":282986,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282991,"byte_end":282997,"line_start":132,"line_end":132,"column_start":5,"column_end":11}},{"value":"/ // or returns `None` if the input is some other attribute.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283002,"byte_end":283064,"line_start":133,"line_end":133,"column_start":5,"column_end":67}},{"value":"/ fn get_path(attr: &Attribute) -> Result<Option<Path>> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283069,"byte_end":283128,"line_start":134,"line_end":134,"column_start":5,"column_end":64}},{"value":"/     if !attr.path.is_ident(\"path\") {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283133,"byte_end":283173,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283178,"byte_end":283206,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283211,"byte_end":283220,"line_start":137,"line_end":137,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283225,"byte_end":283228,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/     match attr.parse_meta()? {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283233,"byte_end":283267,"line_start":139,"line_end":139,"column_start":5,"column_end":39}},{"value":"/         Meta::NameValue(MetaNameValue { lit: Lit::Str(lit_str), .. }) => {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283272,"byte_end":283350,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/             lit_str.parse().map(Some)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283355,"byte_end":283396,"line_start":141,"line_end":141,"column_start":5,"column_end":46}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283401,"byte_end":283414,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/         _ => {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283419,"byte_end":283437,"line_start":143,"line_end":143,"column_start":5,"column_end":23}},{"value":"/             let message = \"expected #[path = \\\"...\\\"]\";","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283442,"byte_end":283501,"line_start":144,"line_end":144,"column_start":5,"column_end":64}},{"value":"/             Err(Error::new_spanned(attr, message))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283506,"byte_end":283560,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283565,"byte_end":283578,"line_start":146,"line_end":146,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283583,"byte_end":283592,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283597,"byte_end":283602,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283607,"byte_end":283614,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283619,"byte_end":283646,"line_start":150,"line_end":150,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284557,"byte_end":284567,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"parse_with","qualname":"<LitStr>::parse_with","value":"pub fn parse_with<F: Parser>(&Self, F) -> Result<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Invoke parser on the content of this string literal.","sig":null,"attributes":[{"value":"/ Invoke parser on the content of this string literal.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283741,"byte_end":283797,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283802,"byte_end":283805,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ All spans in the syntax tree will point to the span of this `LitStr`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283810,"byte_end":283883,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283888,"byte_end":283891,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283896,"byte_end":283909,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283914,"byte_end":283917,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283922,"byte_end":283940,"line_start":161,"line_end":161,"column_start":5,"column_end":23}},{"value":"/ # use proc_macro2::Span;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283945,"byte_end":283973,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/ # use syn::{LitStr, Result};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":283978,"byte_end":284010,"line_start":163,"line_end":163,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284015,"byte_end":284020,"line_start":164,"line_end":164,"column_start":5,"column_end":10}},{"value":"/ # fn main() -> Result<()> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284025,"byte_end":284056,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ #     let lit_str = LitStr::new(\"a::b::c\", Span::call_site());","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284061,"byte_end":284127,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284132,"byte_end":284137,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ #     const IGNORE: &str = stringify! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284142,"byte_end":284185,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/ let lit_str: LitStr = /* ... */;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284190,"byte_end":284226,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/ #     };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284231,"byte_end":284243,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284248,"byte_end":284251,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ // Parse a string literal like \"a::b::c\" into a Path, not allowing","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284256,"byte_end":284326,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ // generic arguments on any of the path segments.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284331,"byte_end":284384,"line_start":173,"line_end":173,"column_start":5,"column_end":58}},{"value":"/ let basic_path = lit_str.parse_with(syn::Path::parse_mod_style)?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284389,"byte_end":284458,"line_start":174,"line_end":174,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284463,"byte_end":284468,"line_start":175,"line_end":175,"column_start":5,"column_end":10}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284473,"byte_end":284489,"line_start":176,"line_end":176,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284494,"byte_end":284501,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284506,"byte_end":284513,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":284518,"byte_end":284545,"line_start":179,"line_end":179,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":285739,"byte_end":285743,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"span","qualname":"<LitStr>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":285805,"byte_end":285813,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitStr>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":285911,"byte_end":285914,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"new","qualname":"<LitByteStr>::new","value":"pub fn new(&[u8], Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286088,"byte_end":286093,"line_start":228,"line_end":228,"column_start":12,"column_end":17},"name":"value","qualname":"<LitByteStr>::value","value":"pub fn value(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286191,"byte_end":286195,"line_start":232,"line_end":232,"column_start":12,"column_end":16},"name":"span","qualname":"<LitByteStr>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286257,"byte_end":286265,"line_start":236,"line_end":236,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitByteStr>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286360,"byte_end":286363,"line_start":242,"line_end":242,"column_start":12,"column_end":15},"name":"new","qualname":"<LitByte>::new","value":"pub fn new(u8, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286531,"byte_end":286536,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"value","qualname":"<LitByte>::value","value":"pub fn value(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286625,"byte_end":286629,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"span","qualname":"<LitByte>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286691,"byte_end":286699,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitByte>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286794,"byte_end":286797,"line_start":262,"line_end":262,"column_start":12,"column_end":15},"name":"new","qualname":"<LitChar>::new","value":"pub fn new(char, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286965,"byte_end":286970,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"value","qualname":"<LitChar>::value","value":"pub fn value(&Self) -> char","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":287061,"byte_end":287065,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"span","qualname":"<LitChar>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":287127,"byte_end":287135,"line_start":276,"line_end":276,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitChar>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":287229,"byte_end":287232,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"new","qualname":"<LitInt>::new","value":"pub fn new(u64, IntSuffix, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":288302,"byte_end":288307,"line_start":302,"line_end":302,"column_start":12,"column_end":17},"name":"value","qualname":"<LitInt>::value","value":"pub fn value(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":288405,"byte_end":288411,"line_start":306,"line_end":306,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitInt>::suffix","value":"pub fn suffix(&Self) -> IntSuffix","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":289108,"byte_end":289112,"line_start":329,"line_end":329,"column_start":12,"column_end":16},"name":"span","qualname":"<LitInt>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":289174,"byte_end":289182,"line_start":333,"line_end":333,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitInt>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":289278,"byte_end":289281,"line_start":339,"line_end":339,"column_start":12,"column_end":15},"name":"new","qualname":"<LitFloat>::new","value":"pub fn new(f64, FloatSuffix, Span) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":289665,"byte_end":289670,"line_start":349,"line_end":349,"column_start":12,"column_end":17},"name":"value","qualname":"<LitFloat>::value","value":"pub fn value(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":289761,"byte_end":289767,"line_start":353,"line_end":353,"column_start":12,"column_end":18},"name":"suffix","qualname":"<LitFloat>::suffix","value":"pub fn suffix(&Self) -> FloatSuffix","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290059,"byte_end":290063,"line_start":363,"line_end":363,"column_start":12,"column_end":16},"name":"span","qualname":"<LitFloat>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290125,"byte_end":290133,"line_start":367,"line_end":367,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitFloat>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291035,"byte_end":291039,"line_start":404,"line_end":404,"column_start":12,"column_end":16},"name":"span","qualname":"<LitVerbatim>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291101,"byte_end":291109,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"name":"set_span","qualname":"<LitVerbatim>::set_span","value":"pub fn set_span(&mut Self, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4895},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291196,"byte_end":291202,"line_start":413,"line_end":413,"column_start":19,"column_end":25},"name":"LitStr","qualname":"::lit::LitStr","value":"pub fn LitStr(lookahead::TokenMarker) -> LitStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290813,"byte_end":290840,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290872,"byte_end":290896,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":4896},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291230,"byte_end":291240,"line_start":414,"line_end":414,"column_start":19,"column_end":29},"name":"LitByteStr","qualname":"::lit::LitByteStr","value":"pub fn LitByteStr(lookahead::TokenMarker) -> LitByteStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290813,"byte_end":290840,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290872,"byte_end":290896,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":4897},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291268,"byte_end":291275,"line_start":415,"line_end":415,"column_start":19,"column_end":26},"name":"LitByte","qualname":"::lit::LitByte","value":"pub fn LitByte(lookahead::TokenMarker) -> LitByte","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290813,"byte_end":290840,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290872,"byte_end":290896,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":4898},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291303,"byte_end":291310,"line_start":416,"line_end":416,"column_start":19,"column_end":26},"name":"LitChar","qualname":"::lit::LitChar","value":"pub fn LitChar(lookahead::TokenMarker) -> LitChar","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290813,"byte_end":290840,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290872,"byte_end":290896,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":4899},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291338,"byte_end":291344,"line_start":417,"line_end":417,"column_start":19,"column_end":25},"name":"LitInt","qualname":"::lit::LitInt","value":"pub fn LitInt(lookahead::TokenMarker) -> LitInt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290813,"byte_end":290840,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290872,"byte_end":290896,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":4900},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291372,"byte_end":291380,"line_start":418,"line_end":418,"column_start":19,"column_end":27},"name":"LitFloat","qualname":"::lit::LitFloat","value":"pub fn LitFloat(lookahead::TokenMarker) -> LitFloat","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290813,"byte_end":290840,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290872,"byte_end":290896,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":4901},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291408,"byte_end":291415,"line_start":419,"line_end":419,"column_start":19,"column_end":26},"name":"LitBool","qualname":"::lit::LitBool","value":"pub fn LitBool(lookahead::TokenMarker) -> LitBool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290813,"byte_end":290840,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290872,"byte_end":290896,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"Function","id":{"krate":0,"index":4902},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291443,"byte_end":291454,"line_start":420,"line_end":420,"column_start":19,"column_end":30},"name":"LitVerbatim","qualname":"::lit::LitVerbatim","value":"pub fn LitVerbatim(lookahead::TokenMarker) -> LitVerbatim","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290813,"byte_end":290840,"line_start":394,"line_end":394,"column_start":9,"column_end":36}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":290872,"byte_end":290896,"line_start":396,"line_end":396,"column_start":9,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4904},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291774,"byte_end":291780,"line_start":430,"line_end":430,"column_start":9,"column_end":15},"name":"Cooked","qualname":"::lit::StrStyle::Cooked","value":"StrStyle::Cooked","parent":{"krate":0,"index":4903},"children":[],"decl_id":null,"docs":" An ordinary string like `\"data\"`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4906},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291915,"byte_end":291918,"line_start":434,"line_end":434,"column_start":9,"column_end":12},"name":"Raw","qualname":"::lit::StrStyle::Raw","value":"StrStyle::Raw(usize)","parent":{"krate":0,"index":4903},"children":[],"decl_id":null,"docs":" A raw string like `r##\"data\"##`.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4903},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291699,"byte_end":291707,"line_start":428,"line_end":428,"column_start":14,"column_end":22},"name":"StrStyle","qualname":"::lit::StrStyle","value":"pub enum StrStyle {\n\n    #[doc = r#\" An ordinary string like `\"data\"`.\"#]\n    Cooked,\n\n    #[doc = r###\" A raw string like `r##\"data\"##`.\"###]\n    #[doc = r\"\"]\n    #[doc = r\" The unsigned integer is the number of `#` symbols used.\"]\n    Raw(usize),\n}","parent":null,"children":[{"krate":0,"index":4904},{"krate":0,"index":4906}],"decl_id":null,"docs":" The style of a string literal, either plain quoted or a raw string like\n `r##\"data\"##`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4912},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292172,"byte_end":292174,"line_start":444,"line_end":444,"column_start":9,"column_end":11},"name":"I8","qualname":"::lit::IntSuffix::I8","value":"IntSuffix::I8","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4914},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292184,"byte_end":292187,"line_start":445,"line_end":445,"column_start":9,"column_end":12},"name":"I16","qualname":"::lit::IntSuffix::I16","value":"IntSuffix::I16","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4916},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292197,"byte_end":292200,"line_start":446,"line_end":446,"column_start":9,"column_end":12},"name":"I32","qualname":"::lit::IntSuffix::I32","value":"IntSuffix::I32","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4918},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292210,"byte_end":292213,"line_start":447,"line_end":447,"column_start":9,"column_end":12},"name":"I64","qualname":"::lit::IntSuffix::I64","value":"IntSuffix::I64","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4920},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292223,"byte_end":292227,"line_start":448,"line_end":448,"column_start":9,"column_end":13},"name":"I128","qualname":"::lit::IntSuffix::I128","value":"IntSuffix::I128","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4922},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292237,"byte_end":292242,"line_start":449,"line_end":449,"column_start":9,"column_end":14},"name":"Isize","qualname":"::lit::IntSuffix::Isize","value":"IntSuffix::Isize","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4924},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292252,"byte_end":292254,"line_start":450,"line_end":450,"column_start":9,"column_end":11},"name":"U8","qualname":"::lit::IntSuffix::U8","value":"IntSuffix::U8","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4926},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292264,"byte_end":292267,"line_start":451,"line_end":451,"column_start":9,"column_end":12},"name":"U16","qualname":"::lit::IntSuffix::U16","value":"IntSuffix::U16","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4928},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292277,"byte_end":292280,"line_start":452,"line_end":452,"column_start":9,"column_end":12},"name":"U32","qualname":"::lit::IntSuffix::U32","value":"IntSuffix::U32","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4930},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292290,"byte_end":292293,"line_start":453,"line_end":453,"column_start":9,"column_end":12},"name":"U64","qualname":"::lit::IntSuffix::U64","value":"IntSuffix::U64","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4932},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292303,"byte_end":292307,"line_start":454,"line_end":454,"column_start":9,"column_end":13},"name":"U128","qualname":"::lit::IntSuffix::U128","value":"IntSuffix::U128","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4934},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292317,"byte_end":292322,"line_start":455,"line_end":455,"column_start":9,"column_end":14},"name":"Usize","qualname":"::lit::IntSuffix::Usize","value":"IntSuffix::Usize","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4936},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292332,"byte_end":292336,"line_start":456,"line_end":456,"column_start":9,"column_end":13},"name":"None","qualname":"::lit::IntSuffix::None","value":"IntSuffix::None","parent":{"krate":0,"index":4911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4911},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292142,"byte_end":292151,"line_start":443,"line_end":443,"column_start":14,"column_end":23},"name":"IntSuffix","qualname":"::lit::IntSuffix","value":"pub enum IntSuffix {\n    I8,\n    I16,\n    I32,\n    I64,\n    I128,\n    Isize,\n    U8,\n    U16,\n    U32,\n    U64,\n    U128,\n    Usize,\n    None,\n}","parent":null,"children":[{"krate":0,"index":4912},{"krate":0,"index":4914},{"krate":0,"index":4916},{"krate":0,"index":4918},{"krate":0,"index":4920},{"krate":0,"index":4922},{"krate":0,"index":4924},{"krate":0,"index":4926},{"krate":0,"index":4928},{"krate":0,"index":4930},{"krate":0,"index":4932},{"krate":0,"index":4934},{"krate":0,"index":4936}],"decl_id":null,"docs":" The suffix on an integer literal if any, like the `u8` in `127u8`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4941},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292601,"byte_end":292604,"line_start":467,"line_end":467,"column_start":9,"column_end":12},"name":"F32","qualname":"::lit::FloatSuffix::F32","value":"FloatSuffix::F32","parent":{"krate":0,"index":4940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4943},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292614,"byte_end":292617,"line_start":468,"line_end":468,"column_start":9,"column_end":12},"name":"F64","qualname":"::lit::FloatSuffix::F64","value":"FloatSuffix::F64","parent":{"krate":0,"index":4940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4945},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292627,"byte_end":292631,"line_start":469,"line_end":469,"column_start":9,"column_end":13},"name":"None","qualname":"::lit::FloatSuffix::None","value":"FloatSuffix::None","parent":{"krate":0,"index":4940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4940},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292569,"byte_end":292580,"line_start":466,"line_end":466,"column_start":14,"column_end":25},"name":"FloatSuffix","qualname":"::lit::FloatSuffix","value":"pub enum FloatSuffix { F32, F64, None, }","parent":null,"children":[{"krate":0,"index":4941},{"krate":0,"index":4943},{"krate":0,"index":4945}],"decl_id":null,"docs":" The suffix on a floating point literal if any, like the `f32` in\n `1.0f32`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292717,"byte_end":292720,"line_start":476,"line_end":476,"column_start":8,"column_end":11},"name":"Lit","qualname":"::lit::Lit","value":"pub fn Lit(lookahead::TokenMarker) -> Lit","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292642,"byte_end":292669,"line_start":473,"line_end":473,"column_start":1,"column_end":28}},{"value":"allow(non_snake_case)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292685,"byte_end":292709,"line_start":475,"line_end":475,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297835,"byte_end":297838,"line_start":655,"line_end":655,"column_start":16,"column_end":19},"name":"new","qualname":"<Lit>::new","value":"pub fn new(Literal) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Interpret a Syn literal from a proc-macro2 literal.","sig":null,"attributes":[{"value":"/ Interpret a Syn literal from a proc-macro2 literal.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297396,"byte_end":297451,"line_start":644,"line_end":644,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297460,"byte_end":297463,"line_start":645,"line_end":645,"column_start":9,"column_end":12}},{"value":"/ Not all proc-macro2 literals are valid Syn literals. In particular,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297472,"byte_end":297543,"line_start":646,"line_end":646,"column_start":9,"column_end":80}},{"value":"/ doc comments are considered by proc-macro2 to be literals but in Syn","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297552,"byte_end":297624,"line_start":647,"line_end":647,"column_start":9,"column_end":81}},{"value":"/ they are [`Attribute`].","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297633,"byte_end":297660,"line_start":648,"line_end":648,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297669,"byte_end":297672,"line_start":649,"line_end":649,"column_start":9,"column_end":12}},{"value":"/ [`Attribute`]: crate::Attribute","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297681,"byte_end":297716,"line_start":650,"line_end":650,"column_start":9,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297725,"byte_end":297728,"line_start":651,"line_end":651,"column_start":9,"column_end":12}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297737,"byte_end":297749,"line_start":652,"line_end":652,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297758,"byte_end":297761,"line_start":653,"line_end":653,"column_start":9,"column_end":12}},{"value":"/ Panics if the input is a doc comment literal.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297770,"byte_end":297819,"line_start":654,"line_end":654,"column_start":9,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4949},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":313004,"byte_end":313009,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Macro","qualname":"::mac::Macro","value":"Macro { path, bang_token, delimiter, tts }","parent":null,"children":[{"krate":0,"index":4950},{"krate":0,"index":4951},{"krate":0,"index":4952},{"krate":0,"index":4953}],"decl_id":null,"docs":" A macro invocation: `println!(\"{}\", mac)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4950},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":313045,"byte_end":313049,"line_start":20,"line_end":20,"column_start":13,"column_end":17},"name":"path","qualname":"::mac::Macro::path","value":"path::Path","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4951},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":313069,"byte_end":313079,"line_start":21,"line_end":21,"column_start":13,"column_end":23},"name":"bang_token","qualname":"::mac::Macro::bang_token","value":"token::Bang","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4952},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":313104,"byte_end":313113,"line_start":22,"line_end":22,"column_start":13,"column_end":22},"name":"delimiter","qualname":"::mac::Macro::delimiter","value":"mac::MacroDelimiter","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4953},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":313143,"byte_end":313146,"line_start":23,"line_end":23,"column_start":13,"column_end":16},"name":"tts","qualname":"::mac::Macro::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4957},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":313417,"byte_end":313422,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"Paren","qualname":"::mac::MacroDelimiter::Paren","value":"MacroDelimiter::Paren(Paren)","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4960},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":313439,"byte_end":313444,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"Brace","qualname":"::mac::MacroDelimiter::Brace","value":"MacroDelimiter::Brace(Brace)","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4963},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":313461,"byte_end":313468,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"name":"Bracket","qualname":"::mac::MacroDelimiter::Bracket","value":"MacroDelimiter::Bracket(Bracket)","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4956},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":313392,"byte_end":313406,"line_start":32,"line_end":32,"column_start":14,"column_end":28},"name":"MacroDelimiter","qualname":"::mac::MacroDelimiter","value":"pub enum MacroDelimiter { Paren(Paren), Brace(Brace), Bracket(Bracket), }","parent":null,"children":[{"krate":0,"index":4957},{"krate":0,"index":4960},{"krate":0,"index":4963}],"decl_id":null,"docs":" A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317728,"byte_end":317738,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"parse_body","qualname":"<Macro>::parse_body","value":"pub fn parse_body<T: Parse>(&Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse the tokens within the macro invocation's delimiters into a syntax\n tree.","sig":null,"attributes":[{"value":"/ Parse the tokens within the macro invocation's delimiters into a syntax","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314455,"byte_end":314530,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ tree.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314535,"byte_end":314544,"line_start":76,"line_end":76,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314549,"byte_end":314552,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `syn::parse2::<T>(mac.tts)` except that it","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314557,"byte_end":314625,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/ produces a more useful span when `tts` is empty.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314630,"byte_end":314682,"line_start":79,"line_end":79,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314687,"byte_end":314690,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314695,"byte_end":314708,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314713,"byte_end":314716,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314721,"byte_end":314739,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ use syn::{parse_quote, Expr, ExprLit, Ident, Lit, LitStr, Macro, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314744,"byte_end":314820,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ use syn::ext::IdentExt;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314825,"byte_end":314852,"line_start":85,"line_end":85,"column_start":5,"column_end":32}},{"value":"/ use syn::parse::{Error, Parse, ParseStream, Result};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314857,"byte_end":314913,"line_start":86,"line_end":86,"column_start":5,"column_end":61}},{"value":"/ use syn::punctuated::Punctuated;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314918,"byte_end":314954,"line_start":87,"line_end":87,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314959,"byte_end":314962,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ // The arguments expected by libcore's format_args macro, and as a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314967,"byte_end":315037,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ // result most other formatting and printing macros like println.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315042,"byte_end":315111,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315116,"byte_end":315122,"line_start":91,"line_end":91,"column_start":5,"column_end":11}},{"value":"/ //     println!(\"{} is {number:.prec$}\", \"x\", prec=5, number=0.01)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315127,"byte_end":315197,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ struct FormatArgs {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315202,"byte_end":315225,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/     format_string: Expr,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315230,"byte_end":315258,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/     positional_args: Vec<Expr>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315263,"byte_end":315298,"line_start":95,"line_end":95,"column_start":5,"column_end":40}},{"value":"/     named_args: Vec<(Ident, Expr)>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315303,"byte_end":315342,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315347,"byte_end":315352,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315357,"byte_end":315360,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ impl Parse for FormatArgs {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315365,"byte_end":315396,"line_start":99,"line_end":99,"column_start":5,"column_end":36}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315401,"byte_end":315455,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/         let format_string: Expr;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315460,"byte_end":315496,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"/         let mut positional_args = Vec::new();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315501,"byte_end":315550,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/         let mut named_args = Vec::new();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315555,"byte_end":315599,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315604,"byte_end":315607,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/         format_string = input.parse()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315612,"byte_end":315655,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"/         while !input.is_empty() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315660,"byte_end":315697,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"/             input.parse::<Token![,]>()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315702,"byte_end":315746,"line_start":107,"line_end":107,"column_start":5,"column_end":49}},{"value":"/             if input.is_empty() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315751,"byte_end":315788,"line_start":108,"line_end":108,"column_start":5,"column_end":42}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315793,"byte_end":315819,"line_start":109,"line_end":109,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315824,"byte_end":315841,"line_start":110,"line_end":110,"column_start":5,"column_end":22}},{"value":"/             if input.peek(Ident::peek_any) && input.peek2(Token![=]) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315846,"byte_end":315920,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/                 while !input.is_empty() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315925,"byte_end":315970,"line_start":112,"line_end":112,"column_start":5,"column_end":50}},{"value":"/                     let name: Ident = input.call(Ident::parse_any)?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":315975,"byte_end":316047,"line_start":113,"line_end":113,"column_start":5,"column_end":77}},{"value":"/                     input.parse::<Token![=]>()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316052,"byte_end":316104,"line_start":114,"line_end":114,"column_start":5,"column_end":57}},{"value":"/                     let value: Expr = input.parse()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316109,"byte_end":316166,"line_start":115,"line_end":115,"column_start":5,"column_end":62}},{"value":"/                     named_args.push((name, value));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316171,"byte_end":316226,"line_start":116,"line_end":116,"column_start":5,"column_end":60}},{"value":"/                     if input.is_empty() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316231,"byte_end":316276,"line_start":117,"line_end":117,"column_start":5,"column_end":50}},{"value":"/                         break;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316281,"byte_end":316315,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/                     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316320,"byte_end":316345,"line_start":119,"line_end":119,"column_start":5,"column_end":30}},{"value":"/                     input.parse::<Token![,]>()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316350,"byte_end":316402,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316407,"byte_end":316428,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/                 break;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316433,"byte_end":316459,"line_start":122,"line_end":122,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316464,"byte_end":316481,"line_start":123,"line_end":123,"column_start":5,"column_end":22}},{"value":"/             positional_args.push(input.parse()?);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316486,"byte_end":316539,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316544,"byte_end":316557,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316562,"byte_end":316565,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/         Ok(FormatArgs {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316570,"byte_end":316597,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/             format_string,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316602,"byte_end":316632,"line_start":128,"line_end":128,"column_start":5,"column_end":35}},{"value":"/             positional_args,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316637,"byte_end":316669,"line_start":129,"line_end":129,"column_start":5,"column_end":37}},{"value":"/             named_args,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316674,"byte_end":316701,"line_start":130,"line_end":130,"column_start":5,"column_end":32}},{"value":"/         })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316706,"byte_end":316720,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316725,"byte_end":316734,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316739,"byte_end":316744,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316749,"byte_end":316752,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ // Extract the first argument, the format string literal, from an","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316757,"byte_end":316826,"line_start":135,"line_end":135,"column_start":5,"column_end":74}},{"value":"/ // invocation of a formatting or printing macro.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316831,"byte_end":316883,"line_start":136,"line_end":136,"column_start":5,"column_end":57}},{"value":"/ fn get_format_string(m: &Macro) -> Result<LitStr> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316888,"byte_end":316943,"line_start":137,"line_end":137,"column_start":5,"column_end":60}},{"value":"/     let args: FormatArgs = m.parse_body()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":316948,"byte_end":316995,"line_start":138,"line_end":138,"column_start":5,"column_end":52}},{"value":"/     match args.format_string {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317000,"byte_end":317034,"line_start":139,"line_end":139,"column_start":5,"column_end":39}},{"value":"/         Expr::Lit(ExprLit { lit: Lit::Str(lit), .. }) => Ok(lit),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317039,"byte_end":317108,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/         other => {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317113,"byte_end":317135,"line_start":141,"line_end":141,"column_start":5,"column_end":27}},{"value":"/             // First argument was not a string literal expression.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317140,"byte_end":317210,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/             // Maybe something like: println!(concat!(...), ...)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317215,"byte_end":317283,"line_start":143,"line_end":143,"column_start":5,"column_end":73}},{"value":"/             Err(Error::new_spanned(other, \"format string must be a string literal\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317288,"byte_end":317376,"line_start":144,"line_end":144,"column_start":5,"column_end":93}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317381,"byte_end":317394,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317399,"byte_end":317408,"line_start":146,"line_end":146,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317413,"byte_end":317418,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317423,"byte_end":317426,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317431,"byte_end":317446,"line_start":149,"line_end":149,"column_start":5,"column_end":20}},{"value":"/     let invocation = parse_quote! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317451,"byte_end":317490,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/         println!(\"{:?}\", Instant::now())","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317495,"byte_end":317539,"line_start":151,"line_end":151,"column_start":5,"column_end":49}},{"value":"/     };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317544,"byte_end":317554,"line_start":152,"line_end":152,"column_start":5,"column_end":15}},{"value":"/     let lit = get_format_string(&invocation).unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317559,"byte_end":317617,"line_start":153,"line_end":153,"column_start":5,"column_end":63}},{"value":"/     assert_eq!(lit.value(), \"{:?}\");","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317622,"byte_end":317662,"line_start":154,"line_end":154,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317667,"byte_end":317672,"line_start":155,"line_end":155,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317677,"byte_end":317684,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317689,"byte_end":317716,"line_start":157,"line_end":157,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317958,"byte_end":317973,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"parse_body_with","qualname":"<Macro>::parse_body_with","value":"pub fn parse_body_with<F: Parser>(&Self, F) -> Result<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Parse the tokens within the macro invocation's delimiters using the\n given parser.\n","sig":null,"attributes":[{"value":"/ Parse the tokens within the macro invocation's delimiters using the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317821,"byte_end":317892,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ given parser.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317897,"byte_end":317914,"line_start":163,"line_end":163,"column_start":5,"column_end":22}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":317919,"byte_end":317946,"line_start":164,"line_end":164,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":4968},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":320724,"byte_end":320735,"line_start":8,"line_end":8,"column_start":16,"column_end":27},"name":"DeriveInput","qualname":"::derive::DeriveInput","value":"DeriveInput { attrs, vis, ident, generics, data }","parent":null,"children":[{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4972},{"krate":0,"index":4973}],"decl_id":null,"docs":" Data structure sent to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4969},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":320809,"byte_end":320814,"line_start":10,"line_end":10,"column_start":13,"column_end":18},"name":"attrs","qualname":"::derive::DeriveInput::attrs","value":"std::vec::Vec<attr::Attribute>","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":" Attributes tagged on the whole struct or enum.\n","sig":null,"attributes":[{"value":"/ Attributes tagged on the whole struct or enum.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":320746,"byte_end":320796,"line_start":9,"line_end":9,"column_start":9,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4970},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":320891,"byte_end":320894,"line_start":13,"line_end":13,"column_start":13,"column_end":16},"name":"vis","qualname":"::derive::DeriveInput::vis","value":"data::Visibility","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":" Visibility of the struct or enum.\n","sig":null,"attributes":[{"value":"/ Visibility of the struct or enum.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":320841,"byte_end":320878,"line_start":12,"line_end":12,"column_start":9,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":320961,"byte_end":320966,"line_start":16,"line_end":16,"column_start":13,"column_end":18},"name":"ident","qualname":"::derive::DeriveInput::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":" Name of the struct or enum.\n","sig":null,"attributes":[{"value":"/ Name of the struct or enum.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":320917,"byte_end":320948,"line_start":15,"line_end":15,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4972},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":321046,"byte_end":321054,"line_start":19,"line_end":19,"column_start":13,"column_end":21},"name":"generics","qualname":"::derive::DeriveInput::generics","value":"generics::Generics","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":" Generics required to complete the definition.\n","sig":null,"attributes":[{"value":"/ Generics required to complete the definition.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":320984,"byte_end":321033,"line_start":18,"line_end":18,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4973},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":321123,"byte_end":321127,"line_start":22,"line_end":22,"column_start":13,"column_end":17},"name":"data","qualname":"::derive::DeriveInput::data","value":"derive::Data","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":" Data within the struct or enum.\n","sig":null,"attributes":[{"value":"/ Data within the struct or enum.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":321075,"byte_end":321110,"line_start":21,"line_end":21,"column_start":9,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4983},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":321818,"byte_end":321824,"line_start":44,"line_end":44,"column_start":13,"column_end":19},"name":"Struct","qualname":"::derive::Data::Struct","value":"Data::Struct(DataStruct)","parent":{"krate":0,"index":4982},"children":[],"decl_id":null,"docs":" A struct input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4986},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":322152,"byte_end":322156,"line_start":54,"line_end":54,"column_start":13,"column_end":17},"name":"Enum","qualname":"::derive::Data::Enum","value":"Data::Enum(DataEnum)","parent":{"krate":0,"index":4982},"children":[],"decl_id":null,"docs":" An enum input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4989},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":322507,"byte_end":322512,"line_start":64,"line_end":64,"column_start":13,"column_end":18},"name":"Union","qualname":"::derive::Data::Union","value":"Data::Union(DataUnion)","parent":{"krate":0,"index":4982},"children":[],"decl_id":null,"docs":" A tagged union input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4982},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":321634,"byte_end":321638,"line_start":39,"line_end":39,"column_start":14,"column_end":18},"name":"Data","qualname":"::derive::Data","value":"pub enum Data {\n\n    #[doc = r\" A struct input to a `proc_macro_derive` macro.\"]\n    #[doc = r\"\"]\n    #[doc = r#\" *This type is available if Syn is built with the `\"derive\"`\"#]\n    #[doc = r\" feature.*\"]\n    Struct(DataStruct),\n\n    #[doc = r\" An enum input to a `proc_macro_derive` macro.\"]\n    #[doc = r\"\"]\n    #[doc = r#\" *This type is available if Syn is built with the `\"derive\"`\"#]\n    #[doc = r\" feature.*\"]\n    Enum(DataEnum),\n\n    #[doc = r\" A tagged union input to a `proc_macro_derive` macro.\"]\n    #[doc = r\"\"]\n    #[doc = r#\" *This type is available if Syn is built with the `\"derive\"`\"#]\n    #[doc = r\" feature.*\"]\n    Union(DataUnion),\n}","parent":null,"children":[{"krate":0,"index":4983},{"krate":0,"index":4986},{"krate":0,"index":4989}],"decl_id":null,"docs":" The storage of a struct, enum or union data structure.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4994},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":321825,"byte_end":321835,"line_start":44,"line_end":44,"column_start":20,"column_end":30},"name":"DataStruct","qualname":"::derive::DataStruct","value":"DataStruct { struct_token, fields, semi_token }","parent":null,"children":[{"krate":0,"index":4995},{"krate":0,"index":4996},{"krate":0,"index":4997}],"decl_id":null,"docs":" A struct input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4995},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":321854,"byte_end":321866,"line_start":45,"line_end":45,"column_start":17,"column_end":29},"name":"struct_token","qualname":"::derive::DataStruct::struct_token","value":"token::Struct","parent":{"krate":0,"index":4994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4996},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":321900,"byte_end":321906,"line_start":46,"line_end":46,"column_start":17,"column_end":23},"name":"fields","qualname":"::derive::DataStruct::fields","value":"data::Fields","parent":{"krate":0,"index":4994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4997},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":321932,"byte_end":321942,"line_start":47,"line_end":47,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::derive::DataStruct::semi_token","value":"std::option::Option<token::Semi>","parent":{"krate":0,"index":4994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5000},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":322157,"byte_end":322165,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"DataEnum","qualname":"::derive::DataEnum","value":"DataEnum { enum_token, brace_token, variants }","parent":null,"children":[{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5003}],"decl_id":null,"docs":" An enum input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5001},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":322184,"byte_end":322194,"line_start":55,"line_end":55,"column_start":17,"column_end":27},"name":"enum_token","qualname":"::derive::DataEnum::enum_token","value":"token::Enum","parent":{"krate":0,"index":5000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5002},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":322226,"byte_end":322237,"line_start":56,"line_end":56,"column_start":17,"column_end":28},"name":"brace_token","qualname":"::derive::DataEnum::brace_token","value":"token::Brace","parent":{"krate":0,"index":5000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5003},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":322269,"byte_end":322277,"line_start":57,"line_end":57,"column_start":17,"column_end":25},"name":"variants","qualname":"::derive::DataEnum::variants","value":"punctuated::Punctuated<data::Variant, token::Comma>","parent":{"krate":0,"index":5000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5006},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":322513,"byte_end":322522,"line_start":64,"line_end":64,"column_start":19,"column_end":28},"name":"DataUnion","qualname":"::derive::DataUnion","value":"DataUnion { union_token, fields }","parent":null,"children":[{"krate":0,"index":5007},{"krate":0,"index":5008}],"decl_id":null,"docs":" A tagged union input to a `proc_macro_derive` macro.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5007},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":322541,"byte_end":322552,"line_start":65,"line_end":65,"column_start":17,"column_end":28},"name":"union_token","qualname":"::derive::DataUnion::union_token","value":"token::Union","parent":{"krate":0,"index":5006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5008},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":322585,"byte_end":322591,"line_start":66,"line_end":66,"column_start":17,"column_end":23},"name":"fields","qualname":"::derive::DataUnion::fields","value":"data::FieldsNamed","parent":{"krate":0,"index":5006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5012},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":329680,"byte_end":329683,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"Add","qualname":"::op::BinOp::Add","value":"BinOp::Add(crate::token::Add)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `+` operator (addition)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5015},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":329747,"byte_end":329750,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"name":"Sub","qualname":"::op::BinOp::Sub","value":"BinOp::Sub(crate::token::Sub)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `-` operator (subtraction)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5018},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":329817,"byte_end":329820,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"Mul","qualname":"::op::BinOp::Mul","value":"BinOp::Mul(crate::token::Star)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `*` operator (multiplication)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5021},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":329881,"byte_end":329884,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"Div","qualname":"::op::BinOp::Div","value":"BinOp::Div(crate::token::Div)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `/` operator (division)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5024},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":329944,"byte_end":329947,"line_start":17,"line_end":17,"column_start":9,"column_end":12},"name":"Rem","qualname":"::op::BinOp::Rem","value":"BinOp::Rem(crate::token::Rem)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `%` operator (modulus)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5027},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330012,"byte_end":330015,"line_start":19,"line_end":19,"column_start":9,"column_end":12},"name":"And","qualname":"::op::BinOp::And","value":"BinOp::And(crate::token::AndAnd)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `&&` operator (logical and)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5030},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330080,"byte_end":330082,"line_start":21,"line_end":21,"column_start":9,"column_end":11},"name":"Or","qualname":"::op::BinOp::Or","value":"BinOp::Or(crate::token::OrOr)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `||` operator (logical or)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5033},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330147,"byte_end":330153,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"BitXor","qualname":"::op::BinOp::BitXor","value":"BinOp::BitXor(crate::token::Caret)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `^` operator (bitwise xor)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5036},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330217,"byte_end":330223,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"name":"BitAnd","qualname":"::op::BinOp::BitAnd","value":"BinOp::BitAnd(crate::token::And)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `&` operator (bitwise and)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5039},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330286,"byte_end":330291,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"name":"BitOr","qualname":"::op::BinOp::BitOr","value":"BinOp::BitOr(crate::token::Or)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `|` operator (bitwise or)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5042},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330355,"byte_end":330358,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"name":"Shl","qualname":"::op::BinOp::Shl","value":"BinOp::Shl(crate::token::Shl)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `<<` operator (shift left)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5045},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330424,"byte_end":330427,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"name":"Shr","qualname":"::op::BinOp::Shr","value":"BinOp::Shr(crate::token::Shr)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `>>` operator (shift right)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5048},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330490,"byte_end":330492,"line_start":33,"line_end":33,"column_start":9,"column_end":11},"name":"Eq","qualname":"::op::BinOp::Eq","value":"BinOp::Eq(crate::token::EqEq)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `==` operator (equality)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5051},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330555,"byte_end":330557,"line_start":35,"line_end":35,"column_start":9,"column_end":11},"name":"Lt","qualname":"::op::BinOp::Lt","value":"BinOp::Lt(crate::token::Lt)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `<` operator (less than)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5054},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330632,"byte_end":330634,"line_start":37,"line_end":37,"column_start":9,"column_end":11},"name":"Le","qualname":"::op::BinOp::Le","value":"BinOp::Le(crate::token::Le)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `<=` operator (less than or equal to)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5057},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330701,"byte_end":330703,"line_start":39,"line_end":39,"column_start":9,"column_end":11},"name":"Ne","qualname":"::op::BinOp::Ne","value":"BinOp::Ne(crate::token::Ne)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `!=` operator (not equal to)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5060},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330782,"byte_end":330784,"line_start":41,"line_end":41,"column_start":9,"column_end":11},"name":"Ge","qualname":"::op::BinOp::Ge","value":"BinOp::Ge(crate::token::Ge)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `>=` operator (greater than or equal to)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5063},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330850,"byte_end":330852,"line_start":43,"line_end":43,"column_start":9,"column_end":11},"name":"Gt","qualname":"::op::BinOp::Gt","value":"BinOp::Gt(crate::token::Gt)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `>` operator (greater than)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5066},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330903,"byte_end":330908,"line_start":45,"line_end":45,"column_start":9,"column_end":14},"name":"AddEq","qualname":"::op::BinOp::AddEq","value":"BinOp::AddEq(crate::token::AddEq)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `+=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5069},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":330960,"byte_end":330965,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"SubEq","qualname":"::op::BinOp::SubEq","value":"BinOp::SubEq(crate::token::SubEq)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `-=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5072},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331017,"byte_end":331022,"line_start":49,"line_end":49,"column_start":9,"column_end":14},"name":"MulEq","qualname":"::op::BinOp::MulEq","value":"BinOp::MulEq(crate::token::MulEq)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `*=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5075},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331074,"byte_end":331079,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"name":"DivEq","qualname":"::op::BinOp::DivEq","value":"BinOp::DivEq(crate::token::DivEq)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `/=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5078},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331131,"byte_end":331136,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"RemEq","qualname":"::op::BinOp::RemEq","value":"BinOp::RemEq(crate::token::RemEq)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `%=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5081},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331188,"byte_end":331196,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"name":"BitXorEq","qualname":"::op::BinOp::BitXorEq","value":"BinOp::BitXorEq(crate::token::CaretEq)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `^=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5084},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331248,"byte_end":331256,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"name":"BitAndEq","qualname":"::op::BinOp::BitAndEq","value":"BinOp::BitAndEq(crate::token::AndEq)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `&=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5087},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331308,"byte_end":331315,"line_start":59,"line_end":59,"column_start":9,"column_end":16},"name":"BitOrEq","qualname":"::op::BinOp::BitOrEq","value":"BinOp::BitOrEq(crate::token::OrEq)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `|=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5090},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331368,"byte_end":331373,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"ShlEq","qualname":"::op::BinOp::ShlEq","value":"BinOp::ShlEq(crate::token::ShlEq)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `<<=` operator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5093},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331427,"byte_end":331432,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"ShrEq","qualname":"::op::BinOp::ShrEq","value":"BinOp::ShrEq(crate::token::ShrEq)","parent":{"krate":0,"index":5011},"children":[],"decl_id":null,"docs":" The `>>=` operator\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5011},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":329624,"byte_end":329629,"line_start":7,"line_end":7,"column_start":14,"column_end":19},"name":"BinOp","qualname":"::op::BinOp","value":"pub enum BinOp {\n\n    #[doc = r\" The `+` operator (addition)\"]\n    Add(crate::token::Add),\n\n    #[doc = r\" The `-` operator (subtraction)\"]\n    Sub(crate::token::Sub),\n\n    #[doc = r\" The `*` operator (multiplication)\"]\n    Mul(crate::token::Star),\n\n    #[doc = r\" The `/` operator (division)\"]\n    Div(crate::token::Div),\n\n    #[doc = r\" The `%` operator (modulus)\"]\n    Rem(crate::token::Rem),\n\n    #[doc = r\" The `&&` operator (logical and)\"]\n    And(crate::token::AndAnd),\n\n    #[doc = r\" The `||` operator (logical or)\"]\n    Or(crate::token::OrOr),\n\n    #[doc = r\" The `^` operator (bitwise xor)\"]\n    BitXor(crate::token::Caret),\n\n    #[doc = r\" The `&` operator (bitwise and)\"]\n    BitAnd(crate::token::And),\n\n    #[doc = r\" The `|` operator (bitwise or)\"]\n    BitOr(crate::token::Or),\n\n    #[doc = r\" The `<<` operator (shift left)\"]\n    Shl(crate::token::Shl),\n\n    #[doc = r\" The `>>` operator (shift right)\"]\n    Shr(crate::token::Shr),\n\n    #[doc = r\" The `==` operator (equality)\"]\n    Eq(crate::token::EqEq),\n\n    #[doc = r\" The `<` operator (less than)\"]\n    Lt(crate::token::Lt),\n\n    #[doc = r\" The `<=` operator (less than or equal to)\"]\n    Le(crate::token::Le),\n\n    #[doc = r\" The `!=` operator (not equal to)\"]\n    Ne(crate::token::Ne),\n\n    #[doc = r\" The `>=` operator (greater than or equal to)\"]\n    Ge(crate::token::Ge),\n\n    #[doc = r\" The `>` operator (greater than)\"]\n    Gt(crate::token::Gt),\n\n    #[doc = r\" The `+=` operator\"]\n    AddEq(crate::token::AddEq),\n\n    #[doc = r\" The `-=` operator\"]\n    SubEq(crate::token::SubEq),\n\n    #[doc = r\" The `*=` operator\"]\n    MulEq(crate::token::MulEq),\n\n    #[doc = r\" The `/=` operator\"]\n    DivEq(crate::token::DivEq),\n\n    #[doc = r\" The `%=` operator\"]\n    RemEq(crate::token::RemEq),\n\n    #[doc = r\" The `^=` operator\"]\n    BitXorEq(crate::token::CaretEq),\n\n    #[doc = r\" The `&=` operator\"]\n    BitAndEq(crate::token::AndEq),\n\n    #[doc = r\" The `|=` operator\"]\n    BitOrEq(crate::token::OrEq),\n\n    #[doc = r\" The `<<=` operator\"]\n    ShlEq(crate::token::ShlEq),\n\n    #[doc = r\" The `>>=` operator\"]\n    ShrEq(crate::token::ShrEq),\n}","parent":null,"children":[{"krate":0,"index":5012},{"krate":0,"index":5015},{"krate":0,"index":5018},{"krate":0,"index":5021},{"krate":0,"index":5024},{"krate":0,"index":5027},{"krate":0,"index":5030},{"krate":0,"index":5033},{"krate":0,"index":5036},{"krate":0,"index":5039},{"krate":0,"index":5042},{"krate":0,"index":5045},{"krate":0,"index":5048},{"krate":0,"index":5051},{"krate":0,"index":5054},{"krate":0,"index":5057},{"krate":0,"index":5060},{"krate":0,"index":5063},{"krate":0,"index":5066},{"krate":0,"index":5069},{"krate":0,"index":5072},{"krate":0,"index":5075},{"krate":0,"index":5078},{"krate":0,"index":5081},{"krate":0,"index":5084},{"krate":0,"index":5087},{"krate":0,"index":5090},{"krate":0,"index":5093}],"decl_id":null,"docs":" A binary operator: `+`, `+=`, `&`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5100},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331745,"byte_end":331750,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"name":"Deref","qualname":"::op::UnOp::Deref","value":"UnOp::Deref(crate::token::Star)","parent":{"krate":0,"index":5099},"children":[],"decl_id":null,"docs":" The `*` operator for dereferencing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5103},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331822,"byte_end":331825,"line_start":77,"line_end":77,"column_start":9,"column_end":12},"name":"Not","qualname":"::op::UnOp::Not","value":"UnOp::Not(crate::token::Bang)","parent":{"krate":0,"index":5099},"children":[],"decl_id":null,"docs":" The `!` operator for logical inversion\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5106},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331888,"byte_end":331891,"line_start":79,"line_end":79,"column_start":9,"column_end":12},"name":"Neg","qualname":"::op::UnOp::Neg","value":"UnOp::Neg(crate::token::Sub)","parent":{"krate":0,"index":5099},"children":[],"decl_id":null,"docs":" The `-` operator for negation\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5099},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":331683,"byte_end":331687,"line_start":73,"line_end":73,"column_start":14,"column_end":18},"name":"UnOp","qualname":"::op::UnOp","value":"pub enum UnOp {\n\n    #[doc = r\" The `*` operator for dereferencing\"]\n    Deref(crate::token::Star),\n\n    #[doc = r\" The `!` operator for logical inversion\"]\n    Not(crate::token::Bang),\n\n    #[doc = r\" The `-` operator for negation\"]\n    Neg(crate::token::Sub),\n}","parent":null,"children":[{"krate":0,"index":5100},{"krate":0,"index":5103},{"krate":0,"index":5106}],"decl_id":null,"docs":" A unary operator: `*`, `!`, `-`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5143},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":338603,"byte_end":338608,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"name":"Slice","qualname":"::ty::Type::Slice","value":"Type::Slice(TypeSlice)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" A dynamically sized slice type: `[T]`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5146},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":338891,"byte_end":338896,"line_start":37,"line_end":37,"column_start":13,"column_end":18},"name":"Array","qualname":"::ty::Type::Array","value":"Type::Array(TypeArray)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" A fixed size array type: `[T; n]`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5149},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339254,"byte_end":339257,"line_start":48,"line_end":48,"column_start":13,"column_end":16},"name":"Ptr","qualname":"::ty::Type::Ptr","value":"Type::Ptr(TypePtr)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" A raw pointer type: `*const T` or `*mut T`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5152},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339638,"byte_end":339647,"line_start":59,"line_end":59,"column_start":13,"column_end":22},"name":"Reference","qualname":"::ty::Type::Reference","value":"Type::Reference(TypeReference)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" A reference type: `&'a T` or `&'a mut T`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5155},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340026,"byte_end":340032,"line_start":70,"line_end":70,"column_start":13,"column_end":19},"name":"BareFn","qualname":"::ty::Type::BareFn","value":"Type::BareFn(TypeBareFn)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" A bare function type: `fn(usize) -> bool`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5158},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340579,"byte_end":340584,"line_start":85,"line_end":85,"column_start":13,"column_end":18},"name":"Never","qualname":"::ty::Type::Never","value":"Type::Never(TypeNever)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" The never type: `!`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5161},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340826,"byte_end":340831,"line_start":93,"line_end":93,"column_start":13,"column_end":18},"name":"Tuple","qualname":"::ty::Type::Tuple","value":"Type::Tuple(TypeTuple)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" A tuple type: `(A, B, C, String)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5164},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":341289,"byte_end":341293,"line_start":105,"line_end":105,"column_start":13,"column_end":17},"name":"Path","qualname":"::ty::Type::Path","value":"Type::Path(TypePath)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" A path like `std::slice::Iter`, optionally qualified with a\n self-type as in `<Vec<T> as SomeTrait>::Associated`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5167},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":341625,"byte_end":341636,"line_start":115,"line_end":115,"column_start":13,"column_end":24},"name":"TraitObject","qualname":"::ty::Type::TraitObject","value":"Type::TraitObject(TypeTraitObject)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a\n trait or a lifetime.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5170},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342013,"byte_end":342022,"line_start":125,"line_end":125,"column_start":13,"column_end":22},"name":"ImplTrait","qualname":"::ty::Type::ImplTrait","value":"Type::ImplTrait(TypeImplTrait)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\n a lifetime.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5173},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342350,"byte_end":342355,"line_start":134,"line_end":134,"column_start":13,"column_end":18},"name":"Paren","qualname":"::ty::Type::Paren","value":"Type::Paren(TypeParen)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" A parenthesized type equivalent to the inner type.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5176},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342645,"byte_end":342650,"line_start":143,"line_end":143,"column_start":13,"column_end":18},"name":"Group","qualname":"::ty::Type::Group","value":"Type::Group(TypeGroup)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" A type contained within invisible delimiters.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5179},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342958,"byte_end":342963,"line_start":152,"line_end":152,"column_start":13,"column_end":18},"name":"Infer","qualname":"::ty::Type::Infer","value":"Type::Infer(TypeInfer)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" Indication that a type should be inferred by the compiler: `_`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5182},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":343206,"byte_end":343211,"line_start":160,"line_end":160,"column_start":13,"column_end":18},"name":"Macro","qualname":"::ty::Type::Macro","value":"Type::Macro(TypeMacro)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" A macro in the type position.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5185},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":343455,"byte_end":343463,"line_start":168,"line_end":168,"column_start":13,"column_end":21},"name":"Verbatim","qualname":"::ty::Type::Verbatim","value":"Type::Verbatim(TypeVerbatim)","parent":{"krate":0,"index":5142},"children":[],"decl_id":null,"docs":" Tokens in type position not interpreted by Syn.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5142},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":338415,"byte_end":338419,"line_start":23,"line_end":23,"column_start":14,"column_end":18},"name":"Type","qualname":"::ty::Type","value":"pub enum Type {\n\n    #[doc = r\" A dynamically sized slice type: `[T]`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Slice(TypeSlice),\n\n    #[doc = r\" A fixed size array type: `[T; n]`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Array(TypeArray),\n\n    #[doc = r\" A raw pointer type: `*const T` or `*mut T`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Ptr(TypePtr),\n\n    #[doc = r\" A reference type: `&'a T` or `&'a mut T`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Reference(TypeReference),\n\n    #[doc = r\" A bare function type: `fn(usize) -> bool`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    BareFn(TypeBareFn),\n\n    #[doc = r\" The never type: `!`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Never(TypeNever),\n\n    #[doc = r\" A tuple type: `(A, B, C, String)`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Tuple(TypeTuple),\n\n    #[doc = r\" A path like `std::slice::Iter`, optionally qualified with a\"]\n    #[doc = r\" self-type as in `<Vec<T> as SomeTrait>::Associated`.\"]\n    #[doc = r\"\"]\n    #[doc = r\" Type arguments are stored in the Path itself.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Path(TypePath),\n\n    #[doc =\n      r\" A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a\"]\n    #[doc = r\" trait or a lifetime.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    TraitObject(TypeTraitObject),\n\n    #[doc =\n      r\" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\"]\n    #[doc = r\" a lifetime.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    ImplTrait(TypeImplTrait),\n\n    #[doc = r\" A parenthesized type equivalent to the inner type.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Paren(TypeParen),\n\n    #[doc = r\" A type contained within invisible delimiters.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Group(TypeGroup),\n\n    #[doc =\n      r\" Indication that a type should be inferred by the compiler: `_`.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Infer(TypeInfer),\n\n    #[doc = r\" A macro in the type position.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Macro(TypeMacro),\n\n    #[doc = r\" Tokens in type position not interpreted by Syn.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r#\" *This type is available if Syn is built with the `\"derive\"` or\"#]\n    #[doc = r#\" `\"full\"` feature.*\"#]\n    Verbatim(TypeVerbatim),\n}","parent":null,"children":[{"krate":0,"index":5143},{"krate":0,"index":5146},{"krate":0,"index":5149},{"krate":0,"index":5152},{"krate":0,"index":5155},{"krate":0,"index":5158},{"krate":0,"index":5161},{"krate":0,"index":5164},{"krate":0,"index":5167},{"krate":0,"index":5170},{"krate":0,"index":5173},{"krate":0,"index":5176},{"krate":0,"index":5179},{"krate":0,"index":5182},{"krate":0,"index":5185}],"decl_id":null,"docs":" The possible types that a Rust value could have.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5190},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":338609,"byte_end":338618,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"name":"TypeSlice","qualname":"::ty::TypeSlice","value":"TypeSlice { bracket_token, elem }","parent":null,"children":[{"krate":0,"index":5191},{"krate":0,"index":5192}],"decl_id":null,"docs":" A dynamically sized slice type: `[T]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5191},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":338637,"byte_end":338650,"line_start":29,"line_end":29,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::ty::TypeSlice::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":5190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5192},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":338684,"byte_end":338688,"line_start":30,"line_end":30,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeSlice::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":5190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5195},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":338897,"byte_end":338906,"line_start":37,"line_end":37,"column_start":19,"column_end":28},"name":"TypeArray","qualname":"::ty::TypeArray","value":"TypeArray { bracket_token, elem, semi_token, len }","parent":null,"children":[{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":5198},{"krate":0,"index":5199}],"decl_id":null,"docs":" A fixed size array type: `[T; n]`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5196},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":338925,"byte_end":338938,"line_start":38,"line_end":38,"column_start":17,"column_end":30},"name":"bracket_token","qualname":"::ty::TypeArray::bracket_token","value":"token::Bracket","parent":{"krate":0,"index":5195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5197},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":338972,"byte_end":338976,"line_start":39,"line_end":39,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeArray::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":5195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5198},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339005,"byte_end":339015,"line_start":40,"line_end":40,"column_start":17,"column_end":27},"name":"semi_token","qualname":"::ty::TypeArray::semi_token","value":"token::Semi","parent":{"krate":0,"index":5195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5199},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339044,"byte_end":339047,"line_start":41,"line_end":41,"column_start":17,"column_end":20},"name":"len","qualname":"::ty::TypeArray::len","value":"expr::Expr","parent":{"krate":0,"index":5195},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5202},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339258,"byte_end":339265,"line_start":48,"line_end":48,"column_start":17,"column_end":24},"name":"TypePtr","qualname":"::ty::TypePtr","value":"TypePtr { star_token, const_token, mutability, elem }","parent":null,"children":[{"krate":0,"index":5203},{"krate":0,"index":5204},{"krate":0,"index":5205},{"krate":0,"index":5206}],"decl_id":null,"docs":" A raw pointer type: `*const T` or `*mut T`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5203},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339284,"byte_end":339294,"line_start":49,"line_end":49,"column_start":17,"column_end":27},"name":"star_token","qualname":"::ty::TypePtr::star_token","value":"token::Star","parent":{"krate":0,"index":5202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5204},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339323,"byte_end":339334,"line_start":50,"line_end":50,"column_start":17,"column_end":28},"name":"const_token","qualname":"::ty::TypePtr::const_token","value":"std::option::Option<token::Const>","parent":{"krate":0,"index":5202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5205},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339375,"byte_end":339385,"line_start":51,"line_end":51,"column_start":17,"column_end":27},"name":"mutability","qualname":"::ty::TypePtr::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":5202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5206},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339424,"byte_end":339428,"line_start":52,"line_end":52,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypePtr::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":5202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5209},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339648,"byte_end":339661,"line_start":59,"line_end":59,"column_start":23,"column_end":36},"name":"TypeReference","qualname":"::ty::TypeReference","value":"TypeReference { and_token, lifetime, mutability, elem }","parent":null,"children":[{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5212},{"krate":0,"index":5213}],"decl_id":null,"docs":" A reference type: `&'a T` or `&'a mut T`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5210},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339680,"byte_end":339689,"line_start":60,"line_end":60,"column_start":17,"column_end":26},"name":"and_token","qualname":"::ty::TypeReference::and_token","value":"token::And","parent":{"krate":0,"index":5209},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5211},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339718,"byte_end":339726,"line_start":61,"line_end":61,"column_start":17,"column_end":25},"name":"lifetime","qualname":"::ty::TypeReference::lifetime","value":"std::option::Option<lifetime::Lifetime>","parent":{"krate":0,"index":5209},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5212},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339762,"byte_end":339772,"line_start":62,"line_end":62,"column_start":17,"column_end":27},"name":"mutability","qualname":"::ty::TypeReference::mutability","value":"std::option::Option<token::Mut>","parent":{"krate":0,"index":5209},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5213},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":339811,"byte_end":339815,"line_start":63,"line_end":63,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeReference::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":5209},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5216},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340033,"byte_end":340043,"line_start":70,"line_end":70,"column_start":20,"column_end":30},"name":"TypeBareFn","qualname":"::ty::TypeBareFn","value":"TypeBareFn { lifetimes, unsafety, abi, fn_token, paren_token, inputs, variadic, output }","parent":null,"children":[{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224}],"decl_id":null,"docs":" A bare function type: `fn(usize) -> bool`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5217},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340062,"byte_end":340071,"line_start":71,"line_end":71,"column_start":17,"column_end":26},"name":"lifetimes","qualname":"::ty::TypeBareFn::lifetimes","value":"std::option::Option<generics::BoundLifetimes>","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5218},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340113,"byte_end":340121,"line_start":72,"line_end":72,"column_start":17,"column_end":25},"name":"unsafety","qualname":"::ty::TypeBareFn::unsafety","value":"std::option::Option<token::Unsafe>","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5219},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340163,"byte_end":340166,"line_start":73,"line_end":73,"column_start":17,"column_end":20},"name":"abi","qualname":"::ty::TypeBareFn::abi","value":"std::option::Option<ty::Abi>","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5220},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340197,"byte_end":340205,"line_start":74,"line_end":74,"column_start":17,"column_end":25},"name":"fn_token","qualname":"::ty::TypeBareFn::fn_token","value":"token::Fn","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5221},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340235,"byte_end":340246,"line_start":75,"line_end":75,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::ty::TypeBareFn::paren_token","value":"token::Paren","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5222},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340278,"byte_end":340284,"line_start":76,"line_end":76,"column_start":17,"column_end":23},"name":"inputs","qualname":"::ty::TypeBareFn::inputs","value":"punctuated::Punctuated<ty::BareFnArg, token::Comma>","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5223},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340336,"byte_end":340344,"line_start":77,"line_end":77,"column_start":17,"column_end":25},"name":"variadic","qualname":"::ty::TypeBareFn::variadic","value":"std::option::Option<token::Dot3>","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340383,"byte_end":340389,"line_start":78,"line_end":78,"column_start":17,"column_end":23},"name":"output","qualname":"::ty::TypeBareFn::output","value":"ty::ReturnType","parent":{"krate":0,"index":5216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5227},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340585,"byte_end":340594,"line_start":85,"line_end":85,"column_start":19,"column_end":28},"name":"TypeNever","qualname":"::ty::TypeNever","value":"TypeNever { bang_token }","parent":null,"children":[{"krate":0,"index":5228}],"decl_id":null,"docs":" The never type: `!`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340613,"byte_end":340623,"line_start":86,"line_end":86,"column_start":17,"column_end":27},"name":"bang_token","qualname":"::ty::TypeNever::bang_token","value":"token::Bang","parent":{"krate":0,"index":5227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5231},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340832,"byte_end":340841,"line_start":93,"line_end":93,"column_start":19,"column_end":28},"name":"TypeTuple","qualname":"::ty::TypeTuple","value":"TypeTuple { paren_token, elems }","parent":null,"children":[{"krate":0,"index":5232},{"krate":0,"index":5233}],"decl_id":null,"docs":" A tuple type: `(A, B, C, String)`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5232},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340860,"byte_end":340871,"line_start":94,"line_end":94,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::ty::TypeTuple::paren_token","value":"token::Paren","parent":{"krate":0,"index":5231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5233},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":340903,"byte_end":340908,"line_start":95,"line_end":95,"column_start":17,"column_end":22},"name":"elems","qualname":"::ty::TypeTuple::elems","value":"punctuated::Punctuated<ty::Type, token::Comma>","parent":{"krate":0,"index":5231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5236},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":341294,"byte_end":341302,"line_start":105,"line_end":105,"column_start":18,"column_end":26},"name":"TypePath","qualname":"::ty::TypePath","value":"TypePath { qself, path }","parent":null,"children":[{"krate":0,"index":5237},{"krate":0,"index":5238}],"decl_id":null,"docs":" A path like `std::slice::Iter`, optionally qualified with a\n self-type as in `<Vec<T> as SomeTrait>::Associated`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5237},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":341321,"byte_end":341326,"line_start":106,"line_end":106,"column_start":17,"column_end":22},"name":"qself","qualname":"::ty::TypePath::qself","value":"std::option::Option<path::QSelf>","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":341359,"byte_end":341363,"line_start":107,"line_end":107,"column_start":17,"column_end":21},"name":"path","qualname":"::ty::TypePath::path","value":"path::Path","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5241},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":341637,"byte_end":341652,"line_start":115,"line_end":115,"column_start":25,"column_end":40},"name":"TypeTraitObject","qualname":"::ty::TypeTraitObject","value":"TypeTraitObject { dyn_token, bounds }","parent":null,"children":[{"krate":0,"index":5242},{"krate":0,"index":5243}],"decl_id":null,"docs":" A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a\n trait or a lifetime.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5242},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":341671,"byte_end":341680,"line_start":116,"line_end":116,"column_start":17,"column_end":26},"name":"dyn_token","qualname":"::ty::TypeTraitObject::dyn_token","value":"std::option::Option<token::Dyn>","parent":{"krate":0,"index":5241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5243},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":341719,"byte_end":341725,"line_start":117,"line_end":117,"column_start":17,"column_end":23},"name":"bounds","qualname":"::ty::TypeTraitObject::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":5241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5246},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342023,"byte_end":342036,"line_start":125,"line_end":125,"column_start":23,"column_end":36},"name":"TypeImplTrait","qualname":"::ty::TypeImplTrait","value":"TypeImplTrait { impl_token, bounds }","parent":null,"children":[{"krate":0,"index":5247},{"krate":0,"index":5248}],"decl_id":null,"docs":" An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or\n a lifetime.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5247},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342055,"byte_end":342065,"line_start":126,"line_end":126,"column_start":17,"column_end":27},"name":"impl_token","qualname":"::ty::TypeImplTrait::impl_token","value":"token::Impl","parent":{"krate":0,"index":5246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5248},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342097,"byte_end":342103,"line_start":127,"line_end":127,"column_start":17,"column_end":23},"name":"bounds","qualname":"::ty::TypeImplTrait::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":5246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5251},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342356,"byte_end":342365,"line_start":134,"line_end":134,"column_start":19,"column_end":28},"name":"TypeParen","qualname":"::ty::TypeParen","value":"TypeParen { paren_token, elem }","parent":null,"children":[{"krate":0,"index":5252},{"krate":0,"index":5253}],"decl_id":null,"docs":" A parenthesized type equivalent to the inner type.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5252},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342384,"byte_end":342395,"line_start":135,"line_end":135,"column_start":17,"column_end":28},"name":"paren_token","qualname":"::ty::TypeParen::paren_token","value":"token::Paren","parent":{"krate":0,"index":5251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5253},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342427,"byte_end":342431,"line_start":136,"line_end":136,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeParen::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":5251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5256},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342651,"byte_end":342660,"line_start":143,"line_end":143,"column_start":19,"column_end":28},"name":"TypeGroup","qualname":"::ty::TypeGroup","value":"TypeGroup { group_token, elem }","parent":null,"children":[{"krate":0,"index":5257},{"krate":0,"index":5258}],"decl_id":null,"docs":" A type contained within invisible delimiters.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5257},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342679,"byte_end":342690,"line_start":144,"line_end":144,"column_start":17,"column_end":28},"name":"group_token","qualname":"::ty::TypeGroup::group_token","value":"token::Group","parent":{"krate":0,"index":5256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5258},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342722,"byte_end":342726,"line_start":145,"line_end":145,"column_start":17,"column_end":21},"name":"elem","qualname":"::ty::TypeGroup::elem","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":5256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5261},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342964,"byte_end":342973,"line_start":152,"line_end":152,"column_start":19,"column_end":28},"name":"TypeInfer","qualname":"::ty::TypeInfer","value":"TypeInfer { underscore_token }","parent":null,"children":[{"krate":0,"index":5262}],"decl_id":null,"docs":" Indication that a type should be inferred by the compiler: `_`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5262},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":342992,"byte_end":343008,"line_start":153,"line_end":153,"column_start":17,"column_end":33},"name":"underscore_token","qualname":"::ty::TypeInfer::underscore_token","value":"token::Underscore","parent":{"krate":0,"index":5261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5265},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":343212,"byte_end":343221,"line_start":160,"line_end":160,"column_start":19,"column_end":28},"name":"TypeMacro","qualname":"::ty::TypeMacro","value":"TypeMacro { mac }","parent":null,"children":[{"krate":0,"index":5266}],"decl_id":null,"docs":" A macro in the type position.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5266},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":343240,"byte_end":343243,"line_start":161,"line_end":161,"column_start":17,"column_end":20},"name":"mac","qualname":"::ty::TypeMacro::mac","value":"mac::Macro","parent":{"krate":0,"index":5265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5269},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":343464,"byte_end":343476,"line_start":168,"line_end":168,"column_start":22,"column_end":34},"name":"TypeVerbatim","qualname":"::ty::TypeVerbatim","value":"TypeVerbatim { tts }","parent":null,"children":[{"krate":0,"index":5270}],"decl_id":null,"docs":" Tokens in type position not interpreted by Syn.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5270},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":343516,"byte_end":343519,"line_start":169,"line_end":169,"column_start":17,"column_end":20},"name":"tts","qualname":"::ty::TypeVerbatim::tts","value":"proc_macro2::TokenStream","parent":{"krate":0,"index":5269},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5275},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":344190,"byte_end":344193,"line_start":199,"line_end":199,"column_start":16,"column_end":19},"name":"Abi","qualname":"::ty::Abi","value":"Abi { extern_token, name }","parent":null,"children":[{"krate":0,"index":5276},{"krate":0,"index":5277}],"decl_id":null,"docs":" The binary interface of a function: `extern \"C\"`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":344208,"byte_end":344220,"line_start":200,"line_end":200,"column_start":13,"column_end":25},"name":"extern_token","qualname":"::ty::Abi::extern_token","value":"token::Extern","parent":{"krate":0,"index":5275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5277},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":344250,"byte_end":344254,"line_start":201,"line_end":201,"column_start":13,"column_end":17},"name":"name","qualname":"::ty::Abi::name","value":"std::option::Option<lit::LitStr>","parent":{"krate":0,"index":5275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5280},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":344492,"byte_end":344501,"line_start":210,"line_end":210,"column_start":16,"column_end":25},"name":"BareFnArg","qualname":"::ty::BareFnArg","value":"BareFnArg { name, ty }","parent":null,"children":[{"krate":0,"index":5281},{"krate":0,"index":5282}],"decl_id":null,"docs":" An argument in a function type: the `usize` in `fn(usize) -> bool`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5281},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":344516,"byte_end":344520,"line_start":211,"line_end":211,"column_start":13,"column_end":17},"name":"name","qualname":"::ty::BareFnArg::name","value":"std::option::Option<(ty::BareFnArgName, token::Colon)>","parent":{"krate":0,"index":5280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5282},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":344570,"byte_end":344572,"line_start":212,"line_end":212,"column_start":13,"column_end":15},"name":"ty","qualname":"::ty::BareFnArg::ty","value":"ty::Type","parent":{"krate":0,"index":5280},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5286},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":344854,"byte_end":344859,"line_start":223,"line_end":223,"column_start":9,"column_end":14},"name":"Named","qualname":"::ty::BareFnArgName::Named","value":"BareFnArgName::Named(Ident)","parent":{"krate":0,"index":5285},"children":[],"decl_id":null,"docs":" Argument given a name.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5289},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":344933,"byte_end":344937,"line_start":225,"line_end":225,"column_start":9,"column_end":13},"name":"Wild","qualname":"::ty::BareFnArgName::Wild","value":"BareFnArgName::Wild(crate::token::Underscore)","parent":{"krate":0,"index":5285},"children":[],"decl_id":null,"docs":" Argument not given a name, matched with `_`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5285},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":344795,"byte_end":344808,"line_start":221,"line_end":221,"column_start":14,"column_end":27},"name":"BareFnArgName","qualname":"::ty::BareFnArgName","value":"pub enum BareFnArgName {\n\n    #[doc = r\" Argument given a name.\"]\n    Named(Ident),\n\n    #[doc = r\" Argument not given a name, matched with `_`.\"]\n    Wild(crate::token::Underscore),\n}","parent":null,"children":[{"krate":0,"index":5286},{"krate":0,"index":5289}],"decl_id":null,"docs":" Name of an argument in a function type: the `n` in `fn(n: usize)`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5295},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345288,"byte_end":345295,"line_start":238,"line_end":238,"column_start":9,"column_end":16},"name":"Default","qualname":"::ty::ReturnType::Default","value":"ReturnType::Default","parent":{"krate":0,"index":5294},"children":[],"decl_id":null,"docs":" Return type is not specified.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5297},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345348,"byte_end":345352,"line_start":240,"line_end":240,"column_start":9,"column_end":13},"name":"Type","qualname":"::ty::ReturnType::Type","value":"ReturnType::Type(crate::token::RArrow, Box<Type>)","parent":{"krate":0,"index":5294},"children":[],"decl_id":null,"docs":" A particular type is returned.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5294},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345135,"byte_end":345145,"line_start":234,"line_end":234,"column_start":14,"column_end":24},"name":"ReturnType","qualname":"::ty::ReturnType","value":"pub enum ReturnType {\n\n    #[doc = r\" Return type is not specified.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" Functions default to `()` and closures default to type inference.\"]\n    Default,\n\n    #[doc = r\" A particular type is returned.\"]\n    Type(crate::token::RArrow, Box<Type>),\n}","parent":null,"children":[{"krate":0,"index":5295},{"krate":0,"index":5297}],"decl_id":null,"docs":" Return type of a function signature.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345956,"byte_end":345968,"line_start":263,"line_end":263,"column_start":16,"column_end":28},"name":"without_plus","qualname":"<Type>::without_plus","value":"pub fn without_plus(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" In some positions, types may not contain the `+` character, to\n disambiguate them. For example in the expression `1 as T`, T may not\n contain a `+` character.","sig":null,"attributes":[{"value":"/ In some positions, types may not contain the `+` character, to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345667,"byte_end":345733,"line_start":258,"line_end":258,"column_start":9,"column_end":75}},{"value":"/ disambiguate them. For example in the expression `1 as T`, T may not","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345742,"byte_end":345814,"line_start":259,"line_end":259,"column_start":9,"column_end":81}},{"value":"/ contain a `+` character.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345823,"byte_end":345851,"line_start":260,"line_end":260,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345860,"byte_end":345863,"line_start":261,"line_end":261,"column_start":9,"column_end":12}},{"value":"/ This parser does not allow a `+`, while the default parser does.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345872,"byte_end":345940,"line_start":262,"line_end":262,"column_start":9,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":360603,"byte_end":360615,"line_start":652,"line_end":652,"column_start":16,"column_end":28},"name":"without_plus","qualname":"<ReturnType>::without_plus","value":"pub fn without_plus(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":360718,"byte_end":360723,"line_start":656,"line_end":656,"column_start":16,"column_end":21},"name":"parse","qualname":"<ReturnType>::parse","value":"pub fn parse(ParseStream, bool) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":361640,"byte_end":361652,"line_start":689,"line_end":689,"column_start":16,"column_end":28},"name":"without_plus","qualname":"<TypeTraitObject>::without_plus","value":"pub fn without_plus(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":361826,"byte_end":361831,"line_start":694,"line_end":694,"column_start":16,"column_end":21},"name":"parse","qualname":"<TypeTraitObject>::parse","value":"pub fn parse(ParseStream, bool) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5303},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":371426,"byte_end":371430,"line_start":9,"line_end":9,"column_start":16,"column_end":20},"name":"Path","qualname":"::path::Path","value":"Path { leading_colon, segments }","parent":null,"children":[{"krate":0,"index":5304},{"krate":0,"index":5305}],"decl_id":null,"docs":" A path at which a named item is exported: `std::collections::HashMap`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5304},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":371445,"byte_end":371458,"line_start":10,"line_end":10,"column_start":13,"column_end":26},"name":"leading_colon","qualname":"::path::Path::leading_colon","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":5303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5305},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":371492,"byte_end":371500,"line_start":11,"line_end":11,"column_start":13,"column_end":21},"name":"segments","qualname":"::path::Path::segments","value":"punctuated::Punctuated<path::PathSegment, token::Colon2>","parent":{"krate":0,"index":5303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5308},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":372041,"byte_end":372052,"line_start":34,"line_end":34,"column_start":16,"column_end":27},"name":"PathSegment","qualname":"::path::PathSegment","value":"PathSegment { ident, arguments }","parent":null,"children":[{"krate":0,"index":5309},{"krate":0,"index":5310}],"decl_id":null,"docs":" A segment of a path together with any path arguments on that segment.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5309},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":372067,"byte_end":372072,"line_start":35,"line_end":35,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::PathSegment::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":5308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5310},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":372093,"byte_end":372102,"line_start":36,"line_end":36,"column_start":13,"column_end":22},"name":"arguments","qualname":"::path::PathSegment::arguments","value":"path::PathArguments","parent":{"krate":0,"index":5308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5314},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":372745,"byte_end":372749,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"name":"None","qualname":"::path::PathArguments::None","value":"PathArguments::None","parent":{"krate":0,"index":5313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5316},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":372815,"byte_end":372829,"line_start":68,"line_end":68,"column_start":9,"column_end":23},"name":"AngleBracketed","qualname":"::path::PathArguments::AngleBracketed","value":"PathArguments::AngleBracketed(AngleBracketedGenericArguments)","parent":{"krate":0,"index":5313},"children":[],"decl_id":null,"docs":" The `<'a, T>` in `std::slice::iter<'a, T>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5319},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":372921,"byte_end":372934,"line_start":70,"line_end":70,"column_start":9,"column_end":22},"name":"Parenthesized","qualname":"::path::PathArguments::Parenthesized","value":"PathArguments::Parenthesized(ParenthesizedGenericArguments)","parent":{"krate":0,"index":5313},"children":[],"decl_id":null,"docs":" The `(A, B) -> C` in `Fn(A, B) -> C`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5313},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":372721,"byte_end":372734,"line_start":65,"line_end":65,"column_start":14,"column_end":27},"name":"PathArguments","qualname":"::path::PathArguments","value":"pub enum PathArguments {\n    None,\n\n    #[doc = r\" The `<'a, T>` in `std::slice::iter<'a, T>`.\"]\n    AngleBracketed(AngleBracketedGenericArguments),\n\n    #[doc = r\" The `(A, B) -> C` in `Fn(A, B) -> C`.\"]\n    Parenthesized(ParenthesizedGenericArguments),\n}","parent":null,"children":[{"krate":0,"index":5314},{"krate":0,"index":5316},{"krate":0,"index":5319}],"decl_id":null,"docs":" Angle bracketed or parenthesized arguments of a path segment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":373105,"byte_end":373113,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<PathArguments>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5325},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":373848,"byte_end":373856,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"name":"Lifetime","qualname":"::path::GenericArgument::Lifetime","value":"GenericArgument::Lifetime(Lifetime)","parent":{"krate":0,"index":5324},"children":[],"decl_id":null,"docs":" A lifetime argument.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5328},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":373905,"byte_end":373909,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"name":"Type","qualname":"::path::GenericArgument::Type","value":"GenericArgument::Type(Type)","parent":{"krate":0,"index":5324},"children":[],"decl_id":null,"docs":" A type argument.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5331},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":374046,"byte_end":374053,"line_start":110,"line_end":110,"column_start":9,"column_end":16},"name":"Binding","qualname":"::path::GenericArgument::Binding","value":"GenericArgument::Binding(Binding)","parent":{"krate":0,"index":5324},"children":[],"decl_id":null,"docs":" A binding (equality constraint) on an associated type: the `Item =\n u8` in `Iterator<Item = u8>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5334},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":374137,"byte_end":374147,"line_start":112,"line_end":112,"column_start":9,"column_end":19},"name":"Constraint","qualname":"::path::GenericArgument::Constraint","value":"GenericArgument::Constraint(Constraint)","parent":{"krate":0,"index":5324},"children":[],"decl_id":null,"docs":" An associated type bound: `Iterator<Item: Display>`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5337},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":374371,"byte_end":374376,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"name":"Const","qualname":"::path::GenericArgument::Const","value":"GenericArgument::Const(Expr)","parent":{"krate":0,"index":5324},"children":[],"decl_id":null,"docs":" A const expression. Must be inside of a block.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5324},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":373789,"byte_end":373804,"line_start":103,"line_end":103,"column_start":14,"column_end":29},"name":"GenericArgument","qualname":"::path::GenericArgument","value":"pub enum GenericArgument {\n\n    #[doc = r\" A lifetime argument.\"]\n    Lifetime(Lifetime),\n\n    #[doc = r\" A type argument.\"]\n    Type(Type),\n\n    #[doc =\n      r\" A binding (equality constraint) on an associated type: the `Item =\"]\n    #[doc = r\" u8` in `Iterator<Item = u8>`.\"]\n    Binding(Binding),\n\n    #[doc = r\" An associated type bound: `Iterator<Item: Display>`.\"]\n    Constraint(Constraint),\n\n    #[doc = r\" A const expression. Must be inside of a block.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" NOTE: Identity expressions are represented as Type arguments, as\"]\n    #[doc = r\" they are indistinguishable syntactically.\"]\n    Const(Expr),\n}","parent":null,"children":[{"krate":0,"index":5325},{"krate":0,"index":5328},{"krate":0,"index":5331},{"krate":0,"index":5334},{"krate":0,"index":5337}],"decl_id":null,"docs":" An individual generic argument, like `'a`, `T`, or `Item = T`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5342},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":374622,"byte_end":374652,"line_start":127,"line_end":127,"column_start":16,"column_end":46},"name":"AngleBracketedGenericArguments","qualname":"::path::AngleBracketedGenericArguments","value":"AngleBracketedGenericArguments { colon2_token, lt_token, args, gt_token }","parent":null,"children":[{"krate":0,"index":5343},{"krate":0,"index":5344},{"krate":0,"index":5345},{"krate":0,"index":5346}],"decl_id":null,"docs":" Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K,\n V>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5343},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":374667,"byte_end":374679,"line_start":128,"line_end":128,"column_start":13,"column_end":25},"name":"colon2_token","qualname":"::path::AngleBracketedGenericArguments::colon2_token","value":"std::option::Option<token::Colon2>","parent":{"krate":0,"index":5342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5344},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":374713,"byte_end":374721,"line_start":129,"line_end":129,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::path::AngleBracketedGenericArguments::lt_token","value":"token::Lt","parent":{"krate":0,"index":5342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5345},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":374746,"byte_end":374750,"line_start":130,"line_end":130,"column_start":13,"column_end":17},"name":"args","qualname":"::path::AngleBracketedGenericArguments::args","value":"punctuated::Punctuated<path::GenericArgument, token::Comma>","parent":{"krate":0,"index":5342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5346},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":374804,"byte_end":374812,"line_start":131,"line_end":131,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::path::AngleBracketedGenericArguments::gt_token","value":"token::Gt","parent":{"krate":0,"index":5342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5349},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375045,"byte_end":375052,"line_start":140,"line_end":140,"column_start":16,"column_end":23},"name":"Binding","qualname":"::path::Binding","value":"Binding { ident, eq_token, ty }","parent":null,"children":[{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5352}],"decl_id":null,"docs":" A binding (equality constraint) on an associated type: `Item = u8`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5350},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375067,"byte_end":375072,"line_start":141,"line_end":141,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::Binding::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":5349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5351},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375093,"byte_end":375101,"line_start":142,"line_end":142,"column_start":13,"column_end":21},"name":"eq_token","qualname":"::path::Binding::eq_token","value":"token::Eq","parent":{"krate":0,"index":5349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5352},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375126,"byte_end":375128,"line_start":143,"line_end":143,"column_start":13,"column_end":15},"name":"ty","qualname":"::path::Binding::ty","value":"ty::Type","parent":{"krate":0,"index":5349},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5355},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375341,"byte_end":375351,"line_start":152,"line_end":152,"column_start":16,"column_end":26},"name":"Constraint","qualname":"::path::Constraint","value":"Constraint { ident, colon_token, bounds }","parent":null,"children":[{"krate":0,"index":5356},{"krate":0,"index":5357},{"krate":0,"index":5358}],"decl_id":null,"docs":" An associated type bound: `Iterator<Item: Display>`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5356},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375366,"byte_end":375371,"line_start":153,"line_end":153,"column_start":13,"column_end":18},"name":"ident","qualname":"::path::Constraint::ident","value":"proc_macro2::Ident","parent":{"krate":0,"index":5355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5357},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375392,"byte_end":375403,"line_start":154,"line_end":154,"column_start":13,"column_end":24},"name":"colon_token","qualname":"::path::Constraint::colon_token","value":"token::Colon","parent":{"krate":0,"index":5355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5358},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375428,"byte_end":375434,"line_start":155,"line_end":155,"column_start":13,"column_end":19},"name":"bounds","qualname":"::path::Constraint::bounds","value":"punctuated::Punctuated<generics::TypeParamBound, token::Add>","parent":{"krate":0,"index":5355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5361},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375710,"byte_end":375739,"line_start":165,"line_end":165,"column_start":16,"column_end":45},"name":"ParenthesizedGenericArguments","qualname":"::path::ParenthesizedGenericArguments","value":"ParenthesizedGenericArguments { paren_token, inputs, output }","parent":null,"children":[{"krate":0,"index":5362},{"krate":0,"index":5363},{"krate":0,"index":5364}],"decl_id":null,"docs":" Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) ->\n C`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5362},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375754,"byte_end":375765,"line_start":166,"line_end":166,"column_start":13,"column_end":24},"name":"paren_token","qualname":"::path::ParenthesizedGenericArguments::paren_token","value":"token::Paren","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5363},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375814,"byte_end":375820,"line_start":168,"line_end":168,"column_start":13,"column_end":19},"name":"inputs","qualname":"::path::ParenthesizedGenericArguments::inputs","value":"punctuated::Punctuated<ty::Type, token::Comma>","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":" `(A, B)`\n","sig":null,"attributes":[{"value":"/ `(A, B)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375789,"byte_end":375801,"line_start":167,"line_end":167,"column_start":9,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":5364},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375879,"byte_end":375885,"line_start":170,"line_end":170,"column_start":13,"column_end":19},"name":"output","qualname":"::path::ParenthesizedGenericArguments::output","value":"ty::ReturnType","parent":{"krate":0,"index":5361},"children":[],"decl_id":null,"docs":" `C`\n","sig":null,"attributes":[{"value":"/ `C`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":375859,"byte_end":375866,"line_start":169,"line_end":169,"column_start":9,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":5367},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":376592,"byte_end":376597,"line_start":194,"line_end":194,"column_start":16,"column_end":21},"name":"QSelf","qualname":"::path::QSelf","value":"QSelf { lt_token, ty, position, as_token, gt_token }","parent":null,"children":[{"krate":0,"index":5368},{"krate":0,"index":5369},{"krate":0,"index":5370},{"krate":0,"index":5371},{"krate":0,"index":5372}],"decl_id":null,"docs":" The explicit Self type in a qualified path: the `T` in `<T as\n Display>::fmt`.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5368},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":376612,"byte_end":376620,"line_start":195,"line_end":195,"column_start":13,"column_end":21},"name":"lt_token","qualname":"::path::QSelf::lt_token","value":"token::Lt","parent":{"krate":0,"index":5367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5369},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":376645,"byte_end":376647,"line_start":196,"line_end":196,"column_start":13,"column_end":15},"name":"ty","qualname":"::path::QSelf::ty","value":"std::boxed::Box<ty::Type>","parent":{"krate":0,"index":5367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5370},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":376672,"byte_end":376680,"line_start":197,"line_end":197,"column_start":13,"column_end":21},"name":"position","qualname":"::path::QSelf::position","value":"usize","parent":{"krate":0,"index":5367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5371},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":376701,"byte_end":376709,"line_start":198,"line_end":198,"column_start":13,"column_end":21},"name":"as_token","qualname":"::path::QSelf::as_token","value":"std::option::Option<token::As>","parent":{"krate":0,"index":5367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5372},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":376743,"byte_end":376751,"line_start":199,"line_end":199,"column_start":13,"column_end":21},"name":"gt_token","qualname":"::path::QSelf::gt_token","value":"token::Gt","parent":{"krate":0,"index":5367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382981,"byte_end":382996,"line_start":392,"line_end":392,"column_start":16,"column_end":31},"name":"parse_mod_style","qualname":"<Path>::parse_mod_style","value":"pub fn parse_mod_style(ParseStream) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Path` containing no path arguments on any of its segments.","sig":null,"attributes":[{"value":"/ Parse a `Path` containing no path arguments on any of its segments.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":381833,"byte_end":381904,"line_start":359,"line_end":359,"column_start":9,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":381913,"byte_end":381916,"line_start":360,"line_end":360,"column_start":9,"column_end":12}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":381925,"byte_end":381993,"line_start":361,"line_end":361,"column_start":9,"column_end":77}},{"value":"/ feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382002,"byte_end":382015,"line_start":362,"line_end":362,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382024,"byte_end":382027,"line_start":363,"line_end":363,"column_start":9,"column_end":12}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382036,"byte_end":382049,"line_start":364,"line_end":364,"column_start":9,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382058,"byte_end":382061,"line_start":365,"line_end":365,"column_start":9,"column_end":12}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382070,"byte_end":382088,"line_start":366,"line_end":366,"column_start":9,"column_end":27}},{"value":"/ use syn::{Path, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382097,"byte_end":382132,"line_start":367,"line_end":367,"column_start":9,"column_end":44}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382141,"byte_end":382182,"line_start":368,"line_end":368,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382191,"byte_end":382194,"line_start":369,"line_end":369,"column_start":9,"column_end":12}},{"value":"/ // A simplified single `use` statement like:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382203,"byte_end":382251,"line_start":370,"line_end":370,"column_start":9,"column_end":57}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382260,"byte_end":382266,"line_start":371,"line_end":371,"column_start":9,"column_end":15}},{"value":"/ //     use std::collections::HashMap;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382275,"byte_end":382316,"line_start":372,"line_end":372,"column_start":9,"column_end":50}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382325,"byte_end":382331,"line_start":373,"line_end":373,"column_start":9,"column_end":15}},{"value":"/ // Note that generic parameters are not allowed in a `use` statement","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382340,"byte_end":382412,"line_start":374,"line_end":374,"column_start":9,"column_end":81}},{"value":"/ // so the following must not be accepted.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382421,"byte_end":382466,"line_start":375,"line_end":375,"column_start":9,"column_end":54}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382475,"byte_end":382481,"line_start":376,"line_end":376,"column_start":9,"column_end":15}},{"value":"/ //     use a::<b>::c;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382490,"byte_end":382515,"line_start":377,"line_end":377,"column_start":9,"column_end":34}},{"value":"/ struct SingleUse {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382524,"byte_end":382546,"line_start":378,"line_end":378,"column_start":9,"column_end":31}},{"value":"/     use_token: Token![use],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382555,"byte_end":382586,"line_start":379,"line_end":379,"column_start":9,"column_end":40}},{"value":"/     path: Path,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382595,"byte_end":382614,"line_start":380,"line_end":380,"column_start":9,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382623,"byte_end":382628,"line_start":381,"line_end":381,"column_start":9,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382637,"byte_end":382640,"line_start":382,"line_end":382,"column_start":9,"column_end":12}},{"value":"/ impl Parse for SingleUse {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382649,"byte_end":382679,"line_start":383,"line_end":383,"column_start":9,"column_end":39}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382688,"byte_end":382742,"line_start":384,"line_end":384,"column_start":9,"column_end":63}},{"value":"/         Ok(SingleUse {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382751,"byte_end":382777,"line_start":385,"line_end":385,"column_start":9,"column_end":35}},{"value":"/             use_token: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382786,"byte_end":382828,"line_start":386,"line_end":386,"column_start":9,"column_end":51}},{"value":"/             path: input.call(Path::parse_mod_style)?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382837,"byte_end":382894,"line_start":387,"line_end":387,"column_start":9,"column_end":66}},{"value":"/         })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382903,"byte_end":382917,"line_start":388,"line_end":388,"column_start":9,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382926,"byte_end":382935,"line_start":389,"line_end":389,"column_start":9,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382944,"byte_end":382949,"line_start":390,"line_end":390,"column_start":9,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":382958,"byte_end":382965,"line_start":391,"line_end":391,"column_start":9,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384942,"byte_end":384950,"line_start":438,"line_end":438,"column_start":16,"column_end":24},"name":"is_ident","qualname":"<Path>::is_ident","value":"pub fn is_ident<I>(&Self, I) -> bool where Ident: PartialEq<I>","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this is a path of length 1 equal to the given\n ident.","sig":null,"attributes":[{"value":"/ Determines whether this is a path of length 1 equal to the given","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384359,"byte_end":384427,"line_start":425,"line_end":425,"column_start":9,"column_end":77}},{"value":"/ ident.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384436,"byte_end":384446,"line_start":426,"line_end":426,"column_start":9,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384455,"byte_end":384458,"line_start":427,"line_end":427,"column_start":9,"column_end":12}},{"value":"/ For them to compare equal, it must be the case that:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384467,"byte_end":384523,"line_start":428,"line_end":428,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384532,"byte_end":384535,"line_start":429,"line_end":429,"column_start":9,"column_end":12}},{"value":"/ - the path has no leading colon,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384544,"byte_end":384580,"line_start":430,"line_end":430,"column_start":9,"column_end":45}},{"value":"/ - the number of path segments is 1,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384589,"byte_end":384628,"line_start":431,"line_end":431,"column_start":9,"column_end":48}},{"value":"/ - the first path segment has no angle bracketed or parenthesized","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384637,"byte_end":384705,"line_start":432,"line_end":432,"column_start":9,"column_end":77}},{"value":"/   path arguments","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384714,"byte_end":384734,"line_start":433,"line_end":433,"column_start":9,"column_end":29}},{"value":"/ - and the ident of the first path segment is equal to the given one.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384743,"byte_end":384815,"line_start":434,"line_end":434,"column_start":9,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384824,"byte_end":384827,"line_start":435,"line_end":435,"column_start":9,"column_end":12}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384836,"byte_end":384904,"line_start":436,"line_end":436,"column_start":9,"column_end":77}},{"value":"/ feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":384913,"byte_end":384926,"line_start":437,"line_end":437,"column_start":9,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":6103},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":6107},{"krate":0,"index":1135},{"krate":0,"index":6109},{"krate":0,"index":1136},{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":5375},{"krate":0,"index":5394},{"krate":0,"index":5391},{"krate":0,"index":5386},{"krate":0,"index":5388},{"krate":0,"index":5380},{"krate":0,"index":5382},{"krate":0,"index":1160},{"krate":0,"index":1181}],"decl_id":null,"docs":" A stably addressed token buffer supporting efficient traversal based on a\n cheaply copyable cursor.","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14938,"byte_end":14965,"line_start":409,"line_end":409,"column_start":1,"column_end":28}},{"value":"/ A stably addressed token buffer supporting efficient traversal based on a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":394822,"byte_end":394899,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ cheaply copyable cursor.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":394900,"byte_end":394928,"line_start":2,"line_end":2,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":394929,"byte_end":394932,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ *This module is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":394933,"byte_end":395009,"line_start":4,"line_end":4,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":396211,"byte_end":396222,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"name":"TokenBuffer","qualname":"::buffer::TokenBuffer","value":"TokenBuffer {  }","parent":null,"children":[{"krate":0,"index":1154}],"decl_id":null,"docs":" A buffer that can be efficiently traversed multiple times, unlike\n `TokenStream` which requires a deep copy in order to traverse more than\n once.","sig":null,"attributes":[{"value":"/ A buffer that can be efficiently traversed multiple times, unlike","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":395965,"byte_end":396034,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ `TokenStream` which requires a deep copy in order to traverse more than","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":396035,"byte_end":396110,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ once.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":396111,"byte_end":396120,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":396121,"byte_end":396124,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":396125,"byte_end":396199,"line_start":40,"line_end":40,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399061,"byte_end":399064,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<TokenBuffer>::new","value":"pub fn new(pm::TokenStream) -> TokenBuffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TokenBuffer` containing all the tokens from the input\n `TokenStream`.","sig":null,"attributes":[{"value":"/ Creates a `TokenBuffer` containing all the tokens from the input","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":398692,"byte_end":398760,"line_start":99,"line_end":99,"column_start":5,"column_end":73}},{"value":"/ `TokenStream`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":398765,"byte_end":398783,"line_start":100,"line_end":100,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":398788,"byte_end":398791,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ *This method is available if Syn is built with both the `\"parsing\"` and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":398796,"byte_end":398871,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ `\"proc-macro\"` features.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":398876,"byte_end":398905,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"cfg(all(not(all(target_arch = \"wasm32\",\n                  any(target_os = \"unknown\", target_os = \"wasi\"))), feature =\n          \"proc-macro\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":398910,"byte_end":399049,"line_start":104,"line_end":107,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399255,"byte_end":399259,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"new2","qualname":"<TokenBuffer>::new2","value":"pub fn new2(TokenStream) -> TokenBuffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TokenBuffer` containing all the tokens from the input\n `TokenStream`.\n","sig":null,"attributes":[{"value":"/ Creates a `TokenBuffer` containing all the tokens from the input","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399152,"byte_end":399220,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/ `TokenStream`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399225,"byte_end":399243,"line_start":113,"line_end":113,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399486,"byte_end":399491,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"begin","qualname":"<TokenBuffer>::begin","value":"pub fn begin(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Creates a cursor referencing the first token in the buffer and able to\n traverse until the end of the buffer.\n","sig":null,"attributes":[{"value":"/ Creates a cursor referencing the first token in the buffer and able to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399354,"byte_end":399428,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ traverse until the end of the buffer.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399433,"byte_end":399474,"line_start":119,"line_end":119,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5375},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":400232,"byte_end":400238,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::buffer::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":5377},{"krate":0,"index":5378},{"krate":0,"index":5379}],"decl_id":null,"docs":" A cheaply copyable cursor into a `TokenBuffer`.","sig":null,"attributes":[{"value":"/ A cheaply copyable cursor into a `TokenBuffer`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399602,"byte_end":399653,"line_start":125,"line_end":125,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399654,"byte_end":399657,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ This cursor holds a shared reference into the immutable data which is used","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399658,"byte_end":399736,"line_start":127,"line_end":127,"column_start":1,"column_end":79}},{"value":"/ internally to represent a `TokenStream`, and can be efficiently manipulated","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399737,"byte_end":399816,"line_start":128,"line_end":128,"column_start":1,"column_end":80}},{"value":"/ and copied around.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399817,"byte_end":399839,"line_start":129,"line_end":129,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399840,"byte_end":399843,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ An empty `Cursor` can be created directly, or one may create a `TokenBuffer`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399844,"byte_end":399924,"line_start":131,"line_end":131,"column_start":1,"column_end":81}},{"value":"/ object and get a cursor to its first token with `begin()`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399925,"byte_end":399987,"line_start":132,"line_end":132,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399988,"byte_end":399991,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Two cursors are equal if they have the same location in the same input","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":399992,"byte_end":400066,"line_start":134,"line_end":134,"column_start":1,"column_end":75}},{"value":"/ stream, and have the same scope.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":400067,"byte_end":400103,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":400104,"byte_end":400107,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":400108,"byte_end":400182,"line_start":137,"line_end":137,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":400744,"byte_end":400749,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"empty","qualname":"<Cursor>::empty","value":"pub fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a cursor referencing a static empty TokenStream.\n","sig":null,"attributes":[{"value":"/ Creates a cursor referencing a static empty TokenStream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":400672,"byte_end":400732,"line_start":151,"line_end":151,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":403597,"byte_end":403600,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"eof","qualname":"<Cursor>::eof","value":"pub fn eof(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the cursor is currently pointing at the end of its valid\n scope.\n","sig":null,"attributes":[{"value":"/ Checks whether the cursor is currently pointing at the end of its valid","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":403481,"byte_end":403556,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ scope.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":403561,"byte_end":403571,"line_start":224,"line_end":224,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":403576,"byte_end":403585,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":403880,"byte_end":403885,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"name":"group","qualname":"<Cursor>::group","value":"pub fn group(Self, Delimiter) -> Option<(Cursor, Span, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Group` with the given delimiter, returns\n a cursor into that group and one pointing to the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Group` with the given delimiter, returns","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":403717,"byte_end":403793,"line_start":231,"line_end":231,"column_start":5,"column_end":81}},{"value":"/ a cursor into that group and one pointing to the next `TokenTree`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":403798,"byte_end":403868,"line_start":232,"line_end":232,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":404620,"byte_end":404625,"line_start":252,"line_end":252,"column_start":12,"column_end":17},"name":"ident","qualname":"<Cursor>::ident","value":"pub fn ident(Self) -> Option<(Ident, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Ident`, returns it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Ident`, returns it along with a cursor","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":404492,"byte_end":404566,"line_start":250,"line_end":250,"column_start":5,"column_end":79}},{"value":"/ pointing at the next `TokenTree`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":404571,"byte_end":404608,"line_start":251,"line_end":251,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":404986,"byte_end":404991,"line_start":262,"line_end":262,"column_start":12,"column_end":17},"name":"punct","qualname":"<Cursor>::punct","value":"pub fn punct(Self) -> Option<(Punct, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at an `Punct`, returns it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at an `Punct`, returns it along with a cursor","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":404857,"byte_end":404932,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/ pointing at the next `TokenTree`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":404937,"byte_end":404974,"line_start":261,"line_end":261,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":405401,"byte_end":405408,"line_start":274,"line_end":274,"column_start":12,"column_end":19},"name":"literal","qualname":"<Cursor>::literal","value":"pub fn literal(Self) -> Option<(Literal, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Literal`, return it along with a cursor\n pointing at the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Literal`, return it along with a cursor","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":405272,"byte_end":405347,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ pointing at the next `TokenTree`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":405352,"byte_end":405389,"line_start":273,"line_end":273,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":405771,"byte_end":405779,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"lifetime","qualname":"<Cursor>::lifetime","value":"pub fn lifetime(Self) -> Option<(Lifetime, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `Lifetime`, returns it along with a\n cursor pointing at the next `TokenTree`.\n","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `Lifetime`, returns it along with a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":405640,"byte_end":405710,"line_start":282,"line_end":282,"column_start":5,"column_end":75}},{"value":"/ cursor pointing at the next `TokenTree`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":405715,"byte_end":405759,"line_start":283,"line_end":283,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":406560,"byte_end":406572,"line_start":306,"line_end":306,"column_start":12,"column_end":24},"name":"token_stream","qualname":"<Cursor>::token_stream","value":"pub fn token_stream(Self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Copies all remaining tokens visible from this cursor into a\n `TokenStream`.\n","sig":null,"attributes":[{"value":"/ Copies all remaining tokens visible from this cursor into a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":406462,"byte_end":406525,"line_start":304,"line_end":304,"column_start":5,"column_end":68}},{"value":"/ `TokenStream`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":406530,"byte_end":406548,"line_start":305,"line_end":305,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":407200,"byte_end":407210,"line_start":323,"line_end":323,"column_start":12,"column_end":22},"name":"token_tree","qualname":"<Cursor>::token_tree","value":"pub fn token_tree(Self) -> Option<(TokenTree, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" If the cursor is pointing at a `TokenTree`, returns it along with a\n cursor pointing at the next `TokenTree`.","sig":null,"attributes":[{"value":"/ If the cursor is pointing at a `TokenTree`, returns it along with a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":406828,"byte_end":406899,"line_start":316,"line_end":316,"column_start":5,"column_end":76}},{"value":"/ cursor pointing at the next `TokenTree`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":406904,"byte_end":406948,"line_start":317,"line_end":317,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":406953,"byte_end":406956,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the cursor has reached the end of its stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":406961,"byte_end":407028,"line_start":319,"line_end":319,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":407033,"byte_end":407036,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This method does not treat `None`-delimited groups as transparent, and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":407041,"byte_end":407115,"line_start":321,"line_end":321,"column_start":5,"column_end":79}},{"value":"/ will return a `Group(None, ..)` if the cursor is looking at one.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":407120,"byte_end":407188,"line_start":322,"line_end":322,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":407794,"byte_end":407798,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"span","qualname":"<Cursor>::span","value":"pub fn span(Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` of the current token, or `Span::call_site()` if this\n cursor points to eof.\n","sig":null,"attributes":[{"value":"/ Returns the `Span` of the current token, or `Span::call_site()` if this","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":407677,"byte_end":407752,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ cursor points to eof.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":407757,"byte_end":407782,"line_start":338,"line_end":338,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":1183},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1196},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1206}],"decl_id":null,"docs":" Extension traits to provide parsing methods on foreign types.","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14982,"byte_end":15009,"line_start":411,"line_end":411,"column_start":1,"column_end":28}},{"value":"/ Extension traits to provide parsing methods on foreign types.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":408683,"byte_end":408748,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":408749,"byte_end":408752,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ *This module is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":408753,"byte_end":408829,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409445,"byte_end":409453,"line_start":24,"line_end":24,"column_start":11,"column_end":19},"name":"IdentExt","qualname":"::ext::IdentExt","value":"IdentExt: Sized + private::Sealed","parent":null,"children":[{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195}],"decl_id":null,"docs":" Additional methods for `Ident` not provided by proc-macro2 or libproc_macro.","sig":null,"attributes":[{"value":"/ Additional methods for `Ident` not provided by proc-macro2 or libproc_macro.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409140,"byte_end":409220,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409221,"byte_end":409224,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside of Syn. It","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409225,"byte_end":409304,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ is implemented only for `proc_macro2::Ident`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409305,"byte_end":409354,"line_start":21,"line_end":21,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409355,"byte_end":409358,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409359,"byte_end":409434,"line_start":23,"line_end":23,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410342,"byte_end":410351,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"parse_any","qualname":"::ext::IdentExt::parse_any","value":"pub fn parse_any(ParseStream) -> Result<Self>","parent":{"krate":0,"index":1192},"children":[],"decl_id":null,"docs":" Parses any identifier including keywords.","sig":null,"attributes":[{"value":"/ Parses any identifier including keywords.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409485,"byte_end":409530,"line_start":25,"line_end":25,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409535,"byte_end":409538,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is useful when parsing macro input which allows Rust keywords as","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409543,"byte_end":409616,"line_start":27,"line_end":27,"column_start":5,"column_end":78}},{"value":"/ identifiers.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409621,"byte_end":409637,"line_start":28,"line_end":28,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409642,"byte_end":409645,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409650,"byte_end":409663,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409668,"byte_end":409671,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409676,"byte_end":409694,"line_start":32,"line_end":32,"column_start":5,"column_end":23}},{"value":"/ use syn::{Error, Ident, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409699,"byte_end":409742,"line_start":33,"line_end":33,"column_start":5,"column_end":48}},{"value":"/ use syn::ext::IdentExt;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409747,"byte_end":409774,"line_start":34,"line_end":34,"column_start":5,"column_end":32}},{"value":"/ use syn::parse::ParseStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409779,"byte_end":409811,"line_start":35,"line_end":35,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409816,"byte_end":409819,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ mod kw {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409824,"byte_end":409836,"line_start":37,"line_end":37,"column_start":5,"column_end":17}},{"value":"/     syn::custom_keyword!(name);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409841,"byte_end":409876,"line_start":38,"line_end":38,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409881,"byte_end":409886,"line_start":39,"line_end":39,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409891,"byte_end":409894,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Parses input that looks like `name = NAME` where `NAME` can be","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409899,"byte_end":409968,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ // any identifier.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409973,"byte_end":409995,"line_start":42,"line_end":42,"column_start":5,"column_end":27}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410000,"byte_end":410006,"line_start":43,"line_end":43,"column_start":5,"column_end":11}},{"value":"/ // Examples:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410011,"byte_end":410027,"line_start":44,"line_end":44,"column_start":5,"column_end":21}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410032,"byte_end":410038,"line_start":45,"line_end":45,"column_start":5,"column_end":11}},{"value":"/ //     name = anything","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410043,"byte_end":410069,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/ //     name = impl","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410074,"byte_end":410096,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/ fn parse_dsl(input: ParseStream) -> Result<Ident> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410101,"byte_end":410156,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/     input.parse::<kw::name>()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410161,"byte_end":410196,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"/     input.parse::<Token![=]>()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410201,"byte_end":410237,"line_start":50,"line_end":50,"column_start":5,"column_end":41}},{"value":"/     let name = input.call(Ident::parse_any)?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410242,"byte_end":410291,"line_start":51,"line_end":51,"column_start":5,"column_end":54}},{"value":"/     Ok(name)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410296,"byte_end":410312,"line_start":52,"line_end":52,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410317,"byte_end":410322,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410327,"byte_end":410334,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410720,"byte_end":410728,"line_start":64,"line_end":64,"column_start":11,"column_end":19},"name":"peek_any","qualname":"::ext::IdentExt::peek_any","value":"private::PeekFn","parent":{"krate":0,"index":1192},"children":[],"decl_id":null,"docs":" Peeks any identifier including keywords. Usage:\n `input.peek(Ident::peek_any)`","sig":null,"attributes":[{"value":"/ Peeks any identifier including keywords. Usage:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410394,"byte_end":410445,"line_start":57,"line_end":57,"column_start":5,"column_end":56}},{"value":"/ `input.peek(Ident::peek_any)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410450,"byte_end":410483,"line_start":58,"line_end":58,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410488,"byte_end":410491,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This is different from `input.peek(Ident)` which only returns true in","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410496,"byte_end":410569,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the case of an ident which is not a Rust keyword.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410574,"byte_end":410627,"line_start":61,"line_end":61,"column_start":5,"column_end":58}},{"value":"cfg(syn_can_use_associated_constants)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410632,"byte_end":410672,"line_start":62,"line_end":62,"column_start":5,"column_end":45}},{"value":"allow(non_upper_case_globals)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410677,"byte_end":410709,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411833,"byte_end":411838,"line_start":93,"line_end":93,"column_start":8,"column_end":13},"name":"unraw","qualname":"::ext::IdentExt::unraw","value":"pub fn unraw(&Self) -> Ident","parent":{"krate":0,"index":1192},"children":[],"decl_id":null,"docs":" Strips the raw marker `r#`, if any, from the beginning of an ident.","sig":null,"attributes":[{"value":"/ Strips the raw marker `r#`, if any, from the beginning of an ident.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410770,"byte_end":410841,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410846,"byte_end":410849,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/   - unraw(`x`) = `x`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410854,"byte_end":410878,"line_start":68,"line_end":68,"column_start":5,"column_end":29}},{"value":"/   - unraw(`move`) = `move`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410883,"byte_end":410913,"line_start":69,"line_end":69,"column_start":5,"column_end":35}},{"value":"/   - unraw(`r#move`) = `move`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410918,"byte_end":410950,"line_start":70,"line_end":70,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410955,"byte_end":410958,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410963,"byte_end":410976,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410981,"byte_end":410984,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ In the case of interop with other languages like Python that have a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":410989,"byte_end":411060,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ different set of keywords than Rust, we might come across macro input","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411065,"byte_end":411138,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ that involves raw identifiers to refer to ordinary variables in the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411143,"byte_end":411214,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/ other language with a name that happens to be a Rust keyword.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411219,"byte_end":411284,"line_start":77,"line_end":77,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411289,"byte_end":411292,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ The function below appends an identifier from the caller's input onto a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411297,"byte_end":411372,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ fixed prefix. Without using `unraw()`, this would tend to produce","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411377,"byte_end":411446,"line_start":80,"line_end":80,"column_start":5,"column_end":74}},{"value":"/ invalid identifiers like `__pyo3_get_r#move`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411451,"byte_end":411500,"line_start":81,"line_end":81,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411505,"byte_end":411508,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411513,"byte_end":411531,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ use proc_macro2::Span;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411536,"byte_end":411562,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ use syn::Ident;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411567,"byte_end":411586,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/ use syn::ext::IdentExt;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411591,"byte_end":411618,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411623,"byte_end":411626,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ fn ident_for_getter(variable: &Ident) -> Ident {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411631,"byte_end":411683,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/     let getter = format!(\"__pyo3_get_{}\", variable.unraw());","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411688,"byte_end":411752,"line_start":89,"line_end":89,"column_start":5,"column_end":69}},{"value":"/     Ident::new(&getter, Span::call_site())","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411757,"byte_end":411803,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411808,"byte_end":411813,"line_start":91,"line_end":91,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411818,"byte_end":411825,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412821,"byte_end":412827,"line_start":136,"line_end":136,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5396},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412949,"byte_end":412955,"line_start":142,"line_end":142,"column_start":16,"column_end":22},"name":"PeekFn","qualname":"::ext::private::PeekFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(syn_can_use_associated_constants)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412866,"byte_end":412906,"line_start":140,"line_end":140,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":413017,"byte_end":413025,"line_start":144,"line_end":144,"column_start":16,"column_end":24},"name":"IdentAny","qualname":"::ext::private::IdentAny","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(syn_can_use_associated_constants)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412961,"byte_end":413001,"line_start":143,"line_end":143,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":1212},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"punctuated","qualname":"::punctuated","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":6131},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":6141},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":6149},{"krate":0,"index":1227},{"krate":0,"index":5401},{"krate":0,"index":5406},{"krate":0,"index":1228},{"krate":0,"index":1260},{"krate":0,"index":1265},{"krate":0,"index":1270},{"krate":0,"index":1275},{"krate":0,"index":1280},{"krate":0,"index":1288},{"krate":0,"index":1295},{"krate":0,"index":1302},{"krate":0,"index":1306},{"krate":0,"index":1312},{"krate":0,"index":1320},{"krate":0,"index":1325},{"krate":0,"index":1330},{"krate":0,"index":1336},{"krate":0,"index":1344},{"krate":0,"index":5410},{"krate":0,"index":5415},{"krate":0,"index":1349},{"krate":0,"index":1356},{"krate":0,"index":5419},{"krate":0,"index":5424},{"krate":0,"index":1360},{"krate":0,"index":1365},{"krate":0,"index":1369},{"krate":0,"index":1373},{"krate":0,"index":1377},{"krate":0,"index":1383},{"krate":0,"index":1387},{"krate":0,"index":1391},{"krate":0,"index":1396},{"krate":0,"index":1400},{"krate":0,"index":1408},{"krate":0,"index":1413},{"krate":0,"index":1418},{"krate":0,"index":1423},{"krate":0,"index":1427},{"krate":0,"index":1433},{"krate":0,"index":1437},{"krate":0,"index":1442},{"krate":0,"index":1446},{"krate":0,"index":1454},{"krate":0,"index":5428},{"krate":0,"index":5438},{"krate":0,"index":1459},{"krate":0,"index":1468},{"krate":0,"index":1473},{"krate":0,"index":1477}],"decl_id":null,"docs":" A punctuated sequence of syntax tree nodes separated by punctuation.","sig":null,"attributes":[{"value":"/ A punctuated sequence of syntax tree nodes separated by punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413030,"byte_end":413102,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413103,"byte_end":413106,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Lots of things in Rust are punctuated sequences.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413107,"byte_end":413159,"line_start":3,"line_end":3,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413160,"byte_end":413163,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The fields of a struct are `Punctuated<Field, Token![,]>`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413164,"byte_end":413228,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/ - The segments of a path are `Punctuated<PathSegment, Token![::]>`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413229,"byte_end":413300,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/ - The bounds on a generic parameter are `Punctuated<TypeParamBound,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413301,"byte_end":413372,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/   Token![+]>`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413373,"byte_end":413391,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/ - The arguments to a function call are `Punctuated<Expr, Token![,]>`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413392,"byte_end":413465,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413466,"byte_end":413469,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This module provides a common representation for these punctuated sequences","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413470,"byte_end":413549,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ in the form of the [`Punctuated<T, P>`] type. We store a vector of pairs of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413550,"byte_end":413629,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ syntax tree node + punctuation, where every node in the sequence is followed","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413630,"byte_end":413710,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ by punctuation except for possibly the final one.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413711,"byte_end":413764,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413765,"byte_end":413768,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Punctuated<T, P>`]: struct.Punctuated.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413769,"byte_end":413817,"line_start":16,"line_end":16,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413818,"byte_end":413821,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413822,"byte_end":413833,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ a_function_call(arg1, arg2, arg3);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413834,"byte_end":413872,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/                 ^^^^^ ~~~~~ ^^^^","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413873,"byte_end":413909,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":413910,"byte_end":413917,"line_start":21,"line_end":21,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5401},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":414717,"byte_end":414727,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"Punctuated","qualname":"::punctuated::Punctuated","value":"Punctuated {  }","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5405}],"decl_id":null,"docs":" A punctuated sequence of syntax tree nodes of type `T` separated by\n punctuation of type `P`.","sig":null,"attributes":[{"value":"/ A punctuated sequence of syntax tree nodes of type `T` separated by","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":414365,"byte_end":414436,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ punctuation of type `P`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":414437,"byte_end":414465,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":414466,"byte_end":414469,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":414470,"byte_end":414549,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":414550,"byte_end":414553,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":414554,"byte_end":414586,"line_start":46,"line_end":46,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":414876,"byte_end":414879,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Punctuated<T, P>>::new","value":"pub fn new() -> Punctuated<T, P>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty punctuated sequence.\n","sig":null,"attributes":[{"value":"/ Creates an empty punctuated sequence.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":414823,"byte_end":414864,"line_start":55,"line_end":55,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415135,"byte_end":415143,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Punctuated<T, P>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this punctuated sequence is empty, meaning it\n contains no syntax tree nodes or punctuation.\n","sig":null,"attributes":[{"value":"/ Determines whether this punctuated sequence is empty, meaning it","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415001,"byte_end":415069,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ contains no syntax tree nodes or punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415074,"byte_end":415123,"line_start":64,"line_end":64,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415416,"byte_end":415419,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"len","qualname":"<Punctuated<T, P>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of syntax tree nodes in this punctuated sequence.","sig":null,"attributes":[{"value":"/ Returns the number of syntax tree nodes in this punctuated sequence.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415225,"byte_end":415297,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415302,"byte_end":415305,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This is the number of nodes of type `T`, not counting the punctuation of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415310,"byte_end":415386,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ type `P`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415391,"byte_end":415404,"line_start":72,"line_end":72,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415583,"byte_end":415588,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"first","qualname":"<Punctuated<T, P>>::first","value":"pub fn first(&Self) -> Option<Pair<&T, &P>>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the first punctuated pair in this sequence.\n","sig":null,"attributes":[{"value":"/ Borrows the first punctuated pair in this sequence.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415516,"byte_end":415571,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415727,"byte_end":415731,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"last","qualname":"<Punctuated<T, P>>::last","value":"pub fn last(&Self) -> Option<Pair<&T, &P>>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the last punctuated pair in this sequence.\n","sig":null,"attributes":[{"value":"/ Borrows the last punctuated pair in this sequence.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":415661,"byte_end":415715,"line_start":82,"line_end":82,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":416082,"byte_end":416090,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Punctuated<T, P>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<Pair<&mut T, &mut P>>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the last punctuated pair in this sequence.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the last punctuated pair in this sequence.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":416008,"byte_end":416070,"line_start":93,"line_end":93,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":416476,"byte_end":416480,"line_start":105,"line_end":105,"column_start":12,"column_end":16},"name":"iter","qualname":"<Punctuated<T, P>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over borrowed syntax tree nodes of type `&T`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over borrowed syntax tree nodes of type `&T`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":416395,"byte_end":416464,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":416809,"byte_end":416817,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Punctuated<T, P>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over mutably borrowed syntax tree nodes of type\n `&mut T`.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over mutably borrowed syntax tree nodes of type","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":416708,"byte_end":416779,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ `&mut T`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":416784,"byte_end":416797,"line_start":115,"line_end":115,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":417170,"byte_end":417175,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"pairs","qualname":"<Punctuated<T, P>>::pairs","value":"pub fn pairs(&Self) -> Pairs<, T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as borrowed\n punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as borrowed","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":417062,"byte_end":417132,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ punctuated pairs.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":417137,"byte_end":417158,"line_start":126,"line_end":126,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":417458,"byte_end":417467,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"pairs_mut","qualname":"<Punctuated<T, P>>::pairs_mut","value":"pub fn pairs_mut(&mut Self) -> PairsMut<, T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as mutably\n borrowed punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as mutably","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":417342,"byte_end":417411,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/ borrowed punctuated pairs.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":417416,"byte_end":417446,"line_start":135,"line_end":135,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":417753,"byte_end":417763,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"into_pairs","qualname":"<Punctuated<T, P>>::into_pairs","value":"pub fn into_pairs(Self) -> IntoPairs<T, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the contents of this sequence as owned\n punctuated pairs.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the contents of this sequence as owned","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":417648,"byte_end":417715,"line_start":143,"line_end":143,"column_start":5,"column_end":72}},{"value":"/ punctuated pairs.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":417720,"byte_end":417741,"line_start":144,"line_end":144,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418388,"byte_end":418398,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"push_value","qualname":"<Punctuated<T, P>>::push_value","value":"pub fn push_value(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends a syntax tree node onto the end of this punctuated sequence. The\n sequence must previously have a trailing punctuation.","sig":null,"attributes":[{"value":"/ Appends a syntax tree node onto the end of this punctuated sequence. The","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":417928,"byte_end":418004,"line_start":152,"line_end":152,"column_start":5,"column_end":81}},{"value":"/ sequence must previously have a trailing punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418009,"byte_end":418066,"line_start":153,"line_end":153,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418071,"byte_end":418074,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Use [`push`] instead if the punctuated sequence may or may not already","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418079,"byte_end":418153,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/ have trailing punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418158,"byte_end":418188,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418193,"byte_end":418196,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ [`push`]: Punctuated::push","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418201,"byte_end":418231,"line_start":158,"line_end":158,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418236,"byte_end":418239,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418244,"byte_end":418256,"line_start":160,"line_end":160,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418261,"byte_end":418264,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Panics if the sequence does not already have a trailing punctuation when","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418269,"byte_end":418345,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ this method is called.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418350,"byte_end":418376,"line_start":163,"line_end":163,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418814,"byte_end":418824,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"push_punct","qualname":"<Punctuated<T, P>>::push_punct","value":"pub fn push_punct(&mut Self, P)","parent":null,"children":[],"decl_id":null,"docs":" Appends a trailing punctuation onto the end of this punctuated sequence.\n The sequence must be non-empty and must not already have trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Appends a trailing punctuation onto the end of this punctuated sequence.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418519,"byte_end":418595,"line_start":169,"line_end":169,"column_start":5,"column_end":81}},{"value":"/ The sequence must be non-empty and must not already have trailing","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418600,"byte_end":418669,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/ punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418674,"byte_end":418690,"line_start":171,"line_end":171,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418695,"byte_end":418698,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418703,"byte_end":418715,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418720,"byte_end":418723,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Panics if the sequence is empty or already has a trailing punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418728,"byte_end":418802,"line_start":175,"line_end":175,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419108,"byte_end":419111,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"pop","qualname":"<Punctuated<T, P>>::pop","value":"pub fn pop(&mut Self) -> Option<Pair<T, P>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last punctuated pair from this sequence, or `None` if the\n sequence is empty.\n","sig":null,"attributes":[{"value":"/ Removes the last punctuated pair from this sequence, or `None` if the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":418996,"byte_end":419069,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/ sequence is empty.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419074,"byte_end":419096,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419437,"byte_end":419451,"line_start":194,"line_end":194,"column_start":12,"column_end":26},"name":"trailing_punct","qualname":"<Punctuated<T, P>>::trailing_punct","value":"pub fn trailing_punct(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether this punctuated sequence ends with a trailing\n punctuation.\n","sig":null,"attributes":[{"value":"/ Determines whether this punctuated sequence ends with a trailing","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419336,"byte_end":419404,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/ punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419409,"byte_end":419425,"line_start":193,"line_end":193,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419722,"byte_end":419739,"line_start":202,"line_end":202,"column_start":12,"column_end":29},"name":"empty_or_trailing","qualname":"<Punctuated<T, P>>::empty_or_trailing","value":"pub fn empty_or_trailing(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if either this `Punctuated` is empty, or it has a trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Returns true if either this `Punctuated` is empty, or it has a trailing","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419528,"byte_end":419603,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419608,"byte_end":419624,"line_start":199,"line_end":199,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419629,"byte_end":419632,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `punctuated.is_empty() || punctuated.trailing_punct()`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419637,"byte_end":419710,"line_start":201,"line_end":201,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420086,"byte_end":420090,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"push","qualname":"<Punctuated<T, P>>::push","value":"pub fn push(&mut Self, T) where P: Default","parent":null,"children":[],"decl_id":null,"docs":" Appends a syntax tree node onto the end of this punctuated sequence.","sig":null,"attributes":[{"value":"/ Appends a syntax tree node onto the end of this punctuated sequence.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419796,"byte_end":419868,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419873,"byte_end":419876,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ If there is not a trailing punctuation in this sequence when this method","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419881,"byte_end":419957,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ is called, the default value of punctuation type `P` is inserted before","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":419962,"byte_end":420037,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ the given value of type `T`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420042,"byte_end":420074,"line_start":210,"line_end":210,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420490,"byte_end":420496,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"insert","qualname":"<Punctuated<T, P>>::insert","value":"pub fn insert(&mut Self, usize, T) where P: Default","parent":null,"children":[],"decl_id":null,"docs":" Inserts an element at position `index`.","sig":null,"attributes":[{"value":"/ Inserts an element at position `index`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420289,"byte_end":420332,"line_start":221,"line_end":221,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420337,"byte_end":420340,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420345,"byte_end":420357,"line_start":223,"line_end":223,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420362,"byte_end":420365,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is greater than the number of elements previously in","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420370,"byte_end":420444,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ this punctuated sequence.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420449,"byte_end":420478,"line_start":226,"line_end":226,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421189,"byte_end":421205,"line_start":249,"line_end":249,"column_start":12,"column_end":28},"name":"parse_terminated","qualname":"<Punctuated<T, P>>::parse_terminated","value":"pub fn parse_terminated(ParseStream) -> Result<Self> where T: Parse, P: Parse","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more occurrences of `T` separated by punctuation of type\n `P`, with optional trailing punctuation.","sig":null,"attributes":[{"value":"/ Parses zero or more occurrences of `T` separated by punctuation of type","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420775,"byte_end":420850,"line_start":240,"line_end":240,"column_start":5,"column_end":80}},{"value":"/ `P`, with optional trailing punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420855,"byte_end":420899,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420904,"byte_end":420907,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Parsing continues until the end of this parse stream. The entire content","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420912,"byte_end":420988,"line_start":243,"line_end":243,"column_start":5,"column_end":81}},{"value":"/ of this parse stream must consist of `T` and `P`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":420993,"byte_end":421046,"line_start":244,"line_end":244,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421051,"byte_end":421054,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421059,"byte_end":421127,"line_start":246,"line_end":246,"column_start":5,"column_end":73}},{"value":"/ feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421132,"byte_end":421145,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421150,"byte_end":421177,"line_start":248,"line_end":248,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421843,"byte_end":421864,"line_start":269,"line_end":269,"column_start":12,"column_end":33},"name":"parse_terminated_with","qualname":"<Punctuated<T, P>>::parse_terminated_with","value":"pub fn parse_terminated_with(ParseStream, fn(: ParseStream) -> Result<T>)\n-> Result<Self> where P: Parse","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more occurrences of `T` using the given parse function,\n separated by punctuation of type `P`, with optional trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Parses zero or more occurrences of `T` using the given parse function,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421358,"byte_end":421432,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/ separated by punctuation of type `P`, with optional trailing","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421437,"byte_end":421501,"line_start":258,"line_end":258,"column_start":5,"column_end":69}},{"value":"/ punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421506,"byte_end":421522,"line_start":259,"line_end":259,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421527,"byte_end":421530,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Like [`parse_terminated`], the entire content of this stream is expected","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421535,"byte_end":421611,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/ to be parsed.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421616,"byte_end":421633,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421638,"byte_end":421641,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ [`parse_terminated`]: Punctuated::parse_terminated","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421646,"byte_end":421700,"line_start":264,"line_end":264,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421705,"byte_end":421708,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421713,"byte_end":421781,"line_start":266,"line_end":266,"column_start":5,"column_end":73}},{"value":"/ feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421786,"byte_end":421799,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":421804,"byte_end":421831,"line_start":268,"line_end":268,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422937,"byte_end":422961,"line_start":305,"line_end":305,"column_start":12,"column_end":36},"name":"parse_separated_nonempty","qualname":"<Punctuated<T, P>>::parse_separated_nonempty","value":"pub fn parse_separated_nonempty(ParseStream) -> Result<Self> where T: Parse,\nP: Token + Parse","parent":null,"children":[],"decl_id":null,"docs":" Parses one or more occurrences of `T` separated by punctuation of type\n `P`, not accepting trailing punctuation.","sig":null,"attributes":[{"value":"/ Parses one or more occurrences of `T` separated by punctuation of type","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422411,"byte_end":422485,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ `P`, not accepting trailing punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422490,"byte_end":422534,"line_start":295,"line_end":295,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422539,"byte_end":422542,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Parsing continues as long as punctuation `P` is present at the head of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422547,"byte_end":422621,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ the stream. This method returns upon parsing a `T` and observing that it","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422626,"byte_end":422702,"line_start":298,"line_end":298,"column_start":5,"column_end":81}},{"value":"/ is not followed by a `P`, even if there are remaining tokens in the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422707,"byte_end":422778,"line_start":299,"line_end":299,"column_start":5,"column_end":76}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422783,"byte_end":422794,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422799,"byte_end":422802,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422807,"byte_end":422875,"line_start":302,"line_end":302,"column_start":5,"column_end":73}},{"value":"/ feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422880,"byte_end":422893,"line_start":303,"line_end":303,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":422898,"byte_end":422925,"line_start":304,"line_end":304,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423648,"byte_end":423677,"line_start":325,"line_end":325,"column_start":12,"column_end":41},"name":"parse_separated_nonempty_with","qualname":"<Punctuated<T, P>>::parse_separated_nonempty_with","value":"pub fn parse_separated_nonempty_with(ParseStream,\n                                     fn(: ParseStream) -> Result<T>)\n-> Result<Self> where P: Token + Parse","parent":null,"children":[],"decl_id":null,"docs":" Parses one or more occurrences of `T` using the given parse function,\n separated by punctuation of type `P`, not accepting trailing\n punctuation.","sig":null,"attributes":[{"value":"/ Parses one or more occurrences of `T` using the given parse function,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423130,"byte_end":423203,"line_start":313,"line_end":313,"column_start":5,"column_end":78}},{"value":"/ separated by punctuation of type `P`, not accepting trailing","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423208,"byte_end":423272,"line_start":314,"line_end":314,"column_start":5,"column_end":69}},{"value":"/ punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423277,"byte_end":423293,"line_start":315,"line_end":315,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423298,"byte_end":423301,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Like [`parse_separated_nonempty`], may complete early without parsing","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423306,"byte_end":423379,"line_start":317,"line_end":317,"column_start":5,"column_end":78}},{"value":"/ the entire content of this stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423384,"byte_end":423422,"line_start":318,"line_end":318,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423427,"byte_end":423430,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ [`parse_separated_nonempty`]: Punctuated::parse_separated_nonempty","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423435,"byte_end":423505,"line_start":320,"line_end":320,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423510,"byte_end":423513,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423518,"byte_end":423586,"line_start":322,"line_end":322,"column_start":5,"column_end":73}},{"value":"/ feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423591,"byte_end":423604,"line_start":323,"line_end":323,"column_start":5,"column_end":18}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":423609,"byte_end":423636,"line_start":324,"line_end":324,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":426939,"byte_end":426944,"line_start":457,"line_end":457,"column_start":12,"column_end":17},"name":"Pairs","qualname":"::punctuated::Pairs","value":"Pairs {  }","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311}],"decl_id":null,"docs":" An iterator over borrowed pairs of type `Pair<&T, &P>`.","sig":null,"attributes":[{"value":"/ An iterator over borrowed pairs of type `Pair<&T, &P>`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":426747,"byte_end":426806,"line_start":452,"line_end":452,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":426807,"byte_end":426810,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":426811,"byte_end":426890,"line_start":454,"line_end":454,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":426891,"byte_end":426894,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":426895,"byte_end":426927,"line_start":456,"line_end":456,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427890,"byte_end":427898,"line_start":494,"line_end":494,"column_start":12,"column_end":20},"name":"PairsMut","qualname":"::punctuated::PairsMut","value":"PairsMut {  }","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335}],"decl_id":null,"docs":" An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.","sig":null,"attributes":[{"value":"/ An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427682,"byte_end":427757,"line_start":489,"line_end":489,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427758,"byte_end":427761,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427762,"byte_end":427841,"line_start":491,"line_end":491,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427842,"byte_end":427845,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427846,"byte_end":427878,"line_start":493,"line_end":493,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5410},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428660,"byte_end":428669,"line_start":522,"line_end":522,"column_start":12,"column_end":21},"name":"IntoPairs","qualname":"::punctuated::IntoPairs","value":"IntoPairs {  }","parent":null,"children":[{"krate":0,"index":5413},{"krate":0,"index":5414}],"decl_id":null,"docs":" An iterator over owned pairs of type `Pair<T, P>`.","sig":null,"attributes":[{"value":"/ An iterator over owned pairs of type `Pair<T, P>`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428456,"byte_end":428510,"line_start":516,"line_end":516,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428511,"byte_end":428514,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428515,"byte_end":428594,"line_start":518,"line_end":518,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428595,"byte_end":428598,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428599,"byte_end":428631,"line_start":520,"line_end":520,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5419},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429347,"byte_end":429355,"line_start":550,"line_end":550,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::punctuated::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":5422},{"krate":0,"index":5423}],"decl_id":null,"docs":" An iterator over owned values of type `T`.","sig":null,"attributes":[{"value":"/ An iterator over owned values of type `T`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429151,"byte_end":429197,"line_start":544,"line_end":544,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429198,"byte_end":429201,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429202,"byte_end":429281,"line_start":546,"line_end":546,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429282,"byte_end":429285,"line_start":547,"line_end":547,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429286,"byte_end":429318,"line_start":548,"line_end":548,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429929,"byte_end":429933,"line_start":576,"line_end":576,"column_start":12,"column_end":16},"name":"Iter","qualname":"::punctuated::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1372}],"decl_id":null,"docs":" An iterator over borrowed values of type `&T`.","sig":null,"attributes":[{"value":"/ An iterator over borrowed values of type `&T`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429746,"byte_end":429796,"line_start":571,"line_end":571,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429797,"byte_end":429800,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429801,"byte_end":429880,"line_start":573,"line_end":573,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429881,"byte_end":429884,"line_start":574,"line_end":574,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429885,"byte_end":429917,"line_start":575,"line_end":575,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":432120,"byte_end":432127,"line_start":665,"line_end":665,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::punctuated::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":1426}],"decl_id":null,"docs":" An iterator over mutably borrowed values of type `&mut T`.","sig":null,"attributes":[{"value":"/ An iterator over mutably borrowed values of type `&mut T`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431925,"byte_end":431987,"line_start":660,"line_end":660,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431988,"byte_end":431991,"line_start":661,"line_end":661,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431992,"byte_end":432071,"line_start":662,"line_end":662,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":432072,"byte_end":432075,"line_start":663,"line_end":663,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":432076,"byte_end":432108,"line_start":664,"line_end":664,"column_start":1,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5431},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433507,"byte_end":433517,"line_start":722,"line_end":722,"column_start":5,"column_end":15},"name":"Punctuated","qualname":"::punctuated::Pair::Punctuated","value":"Pair::Punctuated(T, P)","parent":{"krate":0,"index":5428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5435},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433529,"byte_end":433532,"line_start":723,"line_end":723,"column_start":5,"column_end":8},"name":"End","qualname":"::punctuated::Pair::End","value":"Pair::End(T)","parent":{"krate":0,"index":5428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5428},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433490,"byte_end":433494,"line_start":721,"line_end":721,"column_start":10,"column_end":14},"name":"Pair","qualname":"::punctuated::Pair","value":"pub enum Pair<T, P> { Punctuated(T, P), End(T), }","parent":null,"children":[{"krate":0,"index":5431},{"krate":0,"index":5435}],"decl_id":null,"docs":" A single syntax tree node of type `T` followed by its trailing punctuation\n of type `P` if any.","sig":null,"attributes":[{"value":"/ A single syntax tree node of type `T` followed by its trailing punctuation","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433205,"byte_end":433283,"line_start":714,"line_end":714,"column_start":1,"column_end":79}},{"value":"/ of type `P` if any.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433284,"byte_end":433307,"line_start":715,"line_end":715,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433308,"byte_end":433311,"line_start":716,"line_end":716,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about punctuated sequences.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433312,"byte_end":433391,"line_start":717,"line_end":717,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433392,"byte_end":433395,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433396,"byte_end":433428,"line_start":719,"line_end":719,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433686,"byte_end":433696,"line_start":729,"line_end":729,"column_start":12,"column_end":22},"name":"into_value","qualname":"<Pair<T, P>>::into_value","value":"pub fn into_value(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the syntax tree node from this punctuated pair, discarding the\n following punctuation.\n","sig":null,"attributes":[{"value":"/ Extracts the syntax tree node from this punctuated pair, discarding the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433568,"byte_end":433643,"line_start":727,"line_end":727,"column_start":5,"column_end":80}},{"value":"/ following punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433648,"byte_end":433674,"line_start":728,"line_end":728,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433879,"byte_end":433884,"line_start":736,"line_end":736,"column_start":12,"column_end":17},"name":"value","qualname":"<Pair<T, P>>::value","value":"pub fn value(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Borrows the syntax tree node from this punctuated pair.\n","sig":null,"attributes":[{"value":"/ Borrows the syntax tree node from this punctuated pair.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433808,"byte_end":433867,"line_start":735,"line_end":735,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":434086,"byte_end":434095,"line_start":743,"line_end":743,"column_start":12,"column_end":21},"name":"value_mut","qualname":"<Pair<T, P>>::value_mut","value":"pub fn value_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the syntax tree node from this punctuated pair.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the syntax tree node from this punctuated pair.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":434007,"byte_end":434074,"line_start":742,"line_end":742,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":434380,"byte_end":434385,"line_start":751,"line_end":751,"column_start":12,"column_end":17},"name":"punct","qualname":"<Pair<T, P>>::punct","value":"pub fn punct(&Self) -> Option<&P>","parent":null,"children":[],"decl_id":null,"docs":" Borrows the punctuation from this punctuated pair, unless this pair is\n the final one and there is no trailing punctuation.\n","sig":null,"attributes":[{"value":"/ Borrows the punctuation from this punctuated pair, unless this pair is","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":434234,"byte_end":434308,"line_start":749,"line_end":749,"column_start":5,"column_end":79}},{"value":"/ the final one and there is no trailing punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":434313,"byte_end":434368,"line_start":750,"line_end":750,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":434651,"byte_end":434654,"line_start":760,"line_end":760,"column_start":12,"column_end":15},"name":"new","qualname":"<Pair<T, P>>::new","value":"pub fn new(T, Option<P>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a punctuated pair out of a syntax tree node and an optional\n following punctuation.\n","sig":null,"attributes":[{"value":"/ Creates a punctuated pair out of a syntax tree node and an optional","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":434537,"byte_end":434608,"line_start":758,"line_end":758,"column_start":5,"column_end":76}},{"value":"/ following punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":434613,"byte_end":434639,"line_start":759,"line_end":759,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":434925,"byte_end":434935,"line_start":769,"line_end":769,"column_start":12,"column_end":22},"name":"into_tuple","qualname":"<Pair<T, P>>::into_tuple","value":"pub fn into_tuple(Self) -> (T, Option<P>)","parent":null,"children":[],"decl_id":null,"docs":" Produces this punctuated pair as a tuple of syntax tree node and\n optional following punctuation.\n","sig":null,"attributes":[{"value":"/ Produces this punctuated pair as a tuple of syntax tree node and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":434805,"byte_end":434873,"line_start":767,"line_end":767,"column_start":5,"column_end":73}},{"value":"/ optional following punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":434878,"byte_end":434913,"line_start":768,"line_end":768,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":1491},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse_quote","qualname":"::parse_quote","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1513}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15184,"byte_end":15211,"line_start":418,"line_end":418,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":439625,"byte_end":439630,"line_start":104,"line_end":104,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_quote::parse","value":"pub fn parse<T: ParseQuote>(TokenStream) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1502},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":439859,"byte_end":439869,"line_start":114,"line_end":114,"column_start":11,"column_end":21},"name":"ParseQuote","qualname":"::parse_quote::ParseQuote","value":"ParseQuote: Sized","parent":null,"children":[{"krate":0,"index":1503}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":439886,"byte_end":439891,"line_start":115,"line_end":115,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_quote::ParseQuote::parse","value":"pub fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":1502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1517},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse_macro_input","qualname":"::parse_macro_input","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":1533}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(not(all(target_arch = \"wasm32\",\n                  any(target_os = \"unknown\", target_os = \"wasi\"))), feature =\n          \"parsing\", feature = \"proc-macro\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15306,"byte_end":15458,"line_start":423,"line_end":427,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":442571,"byte_end":442576,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_macro_input::parse","value":"pub fn parse<T: ParseMacroInput>(TokenStream) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1527},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":442719,"byte_end":442734,"line_start":71,"line_end":71,"column_start":11,"column_end":26},"name":"ParseMacroInput","qualname":"::parse_macro_input::ParseMacroInput","value":"ParseMacroInput: Sized","parent":null,"children":[{"krate":0,"index":1528}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":442751,"byte_end":442756,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse_macro_input::ParseMacroInput::parse","value":"pub fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":1527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spanned","qualname":"::spanned","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1547},{"krate":0,"index":1550}],"decl_id":null,"docs":" A trait that can provide the `Span` of the complete contents of a syntax\n tree node.","sig":null,"attributes":[{"value":"cfg(all(feature = \"parsing\", feature = \"printing\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15502,"byte_end":15556,"line_start":431,"line_end":431,"column_start":1,"column_end":55}},{"value":"/ A trait that can provide the `Span` of the complete contents of a syntax","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":443643,"byte_end":443719,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ tree node.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":443720,"byte_end":443734,"line_start":2,"line_end":2,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":443735,"byte_end":443738,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ *This module is available if Syn is built with both the `\"parsing\"` and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":443739,"byte_end":443814,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ `\"printing\"` features.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":443815,"byte_end":443842,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":443843,"byte_end":443846,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":443847,"byte_end":443860,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":443861,"byte_end":443864,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Suppose in a procedural macro we have a [`Type`] that we want to assert","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":443865,"byte_end":443940,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ implements the [`Sync`] trait. Maybe this is the type of one of the fields","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":443941,"byte_end":444019,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ of a struct for which we are deriving a trait implementation, and we need to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444020,"byte_end":444100,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ be able to pass a reference to one of those fields across threads.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444101,"byte_end":444171,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444172,"byte_end":444175,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Type`]: ../enum.Type.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444176,"byte_end":444207,"line_start":14,"line_end":14,"column_start":1,"column_end":32}},{"value":"/ [`Sync`]: https://doc.rust-lang.org/std/marker/trait.Sync.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444208,"byte_end":444274,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444275,"byte_end":444278,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ If the field type does *not* implement `Sync` as required, we want the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444279,"byte_end":444353,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ compiler to report an error pointing out exactly which type it was.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444354,"byte_end":444425,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444426,"byte_end":444429,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The following macro code takes a variable `ty` of type `Type` and produces a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444430,"byte_end":444510,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ static assertion that `Sync` is implemented for that type.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444511,"byte_end":444573,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444574,"byte_end":444577,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444578,"byte_end":444596,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444597,"byte_end":444627,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444628,"byte_end":444633,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444634,"byte_end":444666,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ use proc_macro2::Span;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444667,"byte_end":444693,"line_start":27,"line_end":27,"column_start":1,"column_end":27}},{"value":"/ use quote::quote_spanned;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444694,"byte_end":444723,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/ use syn::Type;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444724,"byte_end":444742,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ use syn::spanned::Spanned;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444743,"byte_end":444773,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444774,"byte_end":444777,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444778,"byte_end":444824,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ #[proc_macro_derive(MyMacro)]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444825,"byte_end":444858,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/ # };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444859,"byte_end":444867,"line_start":34,"line_end":34,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(input: TokenStream) -> TokenStream {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444868,"byte_end":444924,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"/     # let ty = get_a_type();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444925,"byte_end":444957,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/     /* ... */","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444958,"byte_end":444975,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444976,"byte_end":444979,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/     let assert_sync = quote_spanned! {ty.span()=>","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":444980,"byte_end":445033,"line_start":39,"line_end":39,"column_start":1,"column_end":54}},{"value":"/         struct _AssertSync where #ty: Sync;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445034,"byte_end":445081,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/     };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445082,"byte_end":445092,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445093,"byte_end":445096,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/     /* ... */","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445097,"byte_end":445114,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/     # input","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445115,"byte_end":445130,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445131,"byte_end":445136,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445137,"byte_end":445142,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ # fn get_a_type() -> Type {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445143,"byte_end":445174,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/ #     unimplemented!()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445175,"byte_end":445201,"line_start":48,"line_end":48,"column_start":1,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445202,"byte_end":445209,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445210,"byte_end":445217,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445218,"byte_end":445221,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ By inserting this `assert_sync` fragment into the output code generated by","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445222,"byte_end":445300,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ our macro, the user's code will fail to compile if `ty` does not implement","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445301,"byte_end":445379,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ `Sync`. The errors they would see look like the following.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445380,"byte_end":445442,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445443,"byte_end":445446,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445447,"byte_end":445458,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ error[E0277]: the trait bound `*const i32: std::marker::Sync` is not satisfied","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445459,"byte_end":445541,"line_start":57,"line_end":57,"column_start":1,"column_end":83}},{"value":"/   --> src/main.rs:10:21","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445542,"byte_end":445569,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445570,"byte_end":445578,"line_start":59,"line_end":59,"column_start":1,"column_end":9}},{"value":"/ 10 |     bad_field: *const i32,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445579,"byte_end":445614,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/    |                ^^^^^^^^^^ `*const i32` cannot be shared between threads safely","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445615,"byte_end":445702,"line_start":61,"line_end":61,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445703,"byte_end":445710,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445711,"byte_end":445714,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ In this technique, using the `Type`'s span for the error message makes the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445715,"byte_end":445793,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ error appear in the correct place underlining the right type.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445794,"byte_end":445859,"line_start":65,"line_end":65,"column_start":1,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446485,"byte_end":446492,"line_start":85,"line_end":85,"column_start":11,"column_end":18},"name":"Spanned","qualname":"::spanned::Spanned","value":"Spanned: private::Sealed","parent":null,"children":[{"krate":0,"index":1541}],"decl_id":null,"docs":" A trait that can provide the `Span` of the complete contents of a syntax\n tree node.","sig":null,"attributes":[{"value":"/ A trait that can provide the `Span` of the complete contents of a syntax","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445921,"byte_end":445997,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/ tree node.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":445998,"byte_end":446012,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446013,"byte_end":446016,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented for all types that implement","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446017,"byte_end":446089,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/ [`ToTokens`] from the `quote` crate. It is sealed and cannot be implemented","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446090,"byte_end":446169,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ outside of the Syn crate other than by implementing `ToTokens`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446170,"byte_end":446237,"line_start":75,"line_end":75,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446238,"byte_end":446241,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`ToTokens`]: quote::ToTokens","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446242,"byte_end":446275,"line_start":77,"line_end":77,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446276,"byte_end":446279,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] for an example.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446280,"byte_end":446330,"line_start":79,"line_end":79,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446331,"byte_end":446334,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446335,"byte_end":446367,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446368,"byte_end":446371,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if Syn is built with both the `\"parsing\"` and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446372,"byte_end":446446,"line_start":83,"line_end":83,"column_start":1,"column_end":75}},{"value":"/ `\"printing\"` features.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446447,"byte_end":446474,"line_start":84,"line_end":84,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446725,"byte_end":446729,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"span","qualname":"::spanned::Spanned::span","value":"pub fn span(&Self) -> Span","parent":{"krate":0,"index":1540},"children":[],"decl_id":null,"docs":" Returns a `Span` covering the complete contents of this syntax tree\n node, or [`Span::call_site()`] if this node is empty.","sig":null,"attributes":[{"value":"/ Returns a `Span` covering the complete contents of this syntax tree","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446516,"byte_end":446587,"line_start":86,"line_end":86,"column_start":5,"column_end":76}},{"value":"/ node, or [`Span::call_site()`] if this node is empty.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446592,"byte_end":446649,"line_start":87,"line_end":87,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446654,"byte_end":446657,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Span::call_site()`]: proc_macro2::Span::call_site","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446662,"byte_end":446717,"line_start":89,"line_end":89,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1544},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446802,"byte_end":446808,"line_start":95,"line_end":95,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::spanned::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"export","qualname":"::export","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":6195},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":6197},{"krate":0,"index":1559},{"krate":0,"index":6199},{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":6203},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":6207},{"krate":0,"index":1565},{"krate":0,"index":1566},{"krate":0,"index":1567},{"krate":0,"index":6211},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":6215},{"krate":0,"index":1570},{"krate":0,"index":1571},{"krate":0,"index":6217},{"krate":0,"index":1572},{"krate":0,"index":6219},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":6221},{"krate":0,"index":1575},{"krate":0,"index":6223},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452855,"byte_end":452859,"line_start":28,"line_end":28,"column_start":10,"column_end":14},"name":"bool","qualname":"::export::bool","value":"help::Bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452815,"byte_end":452845,"line_start":27,"line_end":27,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1586},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452914,"byte_end":452917,"line_start":30,"line_end":30,"column_start":10,"column_end":13},"name":"str","qualname":"::export::str","value":"help::Str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(non_camel_case_types)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\export.rs","byte_start":452874,"byte_end":452904,"line_start":29,"line_end":29,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\sealed.rs","byte_start":469423,"byte_end":469429,"line_start":3,"line_end":3,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::lookahead::Sealed","value":"Sealed: Copy","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1622},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471424,"byte_end":471434,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"Lookahead1","qualname":"::lookahead::Lookahead1","value":"Lookahead1 {  }","parent":null,"children":[{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626}],"decl_id":null,"docs":" Support for checking the next token in a stream to decide how to parse.","sig":null,"attributes":[{"value":"/ Support for checking the next token in a stream to decide how to parse.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":469621,"byte_end":469696,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":469697,"byte_end":469700,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ An important advantage over [`ParseStream::peek`] is that here we","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":469701,"byte_end":469770,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ automatically construct an appropriate error message based on the token","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":469771,"byte_end":469846,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ alternatives that get peeked. If you are producing your own error message,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":469847,"byte_end":469925,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ go ahead and use `ParseStream::peek` instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":469926,"byte_end":469975,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":469976,"byte_end":469979,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Use [`ParseStream::lookahead1`] to construct this object.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":469980,"byte_end":470041,"line_start":18,"line_end":18,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470042,"byte_end":470045,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`ParseStream::peek`]: crate::parse::ParseBuffer::peek","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470046,"byte_end":470104,"line_start":20,"line_end":20,"column_start":1,"column_end":59}},{"value":"/ [`ParseStream::lookahead1`]: crate::parse::ParseBuffer::lookahead1","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470105,"byte_end":470175,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470176,"byte_end":470179,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470180,"byte_end":470193,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470194,"byte_end":470197,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470198,"byte_end":470216,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ use syn::{ConstParam, Ident, Lifetime, LifetimeDef, Result, Token, TypeParam};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470217,"byte_end":470299,"line_start":26,"line_end":26,"column_start":1,"column_end":83}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470300,"byte_end":470341,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470342,"byte_end":470345,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // A generic parameter, a single one of the comma-separated elements inside","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470346,"byte_end":470425,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ // angle brackets in:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470426,"byte_end":470451,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470452,"byte_end":470458,"line_start":31,"line_end":31,"column_start":1,"column_end":7}},{"value":"/ //     fn f<T: Clone, 'a, 'b: 'a, const N: usize>() { ... }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470459,"byte_end":470522,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470523,"byte_end":470529,"line_start":33,"line_end":33,"column_start":1,"column_end":7}},{"value":"/ // On invalid input, lookahead gives us a reasonable error message.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470530,"byte_end":470601,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470602,"byte_end":470608,"line_start":35,"line_end":35,"column_start":1,"column_end":7}},{"value":"/ //     error: expected one of: identifier, lifetime, `const`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470609,"byte_end":470673,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ //       |","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470674,"byte_end":470688,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/ //     5 |     fn f<!Sized>() {}","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470689,"byte_end":470725,"line_start":38,"line_end":38,"column_start":1,"column_end":37}},{"value":"/ //       |          ^","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470726,"byte_end":470751,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/ enum GenericParam {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470752,"byte_end":470775,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/     Type(TypeParam),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470776,"byte_end":470800,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/     Lifetime(LifetimeDef),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470801,"byte_end":470831,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/     Const(ConstParam),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470832,"byte_end":470858,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470859,"byte_end":470864,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470865,"byte_end":470868,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ impl Parse for GenericParam {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470869,"byte_end":470902,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470903,"byte_end":470957,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/         let lookahead = input.lookahead1();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":470958,"byte_end":471005,"line_start":48,"line_end":48,"column_start":1,"column_end":48}},{"value":"/         if lookahead.peek(Ident) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471006,"byte_end":471044,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/             input.parse().map(GenericParam::Type)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471045,"byte_end":471098,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/         } else if lookahead.peek(Lifetime) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471099,"byte_end":471147,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/             input.parse().map(GenericParam::Lifetime)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471148,"byte_end":471205,"line_start":52,"line_end":52,"column_start":1,"column_end":58}},{"value":"/         } else if lookahead.peek(Token![const]) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471206,"byte_end":471259,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/             input.parse().map(GenericParam::Const)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471260,"byte_end":471314,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471315,"byte_end":471335,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/             Err(lookahead.error())","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471336,"byte_end":471374,"line_start":56,"line_end":56,"column_start":1,"column_end":39}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471375,"byte_end":471388,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471389,"byte_end":471398,"line_start":58,"line_end":58,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471399,"byte_end":471404,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471405,"byte_end":471412,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472510,"byte_end":472514,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"peek","qualname":"<Lookahead1>::peek","value":"pub fn peek<T: Peek>(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Looks at the next token in the parse stream to determine whether it\n matches the requested type of token.","sig":null,"attributes":[{"value":"/ Looks at the next token in the parse stream to determine whether it","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471982,"byte_end":472053,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ matches the requested type of token.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472058,"byte_end":472098,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472103,"byte_end":472106,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Syntax","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472111,"byte_end":472123,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472128,"byte_end":472131,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that this method does not use turbofish syntax. Pass the peek type","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472136,"byte_end":472211,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ inside of parentheses.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472216,"byte_end":472242,"line_start":94,"line_end":94,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472247,"byte_end":472250,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ - `input.peek(Token![struct])`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472255,"byte_end":472289,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ - `input.peek(Token![==])`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472294,"byte_end":472324,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/ - `input.peek(Ident)`&emsp;*(does not accept keywords)*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472329,"byte_end":472388,"line_start":98,"line_end":98,"column_start":5,"column_end":64}},{"value":"/ - `input.peek(Ident::peek_any)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472393,"byte_end":472428,"line_start":99,"line_end":99,"column_start":5,"column_end":40}},{"value":"/ - `input.peek(Lifetime)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472433,"byte_end":472461,"line_start":100,"line_end":100,"column_start":5,"column_end":33}},{"value":"/ - `input.peek(token::Brace)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472466,"byte_end":472498,"line_start":101,"line_end":101,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472865,"byte_end":472870,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"error","qualname":"<Lookahead1>::error","value":"pub fn error(Self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Triggers an error at the current position of the parse stream.","sig":null,"attributes":[{"value":"/ Triggers an error at the current position of the parse stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472644,"byte_end":472710,"line_start":107,"line_end":107,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472715,"byte_end":472718,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The error message will identify all of the expected token types that","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472723,"byte_end":472795,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/ have been peeked against this lookahead instance.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":472800,"byte_end":472853,"line_start":110,"line_end":110,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":1634},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474156,"byte_end":474160,"line_start":146,"line_end":146,"column_start":11,"column_end":15},"name":"Peek","qualname":"::lookahead::Peek","value":"Peek: Sealed","parent":null,"children":[{"krate":0,"index":1635}],"decl_id":null,"docs":" Types that can be parsed by looking at just one token.","sig":null,"attributes":[{"value":"/ Types that can be parsed by looking at just one token.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":473822,"byte_end":473880,"line_start":138,"line_end":138,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":473881,"byte_end":473884,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ Use [`ParseStream::peek`] to peek one of these types in a parse stream","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":473885,"byte_end":473959,"line_start":140,"line_end":140,"column_start":1,"column_end":75}},{"value":"/ without consuming it from the stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":473960,"byte_end":474001,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474002,"byte_end":474005,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside of Syn.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474006,"byte_end":474082,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474083,"byte_end":474086,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ [`ParseStream::peek`]: crate::parse::ParseBuffer::peek","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474087,"byte_end":474145,"line_start":145,"line_end":145,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1635},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474222,"byte_end":474227,"line_start":149,"line_end":149,"column_start":10,"column_end":15},"name":"Token","qualname":"::lookahead::Peek::Token","value":"type Token: Token;","parent":{"krate":0,"index":1634},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1640},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474335,"byte_end":474346,"line_start":156,"line_end":156,"column_start":10,"column_end":21},"name":"TokenMarker","qualname":"::lookahead::TokenMarker","value":"pub enum TokenMarker { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1648},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse","qualname":"::parse","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","parent":null,"children":[{"krate":0,"index":1649},{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":6259},{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":6263},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":6299},{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1692},{"krate":0,"index":1694},{"krate":0,"index":1700},{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":5442},{"krate":0,"index":5452},{"krate":0,"index":5448},{"krate":0,"index":1709},{"krate":0,"index":1714},{"krate":0,"index":1719},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1754},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1769},{"krate":0,"index":1772},{"krate":0,"index":1775},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1788}],"decl_id":null,"docs":" Parsing interface for parsing a token stream into a syntax tree node.","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20021,"byte_end":20048,"line_start":562,"line_end":562,"column_start":1,"column_end":28}},{"value":"/ Parsing interface for parsing a token stream into a syntax tree node.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":474629,"byte_end":474702,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":474703,"byte_end":474706,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Parsing in Syn is built on parser functions that take in a [`ParseStream`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":474707,"byte_end":474785,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ and produce a [`Result<T>`] where `T` is some syntax tree node. Underlying","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":474786,"byte_end":474864,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ these parser functions is a lower level mechanism built around the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":474865,"byte_end":474935,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ [`Cursor`] type. `Cursor` is a cheaply copyable cursor over a range of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":474936,"byte_end":475010,"line_start":6,"line_end":6,"column_start":1,"column_end":75}},{"value":"/ tokens in a token stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475011,"byte_end":475040,"line_start":7,"line_end":7,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475041,"byte_end":475044,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`ParseStream`]: type.ParseStream.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475045,"byte_end":475087,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/ [`Result<T>`]: type.Result.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475088,"byte_end":475123,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/ [`Cursor`]: ../buffer/index.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475124,"byte_end":475160,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475161,"byte_end":475164,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475165,"byte_end":475178,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475179,"byte_end":475182,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Here is a snippet of parsing code to get a feel for the style of the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475183,"byte_end":475255,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ library. We define data structures for a subset of Rust syntax including","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475256,"byte_end":475332,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ enums (not shown) and structs, then provide implementations of the [`Parse`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475333,"byte_end":475413,"line_start":17,"line_end":17,"column_start":1,"column_end":81}},{"value":"/ trait to parse these syntax tree data structures from a token stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475414,"byte_end":475487,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475488,"byte_end":475491,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Once `Parse` impls have been defined, they can be called conveniently from a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475492,"byte_end":475572,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ procedural macro through [`parse_macro_input!`] as shown at the bottom of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475573,"byte_end":475650,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ the snippet. If the caller provides syntactically invalid input to the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475651,"byte_end":475725,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ procedural macro, they will receive a helpful compiler error message","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475726,"byte_end":475798,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ pointing out the exact token that triggered the failure to parse.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475799,"byte_end":475868,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475869,"byte_end":475872,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`parse_macro_input!`]: ../macro.parse_macro_input.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475873,"byte_end":475932,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475933,"byte_end":475936,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475937,"byte_end":475955,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ extern crate proc_macro;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475956,"byte_end":475984,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475985,"byte_end":475988,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":475989,"byte_end":476021,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/ use syn::{braced, parse_macro_input, token, Field, Ident, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476022,"byte_end":476099,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476100,"byte_end":476141,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use syn::punctuated::Punctuated;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476142,"byte_end":476178,"line_start":34,"line_end":34,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476179,"byte_end":476182,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ enum Item {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476183,"byte_end":476198,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/     Struct(ItemStruct),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476199,"byte_end":476226,"line_start":37,"line_end":37,"column_start":1,"column_end":28}},{"value":"/     Enum(ItemEnum),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476227,"byte_end":476250,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476251,"byte_end":476256,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476257,"byte_end":476260,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ struct ItemStruct {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476261,"byte_end":476284,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/     struct_token: Token![struct],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476285,"byte_end":476322,"line_start":42,"line_end":42,"column_start":1,"column_end":38}},{"value":"/     ident: Ident,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476323,"byte_end":476344,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/     brace_token: token::Brace,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476345,"byte_end":476379,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/     fields: Punctuated<Field, Token![,]>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476380,"byte_end":476425,"line_start":45,"line_end":45,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476426,"byte_end":476431,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476432,"byte_end":476437,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ # enum ItemEnum {}","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476438,"byte_end":476460,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476461,"byte_end":476464,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ impl Parse for Item {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476465,"byte_end":476490,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476491,"byte_end":476545,"line_start":51,"line_end":51,"column_start":1,"column_end":55}},{"value":"/         let lookahead = input.lookahead1();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476546,"byte_end":476593,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/         if lookahead.peek(Token![struct]) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476594,"byte_end":476641,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/             input.parse().map(Item::Struct)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476642,"byte_end":476689,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/         } else if lookahead.peek(Token![enum]) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476690,"byte_end":476742,"line_start":55,"line_end":55,"column_start":1,"column_end":53}},{"value":"/             input.parse().map(Item::Enum)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476743,"byte_end":476788,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476789,"byte_end":476809,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/             Err(lookahead.error())","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476810,"byte_end":476848,"line_start":58,"line_end":58,"column_start":1,"column_end":39}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476849,"byte_end":476862,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476863,"byte_end":476872,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476873,"byte_end":476878,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476879,"byte_end":476882,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ impl Parse for ItemStruct {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476883,"byte_end":476914,"line_start":63,"line_end":63,"column_start":1,"column_end":32}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476915,"byte_end":476969,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/         let content;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476970,"byte_end":476994,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/         Ok(ItemStruct {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":476995,"byte_end":477022,"line_start":66,"line_end":66,"column_start":1,"column_end":28}},{"value":"/             struct_token: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477023,"byte_end":477068,"line_start":67,"line_end":67,"column_start":1,"column_end":46}},{"value":"/             ident: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477069,"byte_end":477107,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/             brace_token: braced!(content in input),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477108,"byte_end":477163,"line_start":69,"line_end":69,"column_start":1,"column_end":56}},{"value":"/             fields: content.parse_terminated(Field::parse_named)?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477164,"byte_end":477234,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/         })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477235,"byte_end":477249,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477250,"byte_end":477259,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477260,"byte_end":477265,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477266,"byte_end":477271,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ # impl Parse for ItemEnum {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477272,"byte_end":477303,"line_start":75,"line_end":75,"column_start":1,"column_end":32}},{"value":"/ #     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477304,"byte_end":477360,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ #         unimplemented!()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477361,"byte_end":477391,"line_start":77,"line_end":77,"column_start":1,"column_end":31}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477392,"byte_end":477403,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477404,"byte_end":477411,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477412,"byte_end":477415,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE: &str = stringify! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477416,"byte_end":477455,"line_start":81,"line_end":81,"column_start":1,"column_end":40}},{"value":"/ #[proc_macro]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477456,"byte_end":477473,"line_start":82,"line_end":82,"column_start":1,"column_end":18}},{"value":"/ # };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477474,"byte_end":477482,"line_start":83,"line_end":83,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(tokens: TokenStream) -> TokenStream {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477483,"byte_end":477540,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/     let input = parse_macro_input!(tokens as Item);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477541,"byte_end":477596,"line_start":85,"line_end":85,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477597,"byte_end":477600,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     /* ... */","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477601,"byte_end":477618,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/ #   \"\".parse().unwrap()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477619,"byte_end":477646,"line_start":88,"line_end":88,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477647,"byte_end":477652,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477653,"byte_end":477660,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477661,"byte_end":477664,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # The `syn::parse*` functions","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477665,"byte_end":477698,"line_start":92,"line_end":92,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477699,"byte_end":477702,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ The [`syn::parse`], [`syn::parse2`], and [`syn::parse_str`] functions serve","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477703,"byte_end":477782,"line_start":94,"line_end":94,"column_start":1,"column_end":80}},{"value":"/ as an entry point for parsing syntax tree nodes that can be parsed in an","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477783,"byte_end":477859,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ obvious default way. These functions can return any syntax tree node that","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477860,"byte_end":477937,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ implements the [`Parse`] trait, which includes most types in Syn.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":477938,"byte_end":478007,"line_start":97,"line_end":97,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478008,"byte_end":478011,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [`syn::parse`]: ../fn.parse.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478012,"byte_end":478048,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/ [`syn::parse2`]: ../fn.parse2.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478049,"byte_end":478087,"line_start":100,"line_end":100,"column_start":1,"column_end":39}},{"value":"/ [`syn::parse_str`]: ../fn.parse_str.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478088,"byte_end":478132,"line_start":101,"line_end":101,"column_start":1,"column_end":45}},{"value":"/ [`Parse`]: trait.Parse.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478133,"byte_end":478164,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478165,"byte_end":478168,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478169,"byte_end":478187,"line_start":104,"line_end":104,"column_start":1,"column_end":19}},{"value":"/ use syn::Type;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478188,"byte_end":478206,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478207,"byte_end":478210,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ # fn run_parser() -> syn::Result<()> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478211,"byte_end":478253,"line_start":107,"line_end":107,"column_start":1,"column_end":43}},{"value":"/ let t: Type = syn::parse_str(\"std::collections::HashMap<String, Value>\")?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478254,"byte_end":478332,"line_start":108,"line_end":108,"column_start":1,"column_end":79}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478333,"byte_end":478349,"line_start":109,"line_end":109,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478350,"byte_end":478357,"line_start":110,"line_end":110,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478358,"byte_end":478363,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478364,"byte_end":478381,"line_start":112,"line_end":112,"column_start":1,"column_end":18}},{"value":"/ #     run_parser().unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478382,"byte_end":478414,"line_start":113,"line_end":113,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478415,"byte_end":478422,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478423,"byte_end":478430,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478431,"byte_end":478434,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ The [`parse_quote!`] macro also uses this approach.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478435,"byte_end":478490,"line_start":117,"line_end":117,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478491,"byte_end":478494,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ [`parse_quote!`]: ../macro.parse_quote.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478495,"byte_end":478542,"line_start":119,"line_end":119,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478543,"byte_end":478546,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ # The `Parser` trait","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478547,"byte_end":478571,"line_start":121,"line_end":121,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478572,"byte_end":478575,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ Some types can be parsed in several ways depending on context. For example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478576,"byte_end":478654,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ an [`Attribute`] can be either \"outer\" like `#[...]` or \"inner\" like","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478655,"byte_end":478727,"line_start":124,"line_end":124,"column_start":1,"column_end":73}},{"value":"/ `#![...]` and parsing the wrong one would be a bug. Similarly [`Punctuated`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478728,"byte_end":478808,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ may or may not allow trailing punctuation, and parsing it the wrong way","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478809,"byte_end":478884,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ would either reject valid input or accept invalid input.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478885,"byte_end":478945,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478946,"byte_end":478949,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ [`Attribute`]: ../struct.Attribute.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478950,"byte_end":478993,"line_start":129,"line_end":129,"column_start":1,"column_end":44}},{"value":"/ [`Punctuated`]: ../punctuated/index.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":478994,"byte_end":479038,"line_start":130,"line_end":130,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479039,"byte_end":479042,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `Parse` trait is not implemented in these cases because there is no good","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479043,"byte_end":479123,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/ behavior to consider the default.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479124,"byte_end":479161,"line_start":133,"line_end":133,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479162,"byte_end":479165,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ```edition2018,compile_fail","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479166,"byte_end":479197,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/ # extern crate proc_macro;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479198,"byte_end":479228,"line_start":136,"line_end":136,"column_start":1,"column_end":31}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479229,"byte_end":479234,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/ # use syn::punctuated::Punctuated;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479235,"byte_end":479273,"line_start":138,"line_end":138,"column_start":1,"column_end":39}},{"value":"/ # use syn::{PathSegment, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479274,"byte_end":479318,"line_start":139,"line_end":139,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479319,"byte_end":479324,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/ # fn f(tokens: proc_macro::TokenStream) -> Result<()> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479325,"byte_end":479384,"line_start":141,"line_end":141,"column_start":1,"column_end":60}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479385,"byte_end":479390,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ // Can't parse `Punctuated` without knowing whether trailing punctuation","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479391,"byte_end":479467,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ // should be allowed in this context.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479468,"byte_end":479509,"line_start":144,"line_end":144,"column_start":1,"column_end":42}},{"value":"/ let path: Punctuated<PathSegment, Token![::]> = syn::parse(tokens)?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479510,"byte_end":479582,"line_start":145,"line_end":145,"column_start":1,"column_end":73}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479583,"byte_end":479588,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"/ #     Ok(())","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479589,"byte_end":479605,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479606,"byte_end":479613,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479614,"byte_end":479621,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479622,"byte_end":479625,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ In these cases the types provide a choice of parser functions rather than a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479626,"byte_end":479705,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/ single `Parse` implementation, and those parser functions can be invoked","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479706,"byte_end":479782,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ through the [`Parser`] trait.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479783,"byte_end":479816,"line_start":153,"line_end":153,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479817,"byte_end":479820,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ [`Parser`]: trait.Parser.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479821,"byte_end":479854,"line_start":155,"line_end":155,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479855,"byte_end":479858,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479859,"byte_end":479877,"line_start":157,"line_end":157,"column_start":1,"column_end":19}},{"value":"/ extern crate proc_macro;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479878,"byte_end":479906,"line_start":158,"line_end":158,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479907,"byte_end":479910,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479911,"byte_end":479943,"line_start":160,"line_end":160,"column_start":1,"column_end":33}},{"value":"/ use syn::parse::Parser;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479944,"byte_end":479971,"line_start":161,"line_end":161,"column_start":1,"column_end":28}},{"value":"/ use syn::punctuated::Punctuated;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":479972,"byte_end":480008,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"/ use syn::{Attribute, Expr, PathSegment, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480009,"byte_end":480068,"line_start":163,"line_end":163,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480069,"byte_end":480072,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ fn call_some_parser_methods(input: TokenStream) -> Result<()> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480073,"byte_end":480140,"line_start":165,"line_end":165,"column_start":1,"column_end":68}},{"value":"/     // Parse a nonempty sequence of path segments separated by `::` punctuation","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480141,"byte_end":480224,"line_start":166,"line_end":166,"column_start":1,"column_end":84}},{"value":"/     // with no trailing punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480225,"byte_end":480265,"line_start":167,"line_end":167,"column_start":1,"column_end":41}},{"value":"/     let tokens = input.clone();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480266,"byte_end":480301,"line_start":168,"line_end":168,"column_start":1,"column_end":36}},{"value":"/     let parser = Punctuated::<PathSegment, Token![::]>::parse_separated_nonempty;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480302,"byte_end":480387,"line_start":169,"line_end":169,"column_start":1,"column_end":86}},{"value":"/     let _path = parser.parse(tokens)?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480388,"byte_end":480430,"line_start":170,"line_end":170,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480431,"byte_end":480434,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/     // Parse a possibly empty sequence of expressions terminated by commas with","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480435,"byte_end":480518,"line_start":172,"line_end":172,"column_start":1,"column_end":84}},{"value":"/     // an optional trailing punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480519,"byte_end":480563,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"/     let tokens = input.clone();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480564,"byte_end":480599,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/     let parser = Punctuated::<Expr, Token![,]>::parse_terminated;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480600,"byte_end":480669,"line_start":175,"line_end":175,"column_start":1,"column_end":70}},{"value":"/     let _args = parser.parse(tokens)?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480670,"byte_end":480712,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480713,"byte_end":480716,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/     // Parse zero or more outer attributes but not inner attributes.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480717,"byte_end":480789,"line_start":178,"line_end":178,"column_start":1,"column_end":73}},{"value":"/     let tokens = input.clone();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480790,"byte_end":480825,"line_start":179,"line_end":179,"column_start":1,"column_end":36}},{"value":"/     let parser = Attribute::parse_outer;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480826,"byte_end":480870,"line_start":180,"line_end":180,"column_start":1,"column_end":45}},{"value":"/     let _attrs = parser.parse(tokens)?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480871,"byte_end":480914,"line_start":181,"line_end":181,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480915,"byte_end":480918,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480919,"byte_end":480933,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480934,"byte_end":480939,"line_start":184,"line_end":184,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480940,"byte_end":480947,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480948,"byte_end":480951,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ---","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480952,"byte_end":480959,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480960,"byte_end":480963,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ *This module is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":480964,"byte_end":481040,"line_start":189,"line_end":189,"column_start":1,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":1649},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"discouraged","qualname":"::parse::discouraged","value":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1651},{"krate":0,"index":1653}],"decl_id":null,"docs":" Extensions to the parsing API with niche applicability.\n","sig":null,"attributes":[{"value":"path = \"discouraged.rs\"","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481042,"byte_end":481068,"line_start":191,"line_end":191,"column_start":1,"column_end":27}},{"value":"/ Extensions to the parsing API with niche applicability.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514091,"byte_end":514150,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":1651},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514249,"byte_end":514260,"line_start":6,"line_end":6,"column_start":11,"column_end":22},"name":"Speculative","qualname":"::parse::discouraged::Speculative","value":"Speculative","parent":null,"children":[{"krate":0,"index":1652}],"decl_id":null,"docs":" Extensions to the `ParseStream` API to support speculative parsing.\n","sig":null,"attributes":[{"value":"/ Extensions to the `ParseStream` API to support speculative parsing.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514167,"byte_end":514238,"line_start":5,"line_end":5,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520538,"byte_end":520548,"line_start":158,"line_end":158,"column_start":8,"column_end":18},"name":"advance_to","qualname":"::parse::discouraged::Speculative::advance_to","value":"pub fn advance_to(&Self, &Self)","parent":{"krate":0,"index":1651},"children":[],"decl_id":null,"docs":" Advance this parse stream to the position of a forked parse stream.","sig":null,"attributes":[{"value":"/ Advance this parse stream to the position of a forked parse stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514267,"byte_end":514338,"line_start":7,"line_end":7,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514343,"byte_end":514346,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ This is the opposite operation to [`ParseStream::fork`]. You can fork a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514351,"byte_end":514426,"line_start":9,"line_end":9,"column_start":5,"column_end":80}},{"value":"/ parse stream, perform some speculative parsing, then join the original","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514431,"byte_end":514505,"line_start":10,"line_end":10,"column_start":5,"column_end":79}},{"value":"/ stream to the fork to \"commit\" the parsing from the fork to the main","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514510,"byte_end":514582,"line_start":11,"line_end":11,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514587,"byte_end":514598,"line_start":12,"line_end":12,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514603,"byte_end":514606,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ If you can avoid doing this, you should, as it limits the ability to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514611,"byte_end":514683,"line_start":14,"line_end":14,"column_start":5,"column_end":77}},{"value":"/ generate useful errors. That said, it is often the only way to parse","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514688,"byte_end":514760,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/ syntax of the form `A* B*` for arbitrary syntax `A` and `B`. The problem","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514765,"byte_end":514841,"line_start":16,"line_end":16,"column_start":5,"column_end":81}},{"value":"/ is that when the fork fails to parse an `A`, it's impossible to tell","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514846,"byte_end":514918,"line_start":17,"line_end":17,"column_start":5,"column_end":77}},{"value":"/ whether that was because of a syntax error and the user meant to provide","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":514923,"byte_end":514999,"line_start":18,"line_end":18,"column_start":5,"column_end":81}},{"value":"/ an `A`, or that the `A`s are finished and its time to start parsing","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515004,"byte_end":515075,"line_start":19,"line_end":19,"column_start":5,"column_end":76}},{"value":"/ `B`s. Use with care.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515080,"byte_end":515104,"line_start":20,"line_end":20,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515109,"byte_end":515112,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Also note that if `A` is a subset of `B`, `A* B*` can be parsed by","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515117,"byte_end":515187,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ parsing `B*` and removing the leading members of `A` from the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515192,"byte_end":515257,"line_start":23,"line_end":23,"column_start":5,"column_end":70}},{"value":"/ repetition, bypassing the need to involve the downsides associated with","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515262,"byte_end":515337,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ speculative parsing.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515342,"byte_end":515366,"line_start":25,"line_end":25,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515371,"byte_end":515374,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ [`ParseStream::fork`]: ParseBuffer::fork","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515379,"byte_end":515423,"line_start":27,"line_end":27,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515428,"byte_end":515431,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515436,"byte_end":515449,"line_start":29,"line_end":29,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515454,"byte_end":515457,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ There has been chatter about the possibility of making the colons in the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515462,"byte_end":515538,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ turbofish syntax like `path::to::<T>` no longer required by accepting","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515543,"byte_end":515616,"line_start":32,"line_end":32,"column_start":5,"column_end":78}},{"value":"/ `path::to<T>` in expression position. Specifically, according to [RFC","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515621,"byte_end":515694,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ 2544], [`PathSegment`] parsing should always try to consume a following","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515699,"byte_end":515774,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ `<` token as the start of generic arguments, and reset to the `<` if","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515779,"byte_end":515851,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ that fails (e.g. the token is acting as a less-than operator).","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515856,"byte_end":515922,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515927,"byte_end":515930,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This is the exact kind of parsing behavior which requires the \"fork,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":515935,"byte_end":516007,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/ try, commit\" behavior that [`ParseStream::fork`] discourages. With","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516012,"byte_end":516082,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/ `advance_to`, we can avoid having to parse the speculatively parsed","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516087,"byte_end":516158,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ content a second time.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516163,"byte_end":516189,"line_start":41,"line_end":41,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516194,"byte_end":516197,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This change in behavior can be implemented in syn by replacing just the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516202,"byte_end":516277,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ `Parse` implementation for `PathSegment`:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516282,"byte_end":516327,"line_start":44,"line_end":44,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516332,"byte_end":516335,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516340,"byte_end":516358,"line_start":46,"line_end":46,"column_start":5,"column_end":23}},{"value":"/ # use syn::ext::IdentExt;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516363,"byte_end":516392,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/ use syn::parse::discouraged::Speculative;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516397,"byte_end":516442,"line_start":48,"line_end":48,"column_start":5,"column_end":50}},{"value":"/ # use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516447,"byte_end":516490,"line_start":49,"line_end":49,"column_start":5,"column_end":48}},{"value":"/ # use syn::{Ident, PathArguments, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516495,"byte_end":516548,"line_start":50,"line_end":50,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516553,"byte_end":516556,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ pub struct PathSegment {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516561,"byte_end":516589,"line_start":52,"line_end":52,"column_start":5,"column_end":33}},{"value":"/     pub ident: Ident,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516594,"byte_end":516619,"line_start":53,"line_end":53,"column_start":5,"column_end":30}},{"value":"/     pub arguments: PathArguments,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516624,"byte_end":516661,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516666,"byte_end":516671,"line_start":55,"line_end":55,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516676,"byte_end":516681,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/ # impl<T> From<T> for PathSegment","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516686,"byte_end":516723,"line_start":57,"line_end":57,"column_start":5,"column_end":42}},{"value":"/ # where","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516728,"byte_end":516739,"line_start":58,"line_end":58,"column_start":5,"column_end":16}},{"value":"/ #     T: Into<Ident>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516744,"byte_end":516769,"line_start":59,"line_end":59,"column_start":5,"column_end":30}},{"value":"/ # {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516774,"byte_end":516781,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"/ #     fn from(ident: T) -> Self {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516786,"byte_end":516823,"line_start":61,"line_end":61,"column_start":5,"column_end":42}},{"value":"/ #         PathSegment {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516828,"byte_end":516855,"line_start":62,"line_end":62,"column_start":5,"column_end":32}},{"value":"/ #             ident: ident.into(),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516860,"byte_end":516898,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ #             arguments: PathArguments::None,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516903,"byte_end":516952,"line_start":64,"line_end":64,"column_start":5,"column_end":54}},{"value":"/ #         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516957,"byte_end":516972,"line_start":65,"line_end":65,"column_start":5,"column_end":20}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516977,"byte_end":516988,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":516993,"byte_end":517000,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517005,"byte_end":517008,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ impl Parse for PathSegment {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517013,"byte_end":517045,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517050,"byte_end":517104,"line_start":70,"line_end":70,"column_start":5,"column_end":59}},{"value":"/         if input.peek(Token![super])","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517109,"byte_end":517149,"line_start":71,"line_end":71,"column_start":5,"column_end":45}},{"value":"/             || input.peek(Token![self])","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517154,"byte_end":517197,"line_start":72,"line_end":72,"column_start":5,"column_end":48}},{"value":"/             || input.peek(Token![Self])","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517202,"byte_end":517245,"line_start":73,"line_end":73,"column_start":5,"column_end":48}},{"value":"/             || input.peek(Token![crate])","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517250,"byte_end":517294,"line_start":74,"line_end":74,"column_start":5,"column_end":49}},{"value":"/             || input.peek(Token![extern])","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517299,"byte_end":517344,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/         {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517349,"byte_end":517362,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/             let ident = input.call(Ident::parse_any)?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517367,"byte_end":517425,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/             return Ok(PathSegment::from(ident));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517430,"byte_end":517482,"line_start":78,"line_end":78,"column_start":5,"column_end":57}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517487,"byte_end":517500,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517505,"byte_end":517508,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/         let ident = input.parse()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517513,"byte_end":517552,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/         if input.peek(Token![::]) && input.peek3(Token![<]) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517557,"byte_end":517622,"line_start":82,"line_end":82,"column_start":5,"column_end":70}},{"value":"/             return Ok(PathSegment {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517627,"byte_end":517666,"line_start":83,"line_end":83,"column_start":5,"column_end":44}},{"value":"/                 ident: ident,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517671,"byte_end":517704,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/                 arguments: PathArguments::AngleBracketed(input.parse()?),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517709,"byte_end":517786,"line_start":85,"line_end":85,"column_start":5,"column_end":82}},{"value":"/             });","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517791,"byte_end":517810,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517815,"byte_end":517828,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/         if input.peek(Token![<]) && !input.peek(Token![<=]) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517833,"byte_end":517898,"line_start":88,"line_end":88,"column_start":5,"column_end":70}},{"value":"/             let fork = input.fork();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517903,"byte_end":517943,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/             if let Ok(arguments) = fork.parse() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":517948,"byte_end":518001,"line_start":90,"line_end":90,"column_start":5,"column_end":58}},{"value":"/                 input.advance_to(&fork);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518006,"byte_end":518050,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"/                 return Ok(PathSegment {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518055,"byte_end":518098,"line_start":92,"line_end":92,"column_start":5,"column_end":48}},{"value":"/                     ident: ident,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518103,"byte_end":518140,"line_start":93,"line_end":93,"column_start":5,"column_end":42}},{"value":"/                     arguments: PathArguments::AngleBracketed(arguments),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518145,"byte_end":518221,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/                 });","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518226,"byte_end":518249,"line_start":95,"line_end":95,"column_start":5,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518254,"byte_end":518271,"line_start":96,"line_end":96,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518276,"byte_end":518289,"line_start":97,"line_end":97,"column_start":5,"column_end":18}},{"value":"/         Ok(PathSegment::from(ident))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518294,"byte_end":518334,"line_start":98,"line_end":98,"column_start":5,"column_end":45}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518339,"byte_end":518348,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518353,"byte_end":518358,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518363,"byte_end":518366,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # syn::parse_str::<PathSegment>(\"a<b,c>\").unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518371,"byte_end":518426,"line_start":102,"line_end":102,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518431,"byte_end":518438,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518443,"byte_end":518446,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Drawbacks","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518451,"byte_end":518466,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518471,"byte_end":518474,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The main drawback of this style of speculative parsing is in error","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518479,"byte_end":518549,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ presentation. Even if the lookahead is the \"correct\" parse, the error","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518554,"byte_end":518627,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ that is shown is that of the \"fallback\" parse. To use the same example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518632,"byte_end":518706,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ as the turbofish above, take the following unfinished \"turbofish\":","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518711,"byte_end":518781,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518786,"byte_end":518789,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518794,"byte_end":518805,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ let _ = f<&'a fn(), for<'a> serde::>();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518810,"byte_end":518853,"line_start":113,"line_end":113,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518858,"byte_end":518865,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518870,"byte_end":518873,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If this is parsed as generic arguments, we can provide the error message","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518878,"byte_end":518954,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518959,"byte_end":518962,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518967,"byte_end":518978,"line_start":118,"line_end":118,"column_start":5,"column_end":16}},{"value":"/ error: expected identifier","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":518983,"byte_end":519013,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/  --> src.rs:L:C","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519018,"byte_end":519037,"line_start":120,"line_end":120,"column_start":5,"column_end":24}},{"value":"/   |","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519042,"byte_end":519049,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ L | let _ = f<&'a fn(), for<'a> serde::>();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519054,"byte_end":519101,"line_start":122,"line_end":122,"column_start":5,"column_end":52}},{"value":"/   |                                    ^","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519106,"byte_end":519150,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519155,"byte_end":519162,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519167,"byte_end":519170,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ but if parsed using the above speculative parsing, it falls back to","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519175,"byte_end":519246,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ assuming that the `<` is a less-than when it fails to parse the generic","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519251,"byte_end":519326,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ arguments, and tries to interpret the `&'a` as the start of a labelled","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519331,"byte_end":519405,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ loop, resulting in the much less helpful error","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519410,"byte_end":519460,"line_start":129,"line_end":129,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519465,"byte_end":519468,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519473,"byte_end":519484,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ error: expected `:`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519489,"byte_end":519512,"line_start":132,"line_end":132,"column_start":5,"column_end":28}},{"value":"/  --> src.rs:L:C","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519517,"byte_end":519536,"line_start":133,"line_end":133,"column_start":5,"column_end":24}},{"value":"/   |","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519541,"byte_end":519548,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ L | let _ = f<&'a fn(), for<'a> serde::>();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519553,"byte_end":519600,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/   |               ^^","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519605,"byte_end":519629,"line_start":136,"line_end":136,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519634,"byte_end":519641,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519646,"byte_end":519649,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This can be mitigated with various heuristics (two examples: show both","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519654,"byte_end":519728,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ forks' parse errors, or show the one that consumed more tokens), but","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519733,"byte_end":519805,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ when you can control the grammar, sticking to something that can be","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519810,"byte_end":519881,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"/ parsed LL(3) and without the LL(*) speculative parsing this makes","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519886,"byte_end":519955,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/ possible, displaying reasonable errors becomes much more simple.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":519960,"byte_end":520028,"line_start":143,"line_end":143,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520033,"byte_end":520036,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [RFC 2544]: https://github.com/rust-lang/rfcs/pull/2544","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520041,"byte_end":520100,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ [`PathSegment`]: crate::PathSegment","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520105,"byte_end":520144,"line_start":146,"line_end":146,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520149,"byte_end":520152,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Performance","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520157,"byte_end":520174,"line_start":148,"line_end":148,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520179,"byte_end":520182,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This method performs a cheap fixed amount of work that does not depend","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520187,"byte_end":520261,"line_start":150,"line_end":150,"column_start":5,"column_end":79}},{"value":"/ on how far apart the two streams are positioned.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520266,"byte_end":520318,"line_start":151,"line_end":151,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520323,"byte_end":520326,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520331,"byte_end":520343,"line_start":153,"line_end":153,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520348,"byte_end":520351,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The forked stream in the argument of `advance_to` must have been","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520356,"byte_end":520424,"line_start":155,"line_end":155,"column_start":5,"column_end":73}},{"value":"/ obtained by forking `self`. Attempting to advance to any other stream","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520429,"byte_end":520502,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ will cause a panic.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520507,"byte_end":520530,"line_start":157,"line_end":157,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":1690},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481801,"byte_end":481806,"line_start":221,"line_end":221,"column_start":11,"column_end":16},"name":"Parse","qualname":"::parse::Parse","value":"Parse: Sized","parent":null,"children":[{"krate":0,"index":1691}],"decl_id":null,"docs":" Parsing interface implemented by all types that can be parsed in a default\n way from a token stream.\n","sig":null,"attributes":[{"value":"/ Parsing interface implemented by all types that can be parsed in a default","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481683,"byte_end":481761,"line_start":219,"line_end":219,"column_start":1,"column_end":79}},{"value":"/ way from a token stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481762,"byte_end":481790,"line_start":220,"line_end":220,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481823,"byte_end":481828,"line_start":222,"line_end":222,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse::Parse::parse","value":"pub fn parse(ParseStream) -> Result<Self>","parent":{"krate":0,"index":1690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482108,"byte_end":482119,"line_start":231,"line_end":231,"column_start":10,"column_end":21},"name":"ParseStream","qualname":"::parse::ParseStream","value":"&'a ParseBuffer","parent":null,"children":[],"decl_id":null,"docs":" Input to a Syn parser function.","sig":null,"attributes":[{"value":"/ Input to a Syn parser function.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481869,"byte_end":481904,"line_start":225,"line_end":225,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481905,"byte_end":481908,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ See the methods of this type under the documentation of [`ParseBuffer`]. For","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481909,"byte_end":481989,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"/ an overview of parsing in Syn, refer to the [module documentation].","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481990,"byte_end":482061,"line_start":228,"line_end":228,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482062,"byte_end":482065,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482066,"byte_end":482098,"line_start":230,"line_end":230,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482969,"byte_end":482980,"line_start":252,"line_end":252,"column_start":12,"column_end":23},"name":"ParseBuffer","qualname":"::parse::ParseBuffer","value":"ParseBuffer {  }","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699}],"decl_id":null,"docs":" Cursor position within a buffered token stream.","sig":null,"attributes":[{"value":"/ Cursor position within a buffered token stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482148,"byte_end":482199,"line_start":233,"line_end":233,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482200,"byte_end":482203,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ This type is more commonly used through the type alias [`ParseStream`] which","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482204,"byte_end":482284,"line_start":235,"line_end":235,"column_start":1,"column_end":81}},{"value":"/ is an alias for `&ParseBuffer`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482285,"byte_end":482320,"line_start":236,"line_end":236,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482321,"byte_end":482324,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ `ParseStream` is the input type for all parser functions in Syn. They have","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482325,"byte_end":482403,"line_start":238,"line_end":238,"column_start":1,"column_end":79}},{"value":"/ the signature `fn(ParseStream) -> Result<T>`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482404,"byte_end":482453,"line_start":239,"line_end":239,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482454,"byte_end":482457,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ## Calling a parser function","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482458,"byte_end":482490,"line_start":241,"line_end":241,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482491,"byte_end":482494,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ There is no public way to construct a `ParseBuffer`. Instead, if you are","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482495,"byte_end":482571,"line_start":243,"line_end":243,"column_start":1,"column_end":77}},{"value":"/ looking to invoke a parser function that requires `ParseStream` as input,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482572,"byte_end":482649,"line_start":244,"line_end":244,"column_start":1,"column_end":78}},{"value":"/ you will need to go through one of the public parsing entry points.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482650,"byte_end":482721,"line_start":245,"line_end":245,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482722,"byte_end":482725,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ - The [`parse_macro_input!`] macro if parsing input of a procedural macro;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482726,"byte_end":482804,"line_start":247,"line_end":247,"column_start":1,"column_end":79}},{"value":"/ - One of [the `syn::parse*` functions][syn-parse]; or","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482805,"byte_end":482862,"line_start":248,"line_end":248,"column_start":1,"column_end":58}},{"value":"/ - A method of the [`Parser`] trait.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482863,"byte_end":482902,"line_start":249,"line_end":249,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482903,"byte_end":482906,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ [syn-parse]: index.html#the-synparse-functions","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":482907,"byte_end":482957,"line_start":251,"line_end":251,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5442},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485771,"byte_end":485781,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"StepCursor","qualname":"::parse::StepCursor","value":"StepCursor {  }","parent":null,"children":[{"krate":0,"index":5445},{"krate":0,"index":5446},{"krate":0,"index":5447}],"decl_id":null,"docs":" Cursor state associated with speculative parsing.","sig":null,"attributes":[{"value":"/ Cursor state associated with speculative parsing.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484275,"byte_end":484328,"line_start":290,"line_end":290,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484329,"byte_end":484332,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ This type is the input of the closure provided to [`ParseStream::step`].","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484333,"byte_end":484409,"line_start":292,"line_end":292,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484410,"byte_end":484413,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ [`ParseStream::step`]: ParseBuffer::step","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484414,"byte_end":484458,"line_start":294,"line_end":294,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484459,"byte_end":484462,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484463,"byte_end":484476,"line_start":296,"line_end":296,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484477,"byte_end":484480,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484481,"byte_end":484499,"line_start":298,"line_end":298,"column_start":1,"column_end":19}},{"value":"/ use proc_macro2::TokenTree;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484500,"byte_end":484531,"line_start":299,"line_end":299,"column_start":1,"column_end":32}},{"value":"/ use syn::Result;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484532,"byte_end":484552,"line_start":300,"line_end":300,"column_start":1,"column_end":21}},{"value":"/ use syn::parse::ParseStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484553,"byte_end":484585,"line_start":301,"line_end":301,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484586,"byte_end":484589,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ // This function advances the stream past the next occurrence of `@`. If","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484590,"byte_end":484666,"line_start":303,"line_end":303,"column_start":1,"column_end":77}},{"value":"/ // no `@` is present in the stream, the stream position is unchanged and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484667,"byte_end":484743,"line_start":304,"line_end":304,"column_start":1,"column_end":77}},{"value":"/ // an error is returned.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484744,"byte_end":484772,"line_start":305,"line_end":305,"column_start":1,"column_end":29}},{"value":"/ fn skip_past_next_at(input: ParseStream) -> Result<()> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484773,"byte_end":484833,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/     input.step(|cursor| {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484834,"byte_end":484863,"line_start":307,"line_end":307,"column_start":1,"column_end":30}},{"value":"/         let mut rest = *cursor;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484864,"byte_end":484899,"line_start":308,"line_end":308,"column_start":1,"column_end":36}},{"value":"/         while let Some((tt, next)) = rest.token_tree() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484900,"byte_end":484960,"line_start":309,"line_end":309,"column_start":1,"column_end":61}},{"value":"/             match &tt {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484961,"byte_end":484988,"line_start":310,"line_end":310,"column_start":1,"column_end":28}},{"value":"/                 TokenTree::Punct(punct) if punct.as_char() == '@' => {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484989,"byte_end":485063,"line_start":311,"line_end":311,"column_start":1,"column_end":75}},{"value":"/                     return Ok(((), next));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485064,"byte_end":485110,"line_start":312,"line_end":312,"column_start":1,"column_end":47}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485111,"byte_end":485132,"line_start":313,"line_end":313,"column_start":1,"column_end":22}},{"value":"/                 _ => rest = next,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485133,"byte_end":485170,"line_start":314,"line_end":314,"column_start":1,"column_end":38}},{"value":"/             }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485171,"byte_end":485188,"line_start":315,"line_end":315,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485189,"byte_end":485202,"line_start":316,"line_end":316,"column_start":1,"column_end":14}},{"value":"/         Err(cursor.error(\"no `@` was found after this point\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485203,"byte_end":485269,"line_start":317,"line_end":317,"column_start":1,"column_end":67}},{"value":"/     })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485270,"byte_end":485280,"line_start":318,"line_end":318,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485281,"byte_end":485286,"line_start":319,"line_end":319,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485287,"byte_end":485292,"line_start":320,"line_end":320,"column_start":1,"column_end":6}},{"value":"/ # fn remainder_after_skipping_past_next_at(","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485293,"byte_end":485340,"line_start":321,"line_end":321,"column_start":1,"column_end":48}},{"value":"/ #     input: ParseStream,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485341,"byte_end":485370,"line_start":322,"line_end":322,"column_start":1,"column_end":30}},{"value":"/ # ) -> Result<proc_macro2::TokenStream> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485371,"byte_end":485416,"line_start":323,"line_end":323,"column_start":1,"column_end":46}},{"value":"/ #     skip_past_next_at(input)?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485417,"byte_end":485453,"line_start":324,"line_end":324,"column_start":1,"column_end":37}},{"value":"/ #     input.parse()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485454,"byte_end":485477,"line_start":325,"line_end":325,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485478,"byte_end":485485,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485486,"byte_end":485491,"line_start":327,"line_end":327,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485492,"byte_end":485509,"line_start":328,"line_end":328,"column_start":1,"column_end":18}},{"value":"/ #     use syn::parse::Parser;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485510,"byte_end":485543,"line_start":329,"line_end":329,"column_start":1,"column_end":34}},{"value":"/ #     let remainder = remainder_after_skipping_past_next_at","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485544,"byte_end":485607,"line_start":330,"line_end":330,"column_start":1,"column_end":64}},{"value":"/ #         .parse_str(\"a @ b c\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485608,"byte_end":485643,"line_start":331,"line_end":331,"column_start":1,"column_end":36}},{"value":"/ #         .unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485644,"byte_end":485668,"line_start":332,"line_end":332,"column_start":1,"column_end":25}},{"value":"/ #     assert_eq!(remainder.to_string(), \"b c\");","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485669,"byte_end":485720,"line_start":333,"line_end":333,"column_start":1,"column_end":52}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485721,"byte_end":485728,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":485729,"byte_end":485736,"line_start":335,"line_end":335,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":486741,"byte_end":486746,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"name":"error","qualname":"<StepCursor>::error","value":"pub fn error<T: Display>(Self, T) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Triggers an error at the current position of the parse stream.","sig":null,"attributes":[{"value":"/ Triggers an error at the current position of the parse stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":486540,"byte_end":486606,"line_start":361,"line_end":361,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":486611,"byte_end":486614,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ The `ParseStream::step` invocation will return this same error without","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":486619,"byte_end":486693,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ advancing the stream state.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":486698,"byte_end":486729,"line_start":364,"line_end":364,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488447,"byte_end":488452,"line_start":418,"line_end":418,"column_start":12,"column_end":17},"name":"parse","qualname":"<ParseBuffer>::parse","value":"pub fn parse<T: Parse>(&Self) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parses a syntax tree node of type `T`, advancing the position of our\n parse stream past it.\n","sig":null,"attributes":[{"value":"/ Parses a syntax tree node of type `T`, advancing the position of our","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488333,"byte_end":488405,"line_start":416,"line_end":416,"column_start":5,"column_end":77}},{"value":"/ parse stream past it.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488410,"byte_end":488435,"line_start":417,"line_end":417,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489685,"byte_end":489689,"line_start":458,"line_end":458,"column_start":12,"column_end":16},"name":"call","qualname":"<ParseBuffer>::call","value":"pub fn call<T>(&Self, fn(: ParseStream) -> Result<T>) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Calls the given parser function to parse a syntax tree node of type `T`\n from this stream.","sig":null,"attributes":[{"value":"/ Calls the given parser function to parse a syntax tree node of type `T`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488519,"byte_end":488594,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ from this stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488599,"byte_end":488620,"line_start":423,"line_end":423,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488625,"byte_end":488628,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488633,"byte_end":488646,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488651,"byte_end":488654,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ The parser below invokes [`Attribute::parse_outer`] to parse a vector of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488659,"byte_end":488735,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/ zero or more outer attributes.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488740,"byte_end":488774,"line_start":428,"line_end":428,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488779,"byte_end":488782,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ [`Attribute::parse_outer`]: crate::Attribute::parse_outer","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488787,"byte_end":488848,"line_start":430,"line_end":430,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488853,"byte_end":488856,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488861,"byte_end":488879,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use syn::{Attribute, Ident, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488884,"byte_end":488931,"line_start":433,"line_end":433,"column_start":5,"column_end":52}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488936,"byte_end":488977,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488982,"byte_end":488985,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ // Parses a unit struct with attributes.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488990,"byte_end":489034,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489039,"byte_end":489045,"line_start":437,"line_end":437,"column_start":5,"column_end":11}},{"value":"/ //     #[path = \"s.tmpl\"]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489050,"byte_end":489079,"line_start":438,"line_end":438,"column_start":5,"column_end":34}},{"value":"/ //     struct S;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489084,"byte_end":489104,"line_start":439,"line_end":439,"column_start":5,"column_end":25}},{"value":"/ struct UnitStruct {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489109,"byte_end":489132,"line_start":440,"line_end":440,"column_start":5,"column_end":28}},{"value":"/     attrs: Vec<Attribute>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489137,"byte_end":489167,"line_start":441,"line_end":441,"column_start":5,"column_end":35}},{"value":"/     struct_token: Token![struct],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489172,"byte_end":489209,"line_start":442,"line_end":442,"column_start":5,"column_end":42}},{"value":"/     name: Ident,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489214,"byte_end":489234,"line_start":443,"line_end":443,"column_start":5,"column_end":25}},{"value":"/     semi_token: Token![;],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489239,"byte_end":489269,"line_start":444,"line_end":444,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489274,"byte_end":489279,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489284,"byte_end":489287,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ impl Parse for UnitStruct {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489292,"byte_end":489323,"line_start":447,"line_end":447,"column_start":5,"column_end":36}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489328,"byte_end":489382,"line_start":448,"line_end":448,"column_start":5,"column_end":59}},{"value":"/         Ok(UnitStruct {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489387,"byte_end":489414,"line_start":449,"line_end":449,"column_start":5,"column_end":32}},{"value":"/             attrs: input.call(Attribute::parse_outer)?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489419,"byte_end":489478,"line_start":450,"line_end":450,"column_start":5,"column_end":64}},{"value":"/             struct_token: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489483,"byte_end":489528,"line_start":451,"line_end":451,"column_start":5,"column_end":50}},{"value":"/             name: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489533,"byte_end":489570,"line_start":452,"line_end":452,"column_start":5,"column_end":42}},{"value":"/             semi_token: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489575,"byte_end":489618,"line_start":453,"line_end":453,"column_start":5,"column_end":48}},{"value":"/         })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489623,"byte_end":489637,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489642,"byte_end":489651,"line_start":455,"line_end":455,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489656,"byte_end":489661,"line_start":456,"line_end":456,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489666,"byte_end":489673,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492530,"byte_end":492534,"line_start":534,"line_end":534,"column_start":12,"column_end":16},"name":"peek","qualname":"<ParseBuffer>::peek","value":"pub fn peek<T: Peek>(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Looks at the next token in the parse stream to determine whether it\n matches the requested type of token.","sig":null,"attributes":[{"value":"/ Looks at the next token in the parse stream to determine whether it","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489789,"byte_end":489860,"line_start":462,"line_end":462,"column_start":5,"column_end":76}},{"value":"/ matches the requested type of token.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489865,"byte_end":489905,"line_start":463,"line_end":463,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489910,"byte_end":489913,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ Does not advance the position of the parse stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489918,"byte_end":489972,"line_start":465,"line_end":465,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489977,"byte_end":489980,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Syntax","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":489985,"byte_end":489997,"line_start":467,"line_end":467,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490002,"byte_end":490005,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Note that this method does not use turbofish syntax. Pass the peek type","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490010,"byte_end":490085,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ inside of parentheses.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490090,"byte_end":490116,"line_start":470,"line_end":470,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490121,"byte_end":490124,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ - `input.peek(Token![struct])`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490129,"byte_end":490163,"line_start":472,"line_end":472,"column_start":5,"column_end":39}},{"value":"/ - `input.peek(Token![==])`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490168,"byte_end":490198,"line_start":473,"line_end":473,"column_start":5,"column_end":35}},{"value":"/ - `input.peek(Ident)`&emsp;*(does not accept keywords)*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490203,"byte_end":490262,"line_start":474,"line_end":474,"column_start":5,"column_end":64}},{"value":"/ - `input.peek(Ident::peek_any)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490267,"byte_end":490302,"line_start":475,"line_end":475,"column_start":5,"column_end":40}},{"value":"/ - `input.peek(Lifetime)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490307,"byte_end":490335,"line_start":476,"line_end":476,"column_start":5,"column_end":33}},{"value":"/ - `input.peek(token::Brace)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490340,"byte_end":490372,"line_start":477,"line_end":477,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490377,"byte_end":490380,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490385,"byte_end":490398,"line_start":479,"line_end":479,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490403,"byte_end":490406,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ In this example we finish parsing the list of supertraits when the next","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490411,"byte_end":490486,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ token in the input is either `where` or an opening curly brace.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490491,"byte_end":490558,"line_start":482,"line_end":482,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490563,"byte_end":490566,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490571,"byte_end":490589,"line_start":484,"line_end":484,"column_start":5,"column_end":23}},{"value":"/ use syn::{braced, token, Generics, Ident, Result, Token, TypeParamBound};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490594,"byte_end":490671,"line_start":485,"line_end":485,"column_start":5,"column_end":82}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490676,"byte_end":490717,"line_start":486,"line_end":486,"column_start":5,"column_end":46}},{"value":"/ use syn::punctuated::Punctuated;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490722,"byte_end":490758,"line_start":487,"line_end":487,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490763,"byte_end":490766,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ // Parses a trait definition containing no associated items.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490771,"byte_end":490835,"line_start":489,"line_end":489,"column_start":5,"column_end":69}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490840,"byte_end":490846,"line_start":490,"line_end":490,"column_start":5,"column_end":11}},{"value":"/ //     trait Marker<'de, T>: A + B<'de> where Box<T>: Clone {}","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490851,"byte_end":490917,"line_start":491,"line_end":491,"column_start":5,"column_end":71}},{"value":"/ struct MarkerTrait {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490922,"byte_end":490946,"line_start":492,"line_end":492,"column_start":5,"column_end":29}},{"value":"/     trait_token: Token![trait],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490951,"byte_end":490986,"line_start":493,"line_end":493,"column_start":5,"column_end":40}},{"value":"/     ident: Ident,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":490991,"byte_end":491012,"line_start":494,"line_end":494,"column_start":5,"column_end":26}},{"value":"/     generics: Generics,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491017,"byte_end":491044,"line_start":495,"line_end":495,"column_start":5,"column_end":32}},{"value":"/     colon_token: Option<Token![:]>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491049,"byte_end":491088,"line_start":496,"line_end":496,"column_start":5,"column_end":44}},{"value":"/     supertraits: Punctuated<TypeParamBound, Token![+]>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491093,"byte_end":491152,"line_start":497,"line_end":497,"column_start":5,"column_end":64}},{"value":"/     brace_token: token::Brace,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491157,"byte_end":491191,"line_start":498,"line_end":498,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491196,"byte_end":491201,"line_start":499,"line_end":499,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491206,"byte_end":491209,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ impl Parse for MarkerTrait {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491214,"byte_end":491246,"line_start":501,"line_end":501,"column_start":5,"column_end":37}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491251,"byte_end":491305,"line_start":502,"line_end":502,"column_start":5,"column_end":59}},{"value":"/         let trait_token: Token![trait] = input.parse()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491310,"byte_end":491370,"line_start":503,"line_end":503,"column_start":5,"column_end":65}},{"value":"/         let ident: Ident = input.parse()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491375,"byte_end":491421,"line_start":504,"line_end":504,"column_start":5,"column_end":51}},{"value":"/         let mut generics: Generics = input.parse()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491426,"byte_end":491482,"line_start":505,"line_end":505,"column_start":5,"column_end":61}},{"value":"/         let colon_token: Option<Token![:]> = input.parse()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491487,"byte_end":491551,"line_start":506,"line_end":506,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491556,"byte_end":491559,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/         let mut supertraits = Punctuated::new();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491564,"byte_end":491616,"line_start":508,"line_end":508,"column_start":5,"column_end":57}},{"value":"/         if colon_token.is_some() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491621,"byte_end":491659,"line_start":509,"line_end":509,"column_start":5,"column_end":43}},{"value":"/             loop {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491664,"byte_end":491686,"line_start":510,"line_end":510,"column_start":5,"column_end":27}},{"value":"/                 supertraits.push_value(input.parse()?);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491691,"byte_end":491750,"line_start":511,"line_end":511,"column_start":5,"column_end":64}},{"value":"/                 if input.peek(Token![where]) || input.peek(token::Brace) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491755,"byte_end":491833,"line_start":512,"line_end":512,"column_start":5,"column_end":83}},{"value":"/                     break;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491838,"byte_end":491868,"line_start":513,"line_end":513,"column_start":5,"column_end":35}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491873,"byte_end":491894,"line_start":514,"line_end":514,"column_start":5,"column_end":26}},{"value":"/                 supertraits.push_punct(input.parse()?);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491899,"byte_end":491958,"line_start":515,"line_end":515,"column_start":5,"column_end":64}},{"value":"/             }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491963,"byte_end":491980,"line_start":516,"line_end":516,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":491985,"byte_end":491998,"line_start":517,"line_end":517,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492003,"byte_end":492006,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/         generics.where_clause = input.parse()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492011,"byte_end":492062,"line_start":519,"line_end":519,"column_start":5,"column_end":56}},{"value":"/         let content;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492067,"byte_end":492091,"line_start":520,"line_end":520,"column_start":5,"column_end":29}},{"value":"/         let empty_brace_token = braced!(content in input);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492096,"byte_end":492158,"line_start":521,"line_end":521,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492163,"byte_end":492166,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/         Ok(MarkerTrait {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492171,"byte_end":492199,"line_start":523,"line_end":523,"column_start":5,"column_end":33}},{"value":"/             trait_token: trait_token,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492204,"byte_end":492245,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/             ident: ident,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492250,"byte_end":492279,"line_start":525,"line_end":525,"column_start":5,"column_end":34}},{"value":"/             generics: generics,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492284,"byte_end":492319,"line_start":526,"line_end":526,"column_start":5,"column_end":40}},{"value":"/             colon_token: colon_token,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492324,"byte_end":492365,"line_start":527,"line_end":527,"column_start":5,"column_end":46}},{"value":"/             supertraits: supertraits,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492370,"byte_end":492411,"line_start":528,"line_end":528,"column_start":5,"column_end":46}},{"value":"/             brace_token: empty_brace_token,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492416,"byte_end":492463,"line_start":529,"line_end":529,"column_start":5,"column_end":52}},{"value":"/         })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492468,"byte_end":492482,"line_start":530,"line_end":530,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492487,"byte_end":492496,"line_start":531,"line_end":531,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492501,"byte_end":492506,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492511,"byte_end":492518,"line_start":533,"line_end":533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493968,"byte_end":493973,"line_start":573,"line_end":573,"column_start":12,"column_end":17},"name":"peek2","qualname":"<ParseBuffer>::peek2","value":"pub fn peek2<T: Peek>(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Looks at the second-next token in the parse stream.","sig":null,"attributes":[{"value":"/ Looks at the second-next token in the parse stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492643,"byte_end":492698,"line_start":539,"line_end":539,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492703,"byte_end":492706,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This is commonly useful as a way to implement contextual keywords.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492711,"byte_end":492781,"line_start":541,"line_end":541,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492786,"byte_end":492789,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492794,"byte_end":492807,"line_start":543,"line_end":543,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492812,"byte_end":492815,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This example needs to use `peek2` because the symbol `union` is not a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492820,"byte_end":492893,"line_start":545,"line_end":545,"column_start":5,"column_end":78}},{"value":"/ keyword in Rust. We can't use just `peek` and decide to parse a union if","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492898,"byte_end":492974,"line_start":546,"line_end":546,"column_start":5,"column_end":81}},{"value":"/ the very next token is `union`, because someone is free to write a `mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":492979,"byte_end":493054,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ union` and a macro invocation that looks like `union::some_macro! { ...","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493059,"byte_end":493134,"line_start":548,"line_end":548,"column_start":5,"column_end":80}},{"value":"/ }`. In other words `union` is a contextual keyword.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493139,"byte_end":493194,"line_start":549,"line_end":549,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493199,"byte_end":493202,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493207,"byte_end":493225,"line_start":551,"line_end":551,"column_start":5,"column_end":23}},{"value":"/ use syn::{Ident, ItemUnion, Macro, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493230,"byte_end":493284,"line_start":552,"line_end":552,"column_start":5,"column_end":59}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493289,"byte_end":493330,"line_start":553,"line_end":553,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493335,"byte_end":493338,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ // Parses either a union or a macro invocation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493343,"byte_end":493394,"line_start":555,"line_end":555,"column_start":5,"column_end":56}},{"value":"/ enum UnionOrMacro {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493399,"byte_end":493422,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/     // union MaybeUninit<T> { uninit: (), value: T }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493427,"byte_end":493483,"line_start":557,"line_end":557,"column_start":5,"column_end":61}},{"value":"/     Union(ItemUnion),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493488,"byte_end":493513,"line_start":558,"line_end":558,"column_start":5,"column_end":30}},{"value":"/     // lazy_static! { ... }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493518,"byte_end":493549,"line_start":559,"line_end":559,"column_start":5,"column_end":36}},{"value":"/     Macro(Macro),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493554,"byte_end":493575,"line_start":560,"line_end":560,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493580,"byte_end":493585,"line_start":561,"line_end":561,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493590,"byte_end":493593,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ impl Parse for UnionOrMacro {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493598,"byte_end":493631,"line_start":563,"line_end":563,"column_start":5,"column_end":38}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493636,"byte_end":493690,"line_start":564,"line_end":564,"column_start":5,"column_end":59}},{"value":"/         if input.peek(Token![union]) && input.peek2(Ident) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493695,"byte_end":493759,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/             input.parse().map(UnionOrMacro::Union)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493764,"byte_end":493818,"line_start":566,"line_end":566,"column_start":5,"column_end":59}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493823,"byte_end":493843,"line_start":567,"line_end":567,"column_start":5,"column_end":25}},{"value":"/             input.parse().map(UnionOrMacro::Macro)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493848,"byte_end":493902,"line_start":568,"line_end":568,"column_start":5,"column_end":59}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493907,"byte_end":493920,"line_start":569,"line_end":569,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493925,"byte_end":493934,"line_start":570,"line_end":570,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493939,"byte_end":493944,"line_start":571,"line_end":571,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":493949,"byte_end":493956,"line_start":572,"line_end":572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494162,"byte_end":494167,"line_start":579,"line_end":579,"column_start":12,"column_end":17},"name":"peek3","qualname":"<ParseBuffer>::peek3","value":"pub fn peek3<T: Peek>(&Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Looks at the third-next token in the parse stream.\n","sig":null,"attributes":[{"value":"/ Looks at the third-next token in the parse stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494096,"byte_end":494150,"line_start":578,"line_end":578,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495861,"byte_end":495877,"line_start":630,"line_end":630,"column_start":12,"column_end":28},"name":"parse_terminated","qualname":"<ParseBuffer>::parse_terminated","value":"pub fn parse_terminated<T, P: Parse>(&Self, fn(: ParseStream) -> Result<T>)\n-> Result<Punctuated<T, P>>","parent":null,"children":[],"decl_id":null,"docs":" Parses zero or more occurrences of `T` separated by punctuation of type\n `P`, with optional trailing punctuation.","sig":null,"attributes":[{"value":"/ Parses zero or more occurrences of `T` separated by punctuation of type","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494306,"byte_end":494381,"line_start":584,"line_end":584,"column_start":5,"column_end":80}},{"value":"/ `P`, with optional trailing punctuation.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494386,"byte_end":494430,"line_start":585,"line_end":585,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494435,"byte_end":494438,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ Parsing continues until the end of this parse stream. The entire content","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494443,"byte_end":494519,"line_start":587,"line_end":587,"column_start":5,"column_end":81}},{"value":"/ of this parse stream must consist of `T` and `P`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494524,"byte_end":494577,"line_start":588,"line_end":588,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494582,"byte_end":494585,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494590,"byte_end":494603,"line_start":590,"line_end":590,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494608,"byte_end":494611,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494616,"byte_end":494634,"line_start":592,"line_end":592,"column_start":5,"column_end":23}},{"value":"/ # use quote::quote;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494639,"byte_end":494662,"line_start":593,"line_end":593,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494667,"byte_end":494672,"line_start":594,"line_end":594,"column_start":5,"column_end":10}},{"value":"/ use syn::{parenthesized, token, Ident, Result, Token, Type};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494677,"byte_end":494741,"line_start":595,"line_end":595,"column_start":5,"column_end":69}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494746,"byte_end":494787,"line_start":596,"line_end":596,"column_start":5,"column_end":46}},{"value":"/ use syn::punctuated::Punctuated;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494792,"byte_end":494828,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494833,"byte_end":494836,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ // Parse a simplified tuple struct syntax like:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494841,"byte_end":494892,"line_start":599,"line_end":599,"column_start":5,"column_end":56}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494897,"byte_end":494903,"line_start":600,"line_end":600,"column_start":5,"column_end":11}},{"value":"/ //     struct S(A, B);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494908,"byte_end":494934,"line_start":601,"line_end":601,"column_start":5,"column_end":31}},{"value":"/ struct TupleStruct {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494939,"byte_end":494963,"line_start":602,"line_end":602,"column_start":5,"column_end":29}},{"value":"/     struct_token: Token![struct],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":494968,"byte_end":495005,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/     ident: Ident,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495010,"byte_end":495031,"line_start":604,"line_end":604,"column_start":5,"column_end":26}},{"value":"/     paren_token: token::Paren,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495036,"byte_end":495070,"line_start":605,"line_end":605,"column_start":5,"column_end":39}},{"value":"/     fields: Punctuated<Type, Token![,]>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495075,"byte_end":495119,"line_start":606,"line_end":606,"column_start":5,"column_end":49}},{"value":"/     semi_token: Token![;],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495124,"byte_end":495154,"line_start":607,"line_end":607,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495159,"byte_end":495164,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495169,"byte_end":495172,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ impl Parse for TupleStruct {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495177,"byte_end":495209,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495214,"byte_end":495268,"line_start":611,"line_end":611,"column_start":5,"column_end":59}},{"value":"/         let content;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495273,"byte_end":495297,"line_start":612,"line_end":612,"column_start":5,"column_end":29}},{"value":"/         Ok(TupleStruct {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495302,"byte_end":495330,"line_start":613,"line_end":613,"column_start":5,"column_end":33}},{"value":"/             struct_token: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495335,"byte_end":495380,"line_start":614,"line_end":614,"column_start":5,"column_end":50}},{"value":"/             ident: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495385,"byte_end":495423,"line_start":615,"line_end":615,"column_start":5,"column_end":43}},{"value":"/             paren_token: parenthesized!(content in input),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495428,"byte_end":495490,"line_start":616,"line_end":616,"column_start":5,"column_end":67}},{"value":"/             fields: content.parse_terminated(Type::parse)?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495495,"byte_end":495558,"line_start":617,"line_end":617,"column_start":5,"column_end":68}},{"value":"/             semi_token: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495563,"byte_end":495606,"line_start":618,"line_end":618,"column_start":5,"column_end":48}},{"value":"/         })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495611,"byte_end":495625,"line_start":619,"line_end":619,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495630,"byte_end":495639,"line_start":620,"line_end":620,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495644,"byte_end":495649,"line_start":621,"line_end":621,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495654,"byte_end":495659,"line_start":622,"line_end":622,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495664,"byte_end":495681,"line_start":623,"line_end":623,"column_start":5,"column_end":22}},{"value":"/ #     let input = quote! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495686,"byte_end":495716,"line_start":624,"line_end":624,"column_start":5,"column_end":35}},{"value":"/ #         struct S(A, B);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495721,"byte_end":495750,"line_start":625,"line_end":625,"column_start":5,"column_end":34}},{"value":"/ #     };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495755,"byte_end":495767,"line_start":626,"line_end":626,"column_start":5,"column_end":17}},{"value":"/ #     syn::parse2::<TupleStruct>(input).unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495772,"byte_end":495825,"line_start":627,"line_end":627,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495830,"byte_end":495837,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":495842,"byte_end":495849,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497315,"byte_end":497323,"line_start":674,"line_end":674,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ParseBuffer>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether there are tokens remaining in this stream.","sig":null,"attributes":[{"value":"/ Returns whether there are tokens remaining in this stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496056,"byte_end":496118,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496123,"byte_end":496126,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ This method returns true at the end of the content of a set of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496131,"byte_end":496197,"line_start":639,"line_end":639,"column_start":5,"column_end":71}},{"value":"/ delimiters, as well as at the very end of the complete macro input.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496202,"byte_end":496273,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496278,"byte_end":496281,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496286,"byte_end":496299,"line_start":642,"line_end":642,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496304,"byte_end":496307,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496312,"byte_end":496330,"line_start":644,"line_end":644,"column_start":5,"column_end":23}},{"value":"/ use syn::{braced, token, Ident, Item, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496335,"byte_end":496392,"line_start":645,"line_end":645,"column_start":5,"column_end":62}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496397,"byte_end":496438,"line_start":646,"line_end":646,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496443,"byte_end":496446,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ // Parses a Rust `mod m { ... }` containing zero or more items.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496451,"byte_end":496518,"line_start":648,"line_end":648,"column_start":5,"column_end":72}},{"value":"/ struct Mod {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496523,"byte_end":496539,"line_start":649,"line_end":649,"column_start":5,"column_end":21}},{"value":"/     mod_token: Token![mod],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496544,"byte_end":496575,"line_start":650,"line_end":650,"column_start":5,"column_end":36}},{"value":"/     name: Ident,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496580,"byte_end":496600,"line_start":651,"line_end":651,"column_start":5,"column_end":25}},{"value":"/     brace_token: token::Brace,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496605,"byte_end":496639,"line_start":652,"line_end":652,"column_start":5,"column_end":39}},{"value":"/     items: Vec<Item>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496644,"byte_end":496669,"line_start":653,"line_end":653,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496674,"byte_end":496679,"line_start":654,"line_end":654,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496684,"byte_end":496687,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ impl Parse for Mod {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496692,"byte_end":496716,"line_start":656,"line_end":656,"column_start":5,"column_end":29}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496721,"byte_end":496775,"line_start":657,"line_end":657,"column_start":5,"column_end":59}},{"value":"/         let content;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496780,"byte_end":496804,"line_start":658,"line_end":658,"column_start":5,"column_end":29}},{"value":"/         Ok(Mod {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496809,"byte_end":496829,"line_start":659,"line_end":659,"column_start":5,"column_end":25}},{"value":"/             mod_token: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496834,"byte_end":496876,"line_start":660,"line_end":660,"column_start":5,"column_end":47}},{"value":"/             name: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496881,"byte_end":496918,"line_start":661,"line_end":661,"column_start":5,"column_end":42}},{"value":"/             brace_token: braced!(content in input),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496923,"byte_end":496978,"line_start":662,"line_end":662,"column_start":5,"column_end":60}},{"value":"/             items: {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":496983,"byte_end":497007,"line_start":663,"line_end":663,"column_start":5,"column_end":29}},{"value":"/                 let mut items = Vec::new();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497012,"byte_end":497059,"line_start":664,"line_end":664,"column_start":5,"column_end":52}},{"value":"/                 while !content.is_empty() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497064,"byte_end":497111,"line_start":665,"line_end":665,"column_start":5,"column_end":52}},{"value":"/                     items.push(content.parse()?);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497116,"byte_end":497169,"line_start":666,"line_end":666,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497174,"byte_end":497195,"line_start":667,"line_end":667,"column_start":5,"column_end":26}},{"value":"/                 items","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497200,"byte_end":497225,"line_start":668,"line_end":668,"column_start":5,"column_end":30}},{"value":"/             },","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497230,"byte_end":497248,"line_start":669,"line_end":669,"column_start":5,"column_end":23}},{"value":"/         })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497253,"byte_end":497267,"line_start":670,"line_end":670,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497272,"byte_end":497281,"line_start":671,"line_end":671,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497286,"byte_end":497291,"line_start":672,"line_end":672,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497296,"byte_end":497303,"line_start":673,"line_end":673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498937,"byte_end":498947,"line_start":719,"line_end":719,"column_start":12,"column_end":22},"name":"lookahead1","qualname":"<ParseBuffer>::lookahead1","value":"pub fn lookahead1(&Self) -> Lookahead1","parent":null,"children":[],"decl_id":null,"docs":" Constructs a helper for peeking at the next token in this stream and\n building an error message if it is not one of a set of expected tokens.","sig":null,"attributes":[{"value":"/ Constructs a helper for peeking at the next token in this stream and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497380,"byte_end":497452,"line_start":678,"line_end":678,"column_start":5,"column_end":77}},{"value":"/ building an error message if it is not one of a set of expected tokens.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497457,"byte_end":497532,"line_start":679,"line_end":679,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497537,"byte_end":497540,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497545,"byte_end":497558,"line_start":681,"line_end":681,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497563,"byte_end":497566,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497571,"byte_end":497589,"line_start":683,"line_end":683,"column_start":5,"column_end":23}},{"value":"/ use syn::{ConstParam, Ident, Lifetime, LifetimeDef, Result, Token, TypeParam};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497594,"byte_end":497676,"line_start":684,"line_end":684,"column_start":5,"column_end":87}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497681,"byte_end":497722,"line_start":685,"line_end":685,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497727,"byte_end":497730,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ // A generic parameter, a single one of the comma-separated elements inside","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497735,"byte_end":497814,"line_start":687,"line_end":687,"column_start":5,"column_end":84}},{"value":"/ // angle brackets in:","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497819,"byte_end":497844,"line_start":688,"line_end":688,"column_start":5,"column_end":30}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497849,"byte_end":497855,"line_start":689,"line_end":689,"column_start":5,"column_end":11}},{"value":"/ //     fn f<T: Clone, 'a, 'b: 'a, const N: usize>() { ... }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497860,"byte_end":497923,"line_start":690,"line_end":690,"column_start":5,"column_end":68}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497928,"byte_end":497934,"line_start":691,"line_end":691,"column_start":5,"column_end":11}},{"value":"/ // On invalid input, lookahead gives us a reasonable error message.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":497939,"byte_end":498010,"line_start":692,"line_end":692,"column_start":5,"column_end":76}},{"value":"/ //","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498015,"byte_end":498021,"line_start":693,"line_end":693,"column_start":5,"column_end":11}},{"value":"/ //     error: expected one of: identifier, lifetime, `const`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498026,"byte_end":498090,"line_start":694,"line_end":694,"column_start":5,"column_end":69}},{"value":"/ //       |","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498095,"byte_end":498109,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/ //     5 |     fn f<!Sized>() {}","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498114,"byte_end":498150,"line_start":696,"line_end":696,"column_start":5,"column_end":41}},{"value":"/ //       |          ^","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498155,"byte_end":498180,"line_start":697,"line_end":697,"column_start":5,"column_end":30}},{"value":"/ enum GenericParam {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498185,"byte_end":498208,"line_start":698,"line_end":698,"column_start":5,"column_end":28}},{"value":"/     Type(TypeParam),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498213,"byte_end":498237,"line_start":699,"line_end":699,"column_start":5,"column_end":29}},{"value":"/     Lifetime(LifetimeDef),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498242,"byte_end":498272,"line_start":700,"line_end":700,"column_start":5,"column_end":35}},{"value":"/     Const(ConstParam),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498277,"byte_end":498303,"line_start":701,"line_end":701,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498308,"byte_end":498313,"line_start":702,"line_end":702,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498318,"byte_end":498321,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ impl Parse for GenericParam {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498326,"byte_end":498359,"line_start":704,"line_end":704,"column_start":5,"column_end":38}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498364,"byte_end":498418,"line_start":705,"line_end":705,"column_start":5,"column_end":59}},{"value":"/         let lookahead = input.lookahead1();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498423,"byte_end":498470,"line_start":706,"line_end":706,"column_start":5,"column_end":52}},{"value":"/         if lookahead.peek(Ident) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498475,"byte_end":498513,"line_start":707,"line_end":707,"column_start":5,"column_end":43}},{"value":"/             input.parse().map(GenericParam::Type)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498518,"byte_end":498571,"line_start":708,"line_end":708,"column_start":5,"column_end":58}},{"value":"/         } else if lookahead.peek(Lifetime) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498576,"byte_end":498624,"line_start":709,"line_end":709,"column_start":5,"column_end":53}},{"value":"/             input.parse().map(GenericParam::Lifetime)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498629,"byte_end":498686,"line_start":710,"line_end":710,"column_start":5,"column_end":62}},{"value":"/         } else if lookahead.peek(Token![const]) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498691,"byte_end":498744,"line_start":711,"line_end":711,"column_start":5,"column_end":58}},{"value":"/             input.parse().map(GenericParam::Const)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498749,"byte_end":498803,"line_start":712,"line_end":712,"column_start":5,"column_end":59}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498808,"byte_end":498828,"line_start":713,"line_end":713,"column_start":5,"column_end":25}},{"value":"/             Err(lookahead.error())","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498833,"byte_end":498871,"line_start":714,"line_end":714,"column_start":5,"column_end":43}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498876,"byte_end":498889,"line_start":715,"line_end":715,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498894,"byte_end":498903,"line_start":716,"line_end":716,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498908,"byte_end":498913,"line_start":717,"line_end":717,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":498918,"byte_end":498925,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503838,"byte_end":503842,"line_start":849,"line_end":849,"column_start":12,"column_end":16},"name":"fork","qualname":"<ParseBuffer>::fork","value":"pub fn fork(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Forks a parse stream so that parsing tokens out of either the original\n or the fork does not advance the position of the other.","sig":null,"attributes":[{"value":"/ Forks a parse stream so that parsing tokens out of either the original","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499036,"byte_end":499110,"line_start":723,"line_end":723,"column_start":5,"column_end":79}},{"value":"/ or the fork does not advance the position of the other.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499115,"byte_end":499174,"line_start":724,"line_end":724,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499179,"byte_end":499182,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Performance","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499187,"byte_end":499204,"line_start":726,"line_end":726,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499209,"byte_end":499212,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ Forking a parse stream is a cheap fixed amount of work and does not","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499217,"byte_end":499288,"line_start":728,"line_end":728,"column_start":5,"column_end":76}},{"value":"/ involve copying token buffers. Where you might hit performance problems","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499293,"byte_end":499368,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ is if your macro ends up parsing a large amount of content more than","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499373,"byte_end":499445,"line_start":730,"line_end":730,"column_start":5,"column_end":77}},{"value":"/ once.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499450,"byte_end":499459,"line_start":731,"line_end":731,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499464,"byte_end":499467,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499472,"byte_end":499490,"line_start":733,"line_end":733,"column_start":5,"column_end":23}},{"value":"/ # use syn::{Expr, Result};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499495,"byte_end":499525,"line_start":734,"line_end":734,"column_start":5,"column_end":35}},{"value":"/ # use syn::parse::ParseStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499530,"byte_end":499564,"line_start":735,"line_end":735,"column_start":5,"column_end":39}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499569,"byte_end":499574,"line_start":736,"line_end":736,"column_start":5,"column_end":10}},{"value":"/ # fn bad(input: ParseStream) -> Result<Expr> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499579,"byte_end":499629,"line_start":737,"line_end":737,"column_start":5,"column_end":55}},{"value":"/ // Do not do this.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499634,"byte_end":499656,"line_start":738,"line_end":738,"column_start":5,"column_end":27}},{"value":"/ if input.fork().parse::<Expr>().is_ok() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499661,"byte_end":499706,"line_start":739,"line_end":739,"column_start":5,"column_end":50}},{"value":"/     return input.parse::<Expr>();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499711,"byte_end":499748,"line_start":740,"line_end":740,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499753,"byte_end":499758,"line_start":741,"line_end":741,"column_start":5,"column_end":10}},{"value":"/ # unimplemented!()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499763,"byte_end":499785,"line_start":742,"line_end":742,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499790,"byte_end":499797,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499802,"byte_end":499809,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499814,"byte_end":499817,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ As a rule, avoid parsing an unbounded amount of tokens out of a forked","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499822,"byte_end":499896,"line_start":746,"line_end":746,"column_start":5,"column_end":79}},{"value":"/ parse stream. Only use a fork when the amount of work performed against","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499901,"byte_end":499976,"line_start":747,"line_end":747,"column_start":5,"column_end":80}},{"value":"/ the fork is small and bounded.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":499981,"byte_end":500015,"line_start":748,"line_end":748,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500020,"byte_end":500023,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ When complex speculative parsing against the forked stream is","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500028,"byte_end":500093,"line_start":750,"line_end":750,"column_start":5,"column_end":70}},{"value":"/ unavoidable, use [`parse::discouraged::Speculative`] to advance the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500098,"byte_end":500169,"line_start":751,"line_end":751,"column_start":5,"column_end":76}},{"value":"/ original stream once the fork's parse is determined to have been","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500174,"byte_end":500242,"line_start":752,"line_end":752,"column_start":5,"column_end":73}},{"value":"/ successful.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500247,"byte_end":500262,"line_start":753,"line_end":753,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500267,"byte_end":500270,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ For a lower level way to perform speculative parsing at the token level,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500275,"byte_end":500351,"line_start":755,"line_end":755,"column_start":5,"column_end":81}},{"value":"/ consider using [`ParseStream::step`] instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500356,"byte_end":500405,"line_start":756,"line_end":756,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500410,"byte_end":500413,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ [`parse::discouraged::Speculative`]: discouraged::Speculative","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500418,"byte_end":500483,"line_start":758,"line_end":758,"column_start":5,"column_end":70}},{"value":"/ [`ParseStream::step`]: ParseBuffer::step","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500488,"byte_end":500532,"line_start":759,"line_end":759,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500537,"byte_end":500540,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500545,"byte_end":500558,"line_start":761,"line_end":761,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500563,"byte_end":500566,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The parse implementation shown here parses possibly restricted `pub`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500571,"byte_end":500643,"line_start":763,"line_end":763,"column_start":5,"column_end":77}},{"value":"/ visibilities.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500648,"byte_end":500665,"line_start":764,"line_end":764,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500670,"byte_end":500673,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ - `pub`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500678,"byte_end":500689,"line_start":766,"line_end":766,"column_start":5,"column_end":16}},{"value":"/ - `pub(crate)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500694,"byte_end":500712,"line_start":767,"line_end":767,"column_start":5,"column_end":23}},{"value":"/ - `pub(self)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500717,"byte_end":500734,"line_start":768,"line_end":768,"column_start":5,"column_end":22}},{"value":"/ - `pub(super)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500739,"byte_end":500757,"line_start":769,"line_end":769,"column_start":5,"column_end":23}},{"value":"/ - `pub(in some::path)`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500762,"byte_end":500788,"line_start":770,"line_end":770,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500793,"byte_end":500796,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ To handle the case of visibilities inside of tuple structs, the parser","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500801,"byte_end":500875,"line_start":772,"line_end":772,"column_start":5,"column_end":79}},{"value":"/ needs to distinguish parentheses that specify visibility restrictions","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500880,"byte_end":500953,"line_start":773,"line_end":773,"column_start":5,"column_end":78}},{"value":"/ from parentheses that form part of a tuple type.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":500958,"byte_end":501010,"line_start":774,"line_end":774,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501015,"byte_end":501018,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501023,"byte_end":501041,"line_start":776,"line_end":776,"column_start":5,"column_end":23}},{"value":"/ # struct A;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501046,"byte_end":501061,"line_start":777,"line_end":777,"column_start":5,"column_end":20}},{"value":"/ # struct B;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501066,"byte_end":501081,"line_start":778,"line_end":778,"column_start":5,"column_end":20}},{"value":"/ # struct C;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501086,"byte_end":501101,"line_start":779,"line_end":779,"column_start":5,"column_end":20}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501106,"byte_end":501111,"line_start":780,"line_end":780,"column_start":5,"column_end":10}},{"value":"/ struct S(pub(crate) A, pub (B, C));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501116,"byte_end":501155,"line_start":781,"line_end":781,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501160,"byte_end":501167,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501172,"byte_end":501175,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ In this example input the first tuple struct element of `S` has","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501180,"byte_end":501247,"line_start":784,"line_end":784,"column_start":5,"column_end":72}},{"value":"/ `pub(crate)` visibility while the second tuple struct element has `pub`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501252,"byte_end":501327,"line_start":785,"line_end":785,"column_start":5,"column_end":80}},{"value":"/ visibility; the parentheses around `(B, C)` are part of the type rather","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501332,"byte_end":501407,"line_start":786,"line_end":786,"column_start":5,"column_end":80}},{"value":"/ than part of a visibility restriction.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501412,"byte_end":501454,"line_start":787,"line_end":787,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501459,"byte_end":501462,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ The parser uses a forked parse stream to check the first token inside of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501467,"byte_end":501543,"line_start":789,"line_end":789,"column_start":5,"column_end":81}},{"value":"/ parentheses after the `pub` keyword. This is a small bounded amount of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501548,"byte_end":501622,"line_start":790,"line_end":790,"column_start":5,"column_end":79}},{"value":"/ work performed against the forked parse stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501627,"byte_end":501678,"line_start":791,"line_end":791,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501683,"byte_end":501686,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501691,"byte_end":501709,"line_start":793,"line_end":793,"column_start":5,"column_end":23}},{"value":"/ use syn::{parenthesized, token, Ident, Path, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501714,"byte_end":501778,"line_start":794,"line_end":794,"column_start":5,"column_end":69}},{"value":"/ use syn::ext::IdentExt;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501783,"byte_end":501810,"line_start":795,"line_end":795,"column_start":5,"column_end":32}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501815,"byte_end":501856,"line_start":796,"line_end":796,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501861,"byte_end":501864,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ struct PubVisibility {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501869,"byte_end":501895,"line_start":798,"line_end":798,"column_start":5,"column_end":31}},{"value":"/     pub_token: Token![pub],","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501900,"byte_end":501931,"line_start":799,"line_end":799,"column_start":5,"column_end":36}},{"value":"/     restricted: Option<Restricted>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501936,"byte_end":501975,"line_start":800,"line_end":800,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501980,"byte_end":501985,"line_start":801,"line_end":801,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501990,"byte_end":501993,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ struct Restricted {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":501998,"byte_end":502021,"line_start":803,"line_end":803,"column_start":5,"column_end":28}},{"value":"/     paren_token: token::Paren,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502026,"byte_end":502060,"line_start":804,"line_end":804,"column_start":5,"column_end":39}},{"value":"/     in_token: Option<Token![in]>,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502065,"byte_end":502102,"line_start":805,"line_end":805,"column_start":5,"column_end":42}},{"value":"/     path: Path,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502107,"byte_end":502126,"line_start":806,"line_end":806,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502131,"byte_end":502136,"line_start":807,"line_end":807,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502141,"byte_end":502144,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ impl Parse for PubVisibility {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502149,"byte_end":502183,"line_start":809,"line_end":809,"column_start":5,"column_end":39}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502188,"byte_end":502242,"line_start":810,"line_end":810,"column_start":5,"column_end":59}},{"value":"/         let pub_token: Token![pub] = input.parse()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502247,"byte_end":502303,"line_start":811,"line_end":811,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502308,"byte_end":502311,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/         if input.peek(token::Paren) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502316,"byte_end":502357,"line_start":813,"line_end":813,"column_start":5,"column_end":46}},{"value":"/             let ahead = input.fork();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502362,"byte_end":502403,"line_start":814,"line_end":814,"column_start":5,"column_end":46}},{"value":"/             let mut content;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502408,"byte_end":502440,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/             parenthesized!(content in ahead);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502445,"byte_end":502494,"line_start":816,"line_end":816,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502499,"byte_end":502502,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/             if content.peek(Token![crate])","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502507,"byte_end":502553,"line_start":818,"line_end":818,"column_start":5,"column_end":51}},{"value":"/                 || content.peek(Token![self])","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502558,"byte_end":502607,"line_start":819,"line_end":819,"column_start":5,"column_end":54}},{"value":"/                 || content.peek(Token![super])","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502612,"byte_end":502662,"line_start":820,"line_end":820,"column_start":5,"column_end":55}},{"value":"/             {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502667,"byte_end":502684,"line_start":821,"line_end":821,"column_start":5,"column_end":22}},{"value":"/                 return Ok(PubVisibility {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502689,"byte_end":502734,"line_start":822,"line_end":822,"column_start":5,"column_end":50}},{"value":"/                     pub_token: pub_token,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502739,"byte_end":502784,"line_start":823,"line_end":823,"column_start":5,"column_end":50}},{"value":"/                     restricted: Some(Restricted {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502789,"byte_end":502842,"line_start":824,"line_end":824,"column_start":5,"column_end":58}},{"value":"/                         paren_token: parenthesized!(content in input),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502847,"byte_end":502921,"line_start":825,"line_end":825,"column_start":5,"column_end":79}},{"value":"/                         in_token: None,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502926,"byte_end":502969,"line_start":826,"line_end":826,"column_start":5,"column_end":48}},{"value":"/                         path: Path::from(content.call(Ident::parse_any)?),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":502974,"byte_end":503052,"line_start":827,"line_end":827,"column_start":5,"column_end":83}},{"value":"/                     }),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503057,"byte_end":503084,"line_start":828,"line_end":828,"column_start":5,"column_end":32}},{"value":"/                 });","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503089,"byte_end":503112,"line_start":829,"line_end":829,"column_start":5,"column_end":28}},{"value":"/             } else if content.peek(Token![in]) {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503117,"byte_end":503169,"line_start":830,"line_end":830,"column_start":5,"column_end":57}},{"value":"/                 return Ok(PubVisibility {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503174,"byte_end":503219,"line_start":831,"line_end":831,"column_start":5,"column_end":50}},{"value":"/                     pub_token: pub_token,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503224,"byte_end":503269,"line_start":832,"line_end":832,"column_start":5,"column_end":50}},{"value":"/                     restricted: Some(Restricted {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503274,"byte_end":503327,"line_start":833,"line_end":833,"column_start":5,"column_end":58}},{"value":"/                         paren_token: parenthesized!(content in input),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503332,"byte_end":503406,"line_start":834,"line_end":834,"column_start":5,"column_end":79}},{"value":"/                         in_token: Some(content.parse()?),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503411,"byte_end":503472,"line_start":835,"line_end":835,"column_start":5,"column_end":66}},{"value":"/                         path: content.call(Path::parse_mod_style)?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503477,"byte_end":503548,"line_start":836,"line_end":836,"column_start":5,"column_end":76}},{"value":"/                     }),","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503553,"byte_end":503580,"line_start":837,"line_end":837,"column_start":5,"column_end":32}},{"value":"/                 });","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503585,"byte_end":503608,"line_start":838,"line_end":838,"column_start":5,"column_end":28}},{"value":"/             }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503613,"byte_end":503630,"line_start":839,"line_end":839,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503635,"byte_end":503648,"line_start":840,"line_end":840,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503653,"byte_end":503656,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/         Ok(PubVisibility {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503661,"byte_end":503691,"line_start":842,"line_end":842,"column_start":5,"column_end":35}},{"value":"/             pub_token: pub_token,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503696,"byte_end":503733,"line_start":843,"line_end":843,"column_start":5,"column_end":42}},{"value":"/             restricted: None,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503738,"byte_end":503771,"line_start":844,"line_end":844,"column_start":5,"column_end":38}},{"value":"/         })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503776,"byte_end":503790,"line_start":845,"line_end":845,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503795,"byte_end":503804,"line_start":846,"line_end":846,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503809,"byte_end":503814,"line_start":847,"line_end":847,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":503819,"byte_end":503826,"line_start":848,"line_end":848,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505008,"byte_end":505013,"line_start":888,"line_end":888,"column_start":12,"column_end":17},"name":"error","qualname":"<ParseBuffer>::error","value":"pub fn error<T: Display>(&Self, T) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Triggers an error at the current position of the parse stream.","sig":null,"attributes":[{"value":"/ Triggers an error at the current position of the parse stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504165,"byte_end":504231,"line_start":860,"line_end":860,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504236,"byte_end":504239,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504244,"byte_end":504257,"line_start":862,"line_end":862,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504262,"byte_end":504265,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504270,"byte_end":504288,"line_start":864,"line_end":864,"column_start":5,"column_end":23}},{"value":"/ use syn::{Expr, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504293,"byte_end":504328,"line_start":865,"line_end":865,"column_start":5,"column_end":40}},{"value":"/ use syn::parse::{Parse, ParseStream};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504333,"byte_end":504374,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504379,"byte_end":504382,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ // Some kind of loop: `while` or `for` or `loop`.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504387,"byte_end":504440,"line_start":868,"line_end":868,"column_start":5,"column_end":58}},{"value":"/ struct Loop {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504445,"byte_end":504462,"line_start":869,"line_end":869,"column_start":5,"column_end":22}},{"value":"/     expr: Expr,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504467,"byte_end":504486,"line_start":870,"line_end":870,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504491,"byte_end":504496,"line_start":871,"line_end":871,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504501,"byte_end":504504,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ impl Parse for Loop {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504509,"byte_end":504534,"line_start":873,"line_end":873,"column_start":5,"column_end":30}},{"value":"/     fn parse(input: ParseStream) -> Result<Self> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504539,"byte_end":504593,"line_start":874,"line_end":874,"column_start":5,"column_end":59}},{"value":"/         if input.peek(Token![while])","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504598,"byte_end":504638,"line_start":875,"line_end":875,"column_start":5,"column_end":45}},{"value":"/             || input.peek(Token![for])","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504643,"byte_end":504685,"line_start":876,"line_end":876,"column_start":5,"column_end":47}},{"value":"/             || input.peek(Token![loop])","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504690,"byte_end":504733,"line_start":877,"line_end":877,"column_start":5,"column_end":48}},{"value":"/         {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504738,"byte_end":504751,"line_start":878,"line_end":878,"column_start":5,"column_end":18}},{"value":"/             Ok(Loop {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504756,"byte_end":504781,"line_start":879,"line_end":879,"column_start":5,"column_end":30}},{"value":"/                 expr: input.parse()?,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504786,"byte_end":504827,"line_start":880,"line_end":880,"column_start":5,"column_end":46}},{"value":"/             })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504832,"byte_end":504850,"line_start":881,"line_end":881,"column_start":5,"column_end":23}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504855,"byte_end":504875,"line_start":882,"line_end":882,"column_start":5,"column_end":25}},{"value":"/             Err(input.error(\"expected some kind of loop\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504880,"byte_end":504942,"line_start":883,"line_end":883,"column_start":5,"column_end":67}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504947,"byte_end":504960,"line_start":884,"line_end":884,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504965,"byte_end":504974,"line_start":885,"line_end":885,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504979,"byte_end":504984,"line_start":886,"line_end":886,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":504989,"byte_end":504996,"line_start":887,"line_end":887,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506916,"byte_end":506920,"line_start":939,"line_end":939,"column_start":12,"column_end":16},"name":"step","qualname":"<ParseBuffer>::step","value":"pub fn step<F, R>(&Self, F) -> Result<R> where F: for<'c> FnOnce(StepCursor)\n-> Result<(R, Cursor)>","parent":null,"children":[],"decl_id":null,"docs":" Speculatively parses tokens from this parse stream, advancing the\n position of this stream only if parsing succeeds.","sig":null,"attributes":[{"value":"/ Speculatively parses tokens from this parse stream, advancing the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505125,"byte_end":505194,"line_start":892,"line_end":892,"column_start":5,"column_end":74}},{"value":"/ position of this stream only if parsing succeeds.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505199,"byte_end":505252,"line_start":893,"line_end":893,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505257,"byte_end":505260,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ This is a powerful low-level API used for defining the `Parse` impls of","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505265,"byte_end":505340,"line_start":895,"line_end":895,"column_start":5,"column_end":80}},{"value":"/ the basic built-in token types. It is not something that will be used","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505345,"byte_end":505418,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ widely outside of the Syn codebase.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505423,"byte_end":505462,"line_start":897,"line_end":897,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505467,"byte_end":505470,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505475,"byte_end":505488,"line_start":899,"line_end":899,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505493,"byte_end":505496,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505501,"byte_end":505519,"line_start":901,"line_end":901,"column_start":5,"column_end":23}},{"value":"/ use proc_macro2::TokenTree;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505524,"byte_end":505555,"line_start":902,"line_end":902,"column_start":5,"column_end":36}},{"value":"/ use syn::Result;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505560,"byte_end":505580,"line_start":903,"line_end":903,"column_start":5,"column_end":25}},{"value":"/ use syn::parse::ParseStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505585,"byte_end":505617,"line_start":904,"line_end":904,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505622,"byte_end":505625,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ // This function advances the stream past the next occurrence of `@`. If","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505630,"byte_end":505706,"line_start":906,"line_end":906,"column_start":5,"column_end":81}},{"value":"/ // no `@` is present in the stream, the stream position is unchanged and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505711,"byte_end":505787,"line_start":907,"line_end":907,"column_start":5,"column_end":81}},{"value":"/ // an error is returned.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505792,"byte_end":505820,"line_start":908,"line_end":908,"column_start":5,"column_end":33}},{"value":"/ fn skip_past_next_at(input: ParseStream) -> Result<()> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505825,"byte_end":505885,"line_start":909,"line_end":909,"column_start":5,"column_end":65}},{"value":"/     input.step(|cursor| {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505890,"byte_end":505919,"line_start":910,"line_end":910,"column_start":5,"column_end":34}},{"value":"/         let mut rest = *cursor;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505924,"byte_end":505959,"line_start":911,"line_end":911,"column_start":5,"column_end":40}},{"value":"/         while let Some((tt, next)) = rest.token_tree() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":505964,"byte_end":506024,"line_start":912,"line_end":912,"column_start":5,"column_end":65}},{"value":"/             match &tt {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506029,"byte_end":506056,"line_start":913,"line_end":913,"column_start":5,"column_end":32}},{"value":"/                 TokenTree::Punct(punct) if punct.as_char() == '@' => {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506061,"byte_end":506135,"line_start":914,"line_end":914,"column_start":5,"column_end":79}},{"value":"/                     return Ok(((), next));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506140,"byte_end":506186,"line_start":915,"line_end":915,"column_start":5,"column_end":51}},{"value":"/                 }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506191,"byte_end":506212,"line_start":916,"line_end":916,"column_start":5,"column_end":26}},{"value":"/                 _ => rest = next,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506217,"byte_end":506254,"line_start":917,"line_end":917,"column_start":5,"column_end":42}},{"value":"/             }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506259,"byte_end":506276,"line_start":918,"line_end":918,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506281,"byte_end":506294,"line_start":919,"line_end":919,"column_start":5,"column_end":18}},{"value":"/         Err(cursor.error(\"no `@` was found after this point\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506299,"byte_end":506365,"line_start":920,"line_end":920,"column_start":5,"column_end":71}},{"value":"/     })","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506370,"byte_end":506380,"line_start":921,"line_end":921,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506385,"byte_end":506390,"line_start":922,"line_end":922,"column_start":5,"column_end":10}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506395,"byte_end":506400,"line_start":923,"line_end":923,"column_start":5,"column_end":10}},{"value":"/ # fn remainder_after_skipping_past_next_at(","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506405,"byte_end":506452,"line_start":924,"line_end":924,"column_start":5,"column_end":52}},{"value":"/ #     input: ParseStream,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506457,"byte_end":506486,"line_start":925,"line_end":925,"column_start":5,"column_end":34}},{"value":"/ # ) -> Result<proc_macro2::TokenStream> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506491,"byte_end":506536,"line_start":926,"line_end":926,"column_start":5,"column_end":50}},{"value":"/ #     skip_past_next_at(input)?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506541,"byte_end":506577,"line_start":927,"line_end":927,"column_start":5,"column_end":41}},{"value":"/ #     input.parse()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506582,"byte_end":506605,"line_start":928,"line_end":928,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506610,"byte_end":506617,"line_start":929,"line_end":929,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506622,"byte_end":506627,"line_start":930,"line_end":930,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506632,"byte_end":506649,"line_start":931,"line_end":931,"column_start":5,"column_end":22}},{"value":"/ #     use syn::parse::Parser;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506654,"byte_end":506687,"line_start":932,"line_end":932,"column_start":5,"column_end":38}},{"value":"/ #     let remainder = remainder_after_skipping_past_next_at","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506692,"byte_end":506755,"line_start":933,"line_end":933,"column_start":5,"column_end":68}},{"value":"/ #         .parse_str(\"a @ b c\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506760,"byte_end":506795,"line_start":934,"line_end":934,"column_start":5,"column_end":40}},{"value":"/ #         .unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506800,"byte_end":506824,"line_start":935,"line_end":935,"column_start":5,"column_end":29}},{"value":"/ #     assert_eq!(remainder.to_string(), \"b c\");","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506829,"byte_end":506880,"line_start":936,"line_end":936,"column_start":5,"column_end":56}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506885,"byte_end":506892,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":506897,"byte_end":506904,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":508651,"byte_end":508657,"line_start":974,"line_end":974,"column_start":12,"column_end":18},"name":"cursor","qualname":"<ParseBuffer>::cursor","value":"pub fn cursor(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Provides low-level access to the token representation underlying this\n parse stream.","sig":null,"attributes":[{"value":"/ Provides low-level access to the token representation underlying this","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":508406,"byte_end":508479,"line_start":969,"line_end":969,"column_start":5,"column_end":78}},{"value":"/ parse stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":508484,"byte_end":508501,"line_start":970,"line_end":970,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":508506,"byte_end":508509,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ Cursors are immutable so no operations you perform against the cursor","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":508514,"byte_end":508587,"line_start":972,"line_end":972,"column_start":5,"column_end":78}},{"value":"/ will affect the state of this parse stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":508592,"byte_end":508639,"line_start":973,"line_end":973,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511059,"byte_end":511065,"line_start":1057,"line_end":1057,"column_start":11,"column_end":17},"name":"Parser","qualname":"::parse::Parser","value":"Parser: Sized","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780}],"decl_id":null,"docs":" Parser that can parse Rust tokens into a particular syntax tree node.","sig":null,"attributes":[{"value":"/ Parser that can parse Rust tokens into a particular syntax tree node.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":510780,"byte_end":510853,"line_start":1050,"line_end":1050,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":510854,"byte_end":510857,"line_start":1051,"line_end":1051,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about parsing in Syn.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":510858,"byte_end":510931,"line_start":1052,"line_end":1052,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":510932,"byte_end":510935,"line_start":1053,"line_end":1053,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: self","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":510936,"byte_end":510968,"line_start":1054,"line_end":1054,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":510969,"byte_end":510972,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ *This trait is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":510973,"byte_end":511048,"line_start":1056,"line_end":1056,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511084,"byte_end":511090,"line_start":1058,"line_end":1058,"column_start":10,"column_end":16},"name":"Output","qualname":"::parse::Parser::Output","value":"type Output;","parent":{"krate":0,"index":1775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511337,"byte_end":511343,"line_start":1064,"line_end":1064,"column_start":8,"column_end":14},"name":"parse2","qualname":"::parse::Parser::parse2","value":"pub fn parse2(Self, TokenStream) -> Result<Self::Output>","parent":{"krate":0,"index":1775},"children":[],"decl_id":null,"docs":" Parse a proc-macro2 token stream into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse a proc-macro2 token stream into the chosen syntax tree node.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511097,"byte_end":511167,"line_start":1060,"line_end":1060,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511172,"byte_end":511175,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ This function will check that the input is fully parsed. If there are","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511180,"byte_end":511253,"line_start":1062,"line_end":1062,"column_start":5,"column_end":78}},{"value":"/ any unparsed tokens at the end of the stream, an error is returned.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511258,"byte_end":511329,"line_start":1063,"line_end":1063,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511902,"byte_end":511907,"line_start":1077,"line_end":1077,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse::Parser::parse","value":"pub fn parse(Self, proc_macro::TokenStream) -> Result<Self::Output>","parent":{"krate":0,"index":1775},"children":[],"decl_id":null,"docs":" Parse tokens of source code into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse tokens of source code into the chosen syntax tree node.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511401,"byte_end":511466,"line_start":1066,"line_end":1066,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511471,"byte_end":511474,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ This function will check that the input is fully parsed. If there are","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511479,"byte_end":511552,"line_start":1068,"line_end":1068,"column_start":5,"column_end":78}},{"value":"/ any unparsed tokens at the end of the stream, an error is returned.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511557,"byte_end":511628,"line_start":1069,"line_end":1069,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511633,"byte_end":511636,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ *This method is available if Syn is built with both the `\"parsing\"` and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511641,"byte_end":511716,"line_start":1071,"line_end":1071,"column_start":5,"column_end":80}},{"value":"/ `\"proc-macro\"` features.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511721,"byte_end":511750,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"cfg(all(not(all(target_arch = \"wasm32\",\n                  any(target_os = \"unknown\", target_os = \"wasi\"))), feature =\n          \"proc-macro\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511755,"byte_end":511894,"line_start":1073,"line_end":1076,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512416,"byte_end":512425,"line_start":1090,"line_end":1090,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::parse::Parser::parse_str","value":"pub fn parse_str(Self, &str) -> Result<Self::Output>","parent":{"krate":0,"index":1775},"children":[],"decl_id":null,"docs":" Parse a string of Rust code into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse a string of Rust code into the chosen syntax tree node.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512044,"byte_end":512109,"line_start":1081,"line_end":1081,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512114,"byte_end":512117,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ This function will check that the input is fully parsed. If there are","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512122,"byte_end":512195,"line_start":1083,"line_end":1083,"column_start":5,"column_end":78}},{"value":"/ any unparsed tokens at the end of the string, an error is returned.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512200,"byte_end":512271,"line_start":1084,"line_end":1084,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512276,"byte_end":512279,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ # Hygiene","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512284,"byte_end":512297,"line_start":1086,"line_end":1086,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512302,"byte_end":512305,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ Every span in the resulting syntax tree will be set to resolve at the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512310,"byte_end":512383,"line_start":1088,"line_end":1088,"column_start":5,"column_end":78}},{"value":"/ macro call site.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512388,"byte_end":512408,"line_start":1089,"line_end":1089,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512583,"byte_end":512597,"line_start":1096,"line_end":1096,"column_start":8,"column_end":22},"name":"__parse_scoped","qualname":"::parse::Parser::__parse_scoped","value":"pub fn __parse_scoped(Self, Span, TokenStream) -> Result<Self::Output>","parent":{"krate":0,"index":1775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1793},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521013,"byte_end":521022,"line_start":3,"line_end":3,"column_start":11,"column_end":20},"name":"IntoSpans","qualname":"::span::IntoSpans","value":"IntoSpans<S>","parent":null,"children":[{"krate":0,"index":1795}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521035,"byte_end":521045,"line_start":4,"line_end":4,"column_start":8,"column_end":18},"name":"into_spans","qualname":"::span::IntoSpans::into_spans","value":"pub fn into_spans(Self) -> S","parent":{"krate":0,"index":1793},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521726,"byte_end":521735,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"name":"FromSpans","qualname":"::span::FromSpans","value":"FromSpans: Sized","parent":null,"children":[{"krate":0,"index":1824}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521688,"byte_end":521715,"line_start":43,"line_end":43,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521752,"byte_end":521762,"line_start":45,"line_end":45,"column_start":8,"column_end":18},"name":"from_spans","qualname":"::span::FromSpans::from_spans","value":"pub fn from_spans(&[Span]) -> Self","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1893},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":525328,"byte_end":525334,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" The result of a Syn parser.\n","sig":null,"attributes":[{"value":"/ The result of a Syn parser.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":525287,"byte_end":525318,"line_start":17,"line_end":17,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1895},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":525789,"byte_end":525794,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898}],"decl_id":null,"docs":" Error returned when a Syn parser cannot parse the input tokens.","sig":null,"attributes":[{"value":"/ Error returned when a Syn parser cannot parse the input tokens.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":525372,"byte_end":525439,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":525440,"byte_end":525443,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Refer to the [module documentation] for details about parsing in Syn.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":525444,"byte_end":525517,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":525518,"byte_end":525521,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":525522,"byte_end":525560,"line_start":24,"line_end":24,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":525561,"byte_end":525564,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ *This type is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":525565,"byte_end":525639,"line_start":26,"line_end":26,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527601,"byte_end":527604,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<Error>::new","value":"pub fn new<T: Display>(Span, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Usually the [`ParseStream::error`] method will be used instead, which\n automatically uses the correct span from the current position of the\n parse stream.","sig":null,"attributes":[{"value":"/ Usually the [`ParseStream::error`] method will be used instead, which","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526326,"byte_end":526399,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ automatically uses the correct span from the current position of the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526404,"byte_end":526476,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ parse stream.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526481,"byte_end":526498,"line_start":49,"line_end":49,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526503,"byte_end":526506,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Use `Error::new` when the error needs to be triggered on some span other","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526511,"byte_end":526587,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/ than where the parse stream is currently positioned.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526592,"byte_end":526648,"line_start":52,"line_end":52,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526653,"byte_end":526656,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ [`ParseStream::error`]: crate::parse::ParseBuffer::error","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526661,"byte_end":526721,"line_start":54,"line_end":54,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526726,"byte_end":526729,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526734,"byte_end":526747,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526752,"byte_end":526755,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526760,"byte_end":526778,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ use syn::{Error, Ident, LitStr, Result, Token};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526783,"byte_end":526834,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/ use syn::parse::ParseStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526839,"byte_end":526871,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526876,"byte_end":526879,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ // Parses input that looks like `name = \"string\"` where the key must be","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526884,"byte_end":526959,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ // the identifier `name` and the value may be any string literal.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526964,"byte_end":527033,"line_start":63,"line_end":63,"column_start":5,"column_end":74}},{"value":"/ // Returns the string literal.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527038,"byte_end":527072,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ fn parse_name(input: ParseStream) -> Result<LitStr> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527077,"byte_end":527134,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/     let name_token: Ident = input.parse()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527139,"byte_end":527186,"line_start":66,"line_end":66,"column_start":5,"column_end":52}},{"value":"/     if name_token != \"name\" {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527191,"byte_end":527224,"line_start":67,"line_end":67,"column_start":5,"column_end":38}},{"value":"/         // Trigger an error not on the current position of the stream,","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527229,"byte_end":527303,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/         // but on the position of the unexpected identifier.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527308,"byte_end":527372,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/         return Err(Error::new(name_token.span(), \"expected `name`\"));","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527377,"byte_end":527450,"line_start":70,"line_end":70,"column_start":5,"column_end":78}},{"value":"/     }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527455,"byte_end":527464,"line_start":71,"line_end":71,"column_start":5,"column_end":14}},{"value":"/     input.parse::<Token![=]>()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527469,"byte_end":527505,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/     let s: LitStr = input.parse()?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527510,"byte_end":527549,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/     Ok(s)","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527554,"byte_end":527567,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527572,"byte_end":527577,"line_start":75,"line_end":75,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527582,"byte_end":527589,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528551,"byte_end":528562,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"new_spanned","qualname":"<Error>::new_spanned","value":"pub fn new_spanned<T: ToTokens, U: Display>(T, U) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an error with the specified message spanning the given syntax\n tree node.","sig":null,"attributes":[{"value":"/ Creates an error with the specified message spanning the given syntax","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527824,"byte_end":527897,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ tree node.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527902,"byte_end":527916,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527921,"byte_end":527924,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Unlike the `Error::new` constructor, this constructor takes an argument","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":527929,"byte_end":528004,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ `tokens` which is a syntax tree node. This allows the resulting `Error`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528009,"byte_end":528084,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ to attempt to span all tokens inside of `tokens`. While you would","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528089,"byte_end":528158,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"/ typically be able to use the `Spanned` trait with the above `Error::new`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528163,"byte_end":528239,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/ constructor, implementation limitations today mean that","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528244,"byte_end":528303,"line_start":92,"line_end":92,"column_start":5,"column_end":64}},{"value":"/ `Error::new_spanned` may provide a higher-quality error message on","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528308,"byte_end":528378,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ stable Rust.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528383,"byte_end":528399,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528404,"byte_end":528407,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ When in doubt it's recommended to stick to `Error::new` (or","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528412,"byte_end":528475,"line_start":96,"line_end":96,"column_start":5,"column_end":68}},{"value":"/ `ParseStream::error`)!","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528480,"byte_end":528506,"line_start":97,"line_end":97,"column_start":5,"column_end":31}},{"value":"cfg(feature = \"printing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528511,"byte_end":528539,"line_start":98,"line_end":98,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":529236,"byte_end":529240,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"span","qualname":"<Error>::span","value":"pub fn span(&Self) -> Span","parent":null,"children":[],"decl_id":null,"docs":" The source location of the error.","sig":null,"attributes":[{"value":"/ The source location of the error.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":528992,"byte_end":529029,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":529034,"byte_end":529037,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Spans are not thread-safe so this function returns `Span::call_site()`","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":529042,"byte_end":529116,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ if called from a different thread than the one on which the `Error` was","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":529121,"byte_end":529196,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"/ originally created.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":529201,"byte_end":529224,"line_start":114,"line_end":114,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1908},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":530053,"byte_end":530069,"line_start":141,"line_end":141,"column_start":12,"column_end":28},"name":"to_compile_error","qualname":"<Error>::to_compile_error","value":"pub fn to_compile_error(&Self) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Render the error as an invocation of [`compile_error!`].","sig":null,"attributes":[{"value":"/ Render the error as an invocation of [`compile_error!`].","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":529752,"byte_end":529812,"line_start":135,"line_end":135,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":529817,"byte_end":529820,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The [`parse_macro_input!`] macro provides a convenient way to invoke","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":529825,"byte_end":529897,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ this method correctly in a procedural macro.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":529902,"byte_end":529950,"line_start":138,"line_end":138,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":529955,"byte_end":529958,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`compile_error!`]: https://doc.rust-lang.org/std/macro.compile_error.html","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":529963,"byte_end":530041,"line_start":140,"line_end":140,"column_start":5,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21981,"byte_end":21986,"line_start":629,"line_end":629,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse","value":"pub fn parse<T: parse::Parse>(proc_macro::TokenStream) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse tokens of source code into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse tokens of source code into the chosen syntax tree node.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20505,"byte_end":20570,"line_start":583,"line_end":583,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20571,"byte_end":20574,"line_start":584,"line_end":584,"column_start":1,"column_end":4}},{"value":"/ This is preferred over parsing a string because tokens are able to preserve","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20575,"byte_end":20654,"line_start":585,"line_end":585,"column_start":1,"column_end":80}},{"value":"/ information about where in the user's code they were originally written (the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20655,"byte_end":20735,"line_start":586,"line_end":586,"column_start":1,"column_end":81}},{"value":"/ \"span\" of the token), possibly allowing the compiler to produce better error","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20736,"byte_end":20816,"line_start":587,"line_end":587,"column_start":1,"column_end":81}},{"value":"/ messages.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20817,"byte_end":20830,"line_start":588,"line_end":588,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20831,"byte_end":20834,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ This function parses a `proc_macro::TokenStream` which is the type used for","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20835,"byte_end":20914,"line_start":590,"line_end":590,"column_start":1,"column_end":80}},{"value":"/ interop with the compiler in a procedural macro. To parse a","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20915,"byte_end":20978,"line_start":591,"line_end":591,"column_start":1,"column_end":64}},{"value":"/ `proc_macro2::TokenStream`, use [`syn::parse2`] instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20979,"byte_end":21039,"line_start":592,"line_end":592,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21040,"byte_end":21043,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ [`syn::parse2`]: parse2","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21044,"byte_end":21071,"line_start":594,"line_end":594,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21072,"byte_end":21075,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ *This function is available if Syn is built with both the `\"parsing\"` and","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21076,"byte_end":21153,"line_start":596,"line_end":596,"column_start":1,"column_end":78}},{"value":"/ `\"proc-macro\"` features.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21154,"byte_end":21183,"line_start":597,"line_end":597,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21184,"byte_end":21187,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21188,"byte_end":21202,"line_start":599,"line_end":599,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21203,"byte_end":21206,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21207,"byte_end":21225,"line_start":601,"line_end":601,"column_start":1,"column_end":19}},{"value":"/ extern crate proc_macro;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21226,"byte_end":21254,"line_start":602,"line_end":602,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21255,"byte_end":21258,"line_start":603,"line_end":603,"column_start":1,"column_end":4}},{"value":"/ use proc_macro::TokenStream;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21259,"byte_end":21291,"line_start":604,"line_end":604,"column_start":1,"column_end":33}},{"value":"/ use quote::quote;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21292,"byte_end":21313,"line_start":605,"line_end":605,"column_start":1,"column_end":22}},{"value":"/ use syn::DeriveInput;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21314,"byte_end":21339,"line_start":606,"line_end":606,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21340,"byte_end":21343,"line_start":607,"line_end":607,"column_start":1,"column_end":4}},{"value":"/ # const IGNORE_TOKENS: &str = stringify! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21344,"byte_end":21390,"line_start":608,"line_end":608,"column_start":1,"column_end":47}},{"value":"/ #[proc_macro_derive(MyMacro)]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21391,"byte_end":21424,"line_start":609,"line_end":609,"column_start":1,"column_end":34}},{"value":"/ # };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21425,"byte_end":21433,"line_start":610,"line_end":610,"column_start":1,"column_end":9}},{"value":"/ pub fn my_macro(input: TokenStream) -> TokenStream {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21434,"byte_end":21490,"line_start":611,"line_end":611,"column_start":1,"column_end":57}},{"value":"/     // Parse the tokens into a syntax tree","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21491,"byte_end":21537,"line_start":612,"line_end":612,"column_start":1,"column_end":47}},{"value":"/     let ast: DeriveInput = syn::parse(input).unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21538,"byte_end":21596,"line_start":613,"line_end":613,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21597,"byte_end":21600,"line_start":614,"line_end":614,"column_start":1,"column_end":4}},{"value":"/     // Build the output, possibly using quasi-quotation","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21601,"byte_end":21660,"line_start":615,"line_end":615,"column_start":1,"column_end":60}},{"value":"/     let expanded = quote! {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21661,"byte_end":21692,"line_start":616,"line_end":616,"column_start":1,"column_end":32}},{"value":"/         /* ... */","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21693,"byte_end":21714,"line_start":617,"line_end":617,"column_start":1,"column_end":22}},{"value":"/     };","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21715,"byte_end":21725,"line_start":618,"line_end":618,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21726,"byte_end":21729,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/     // Convert into a token stream and return it","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21730,"byte_end":21782,"line_start":620,"line_end":620,"column_start":1,"column_end":53}},{"value":"/     expanded.into()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21783,"byte_end":21806,"line_start":621,"line_end":621,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21807,"byte_end":21812,"line_start":622,"line_end":622,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21813,"byte_end":21820,"line_start":623,"line_end":623,"column_start":1,"column_end":8}},{"value":"cfg(all(not(all(target_arch = \"wasm32\",\n                  any(target_os = \"unknown\", target_os = \"wasi\"))), feature =\n          \"parsing\", feature = \"proc-macro\"))","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":21821,"byte_end":21973,"line_start":624,"line_end":628,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":1926},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22635,"byte_end":22641,"line_start":645,"line_end":645,"column_start":8,"column_end":14},"name":"parse2","qualname":"::parse2","value":"pub fn parse2<T: parse::Parse>(proc_macro2::TokenStream) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse a proc-macro2 token stream into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse a proc-macro2 token stream into the chosen syntax tree node.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22098,"byte_end":22168,"line_start":633,"line_end":633,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22169,"byte_end":22172,"line_start":634,"line_end":634,"column_start":1,"column_end":4}},{"value":"/ This function parses a `proc_macro2::TokenStream` which is commonly useful","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22173,"byte_end":22251,"line_start":635,"line_end":635,"column_start":1,"column_end":79}},{"value":"/ when the input comes from a node of the Syn syntax tree, for example the tts","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22252,"byte_end":22332,"line_start":636,"line_end":636,"column_start":1,"column_end":81}},{"value":"/ of a [`Macro`] node. When in a procedural macro parsing the","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22333,"byte_end":22396,"line_start":637,"line_end":637,"column_start":1,"column_end":64}},{"value":"/ `proc_macro::TokenStream` provided by the compiler, use [`syn::parse`]","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22397,"byte_end":22471,"line_start":638,"line_end":638,"column_start":1,"column_end":75}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22472,"byte_end":22484,"line_start":639,"line_end":639,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22485,"byte_end":22488,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ [`syn::parse`]: parse()","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22489,"byte_end":22516,"line_start":641,"line_end":641,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22517,"byte_end":22520,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22521,"byte_end":22599,"line_start":643,"line_end":643,"column_start":1,"column_end":79}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22600,"byte_end":22627,"line_start":644,"line_end":644,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1928},"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23385,"byte_end":23394,"line_start":675,"line_end":675,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::parse_str","value":"pub fn parse_str<T: parse::Parse>(&str) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Parse a string of Rust code into the chosen syntax tree node.","sig":null,"attributes":[{"value":"/ Parse a string of Rust code into the chosen syntax tree node.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22755,"byte_end":22820,"line_start":649,"line_end":649,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22821,"byte_end":22824,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ *This function is available if Syn is built with the `\"parsing\"` feature.*","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22825,"byte_end":22903,"line_start":651,"line_end":651,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22904,"byte_end":22907,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ # Hygiene","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22908,"byte_end":22921,"line_start":653,"line_end":653,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22922,"byte_end":22925,"line_start":654,"line_end":654,"column_start":1,"column_end":4}},{"value":"/ Every span in the resulting syntax tree will be set to resolve at the macro","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":22926,"byte_end":23005,"line_start":655,"line_end":655,"column_start":1,"column_end":80}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23006,"byte_end":23020,"line_start":656,"line_end":656,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23021,"byte_end":23024,"line_start":657,"line_end":657,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23025,"byte_end":23039,"line_start":658,"line_end":658,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23040,"byte_end":23043,"line_start":659,"line_end":659,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23044,"byte_end":23062,"line_start":660,"line_end":660,"column_start":1,"column_end":19}},{"value":"/ use syn::{Expr, Result};","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23063,"byte_end":23091,"line_start":661,"line_end":661,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23092,"byte_end":23095,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ fn run() -> Result<()> {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23096,"byte_end":23124,"line_start":663,"line_end":663,"column_start":1,"column_end":29}},{"value":"/     let code = \"assert_eq!(u8::max_value(), 255)\";","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23125,"byte_end":23179,"line_start":664,"line_end":664,"column_start":1,"column_end":55}},{"value":"/     let expr = syn::parse_str::<Expr>(code)?;","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23180,"byte_end":23229,"line_start":665,"line_end":665,"column_start":1,"column_end":50}},{"value":"/     println!(\"{:#?}\", expr);","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23230,"byte_end":23262,"line_start":666,"line_end":666,"column_start":1,"column_end":33}},{"value":"/     Ok(())","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23263,"byte_end":23277,"line_start":667,"line_end":667,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23278,"byte_end":23283,"line_start":668,"line_end":668,"column_start":1,"column_end":6}},{"value":"/ #","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23284,"byte_end":23289,"line_start":669,"line_end":669,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23290,"byte_end":23307,"line_start":670,"line_end":670,"column_start":1,"column_end":18}},{"value":"/ #     run().unwrap();","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23308,"byte_end":23333,"line_start":671,"line_end":671,"column_start":1,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23334,"byte_end":23341,"line_start":672,"line_end":672,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23342,"byte_end":23349,"line_start":673,"line_end":673,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"parsing\")","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":23350,"byte_end":23377,"line_start":674,"line_end":674,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":31419,"byte_end":31426,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42294,"byte_end":42299,"line_start":156,"line_end":156,"column_start":26,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44301,"byte_end":44302,"line_start":220,"line_end":220,"column_start":42,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44366,"byte_end":44367,"line_start":223,"line_end":223,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52477,"byte_end":52487,"line_start":504,"line_end":504,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52645,"byte_end":52655,"line_start":511,"line_end":511,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53236,"byte_end":53246,"line_start":530,"line_end":530,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53625,"byte_end":53635,"line_start":547,"line_end":547,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53683,"byte_end":53688,"line_start":550,"line_end":550,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53909,"byte_end":53914,"line_start":561,"line_end":561,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54130,"byte_end":54137,"line_start":572,"line_end":572,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54358,"byte_end":54363,"line_start":583,"line_end":583,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":71619,"byte_end":71624,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72005,"byte_end":72010,"line_start":52,"line_end":52,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72663,"byte_end":72668,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72790,"byte_end":72797,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":77530,"byte_end":77539,"line_start":133,"line_end":133,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87053,"byte_end":87057,"line_start":439,"line_end":439,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":89205,"byte_end":89206,"line_start":512,"line_end":512,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91182,"byte_end":91186,"line_start":581,"line_end":581,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91384,"byte_end":91392,"line_start":588,"line_end":588,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91595,"byte_end":91608,"line_start":595,"line_end":595,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91817,"byte_end":91827,"line_start":602,"line_end":602,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":93352,"byte_end":93361,"line_start":651,"line_end":651,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":93780,"byte_end":93788,"line_start":664,"line_end":664,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":94047,"byte_end":94060,"line_start":673,"line_end":673,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96109,"byte_end":96115,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99800,"byte_end":99807,"line_start":185,"line_end":185,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":100754,"byte_end":100765,"line_start":212,"line_end":212,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101054,"byte_end":101067,"line_start":222,"line_end":222,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101359,"byte_end":101364,"line_start":232,"line_end":232,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":102150,"byte_end":102160,"line_start":256,"line_end":256,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":102492,"byte_end":102502,"line_start":268,"line_end":268,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":104400,"byte_end":104407,"line_start":324,"line_end":324,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":104804,"byte_end":104815,"line_start":336,"line_end":336,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105032,"byte_end":105045,"line_start":344,"line_end":344,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105264,"byte_end":105269,"line_start":352,"line_end":352,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105665,"byte_end":105674,"line_start":364,"line_end":364,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105817,"byte_end":105825,"line_start":370,"line_end":370,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105971,"byte_end":105984,"line_start":376,"line_end":376,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":124554,"byte_end":124558,"line_start":530,"line_end":530,"column_start":6,"column_end":10},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127802,"byte_end":127807,"line_start":603,"line_end":603,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":139843,"byte_end":139853,"line_start":1013,"line_end":1013,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":141031,"byte_end":141035,"line_start":1044,"line_end":1044,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":166132,"byte_end":166139,"line_start":1711,"line_end":1711,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":185929,"byte_end":185937,"line_start":2308,"line_end":2308,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":201895,"byte_end":201901,"line_start":2772,"line_end":2772,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":204003,"byte_end":204008,"line_start":2832,"line_end":2832,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":212162,"byte_end":212170,"line_start":3104,"line_end":3104,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214297,"byte_end":214307,"line_start":3164,"line_end":3164,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214583,"byte_end":214592,"line_start":3173,"line_end":3173,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214826,"byte_end":214833,"line_start":3181,"line_end":3181,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":215027,"byte_end":215035,"line_start":3188,"line_end":3188,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":222989,"byte_end":222998,"line_start":3412,"line_end":3412,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223282,"byte_end":223288,"line_start":3421,"line_end":3421,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223566,"byte_end":223571,"line_start":3430,"line_end":3430,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223812,"byte_end":223821,"line_start":3438,"line_end":3438,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":224591,"byte_end":224599,"line_start":3461,"line_end":3461,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":227646,"byte_end":227655,"line_start":3553,"line_end":3553,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":228269,"byte_end":228281,"line_start":3572,"line_end":3572,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239140,"byte_end":239148,"line_start":75,"line_end":75,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242359,"byte_end":242369,"line_start":160,"line_end":160,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242801,"byte_end":242814,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243247,"byte_end":243256,"line_start":196,"line_end":196,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243689,"byte_end":243701,"line_start":214,"line_end":214,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244138,"byte_end":244149,"line_start":232,"line_end":232,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244586,"byte_end":244600,"line_start":250,"line_end":250,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246095,"byte_end":246103,"line_start":294,"line_end":294,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247144,"byte_end":247156,"line_start":328,"line_end":328,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247863,"byte_end":247874,"line_start":352,"line_end":352,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248117,"byte_end":248126,"line_start":363,"line_end":363,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251809,"byte_end":251817,"line_start":484,"line_end":484,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":253839,"byte_end":253851,"line_start":542,"line_end":542,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":254702,"byte_end":254713,"line_start":568,"line_end":568,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":256023,"byte_end":256037,"line_start":605,"line_end":605,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":256751,"byte_end":256757,"line_start":626,"line_end":626,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":257008,"byte_end":257017,"line_start":636,"line_end":636,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":258984,"byte_end":258998,"line_start":693,"line_end":693,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":259594,"byte_end":259604,"line_start":711,"line_end":711,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":260377,"byte_end":260395,"line_start":733,"line_end":733,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":260669,"byte_end":260679,"line_start":743,"line_end":743,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":261443,"byte_end":261454,"line_start":766,"line_end":766,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":262577,"byte_end":262583,"line_start":796,"line_end":796,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":262833,"byte_end":262847,"line_start":806,"line_end":806,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":265634,"byte_end":265642,"line_start":878,"line_end":878,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":267060,"byte_end":267072,"line_start":915,"line_end":915,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":269429,"byte_end":269441,"line_start":970,"line_end":970,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271407,"byte_end":271416,"line_start":1018,"line_end":1018,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271690,"byte_end":271704,"line_start":1027,"line_end":1027,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271984,"byte_end":271995,"line_start":1036,"line_end":1036,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":272361,"byte_end":272370,"line_start":1047,"line_end":1047,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":272902,"byte_end":272912,"line_start":1062,"line_end":1062,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":273390,"byte_end":273408,"line_start":1076,"line_end":1076,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":273666,"byte_end":273676,"line_start":1085,"line_end":1085,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274171,"byte_end":274182,"line_start":1099,"line_end":1099,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274442,"byte_end":274455,"line_start":1108,"line_end":1108,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274737,"byte_end":274754,"line_start":1117,"line_end":1117,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274988,"byte_end":274999,"line_start":1125,"line_end":1125,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276027,"byte_end":276035,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277379,"byte_end":277387,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277548,"byte_end":277556,"line_start":90,"line_end":90,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277661,"byte_end":277669,"line_start":96,"line_end":96,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277694,"byte_end":277702,"line_start":98,"line_end":98,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277823,"byte_end":277831,"line_start":104,"line_end":104,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277944,"byte_end":277952,"line_start":110,"line_end":110,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":278317,"byte_end":278325,"line_start":129,"line_end":129,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":278757,"byte_end":278765,"line_start":147,"line_end":147,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282272,"byte_end":282278,"line_start":108,"line_end":108,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":285887,"byte_end":285897,"line_start":221,"line_end":221,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286339,"byte_end":286346,"line_start":241,"line_end":241,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286773,"byte_end":286780,"line_start":261,"line_end":261,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":287209,"byte_end":287215,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":289256,"byte_end":289264,"line_start":338,"line_end":338,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291010,"byte_end":291021,"line_start":403,"line_end":403,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292914,"byte_end":292917,"line_start":485,"line_end":485,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":293785,"byte_end":293791,"line_start":510,"line_end":510,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":294078,"byte_end":294088,"line_start":520,"line_end":520,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":294384,"byte_end":294391,"line_start":530,"line_end":530,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":294677,"byte_end":294684,"line_start":540,"line_end":540,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":294975,"byte_end":294981,"line_start":550,"line_end":550,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":295269,"byte_end":295277,"line_start":560,"line_end":560,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":748}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":295574,"byte_end":295581,"line_start":570,"line_end":570,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296015,"byte_end":296021,"line_start":587,"line_end":587,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296161,"byte_end":296171,"line_start":593,"line_end":593,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296311,"byte_end":296318,"line_start":599,"line_end":599,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296458,"byte_end":296465,"line_start":605,"line_end":605,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296605,"byte_end":296611,"line_start":611,"line_end":611,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296751,"byte_end":296759,"line_start":617,"line_end":617,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296899,"byte_end":296906,"line_start":623,"line_end":623,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297120,"byte_end":297131,"line_start":630,"line_end":630,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297382,"byte_end":297385,"line_start":643,"line_end":643,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314443,"byte_end":314448,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":319223,"byte_end":319228,"line_start":199,"line_end":199,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":319821,"byte_end":319826,"line_start":222,"line_end":222,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":322788,"byte_end":322799,"line_start":79,"line_end":79,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":327576,"byte_end":327587,"line_start":216,"line_end":216,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":333706,"byte_end":333711,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":334996,"byte_end":335000,"line_start":165,"line_end":165,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":335623,"byte_end":335628,"line_start":187,"line_end":187,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":337419,"byte_end":337423,"line_start":222,"line_end":222,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345530,"byte_end":345534,"line_start":251,"line_end":251,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345652,"byte_end":345656,"line_start":257,"line_end":257,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":356051,"byte_end":356060,"line_start":508,"line_end":508,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":928}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":356322,"byte_end":356331,"line_start":518,"line_end":518,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":356678,"byte_end":356685,"line_start":530,"line_end":530,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":357416,"byte_end":357429,"line_start":552,"line_end":552,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":357832,"byte_end":357842,"line_start":564,"line_end":564,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":359066,"byte_end":359075,"line_start":598,"line_end":598,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":359255,"byte_end":359264,"line_start":606,"line_end":606,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":359450,"byte_end":359459,"line_start":614,"line_end":614,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":359746,"byte_end":359755,"line_start":624,"line_end":624,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":359928,"byte_end":359936,"line_start":632,"line_end":632,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":360575,"byte_end":360585,"line_start":651,"line_end":651,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":361088,"byte_end":361098,"line_start":667,"line_end":667,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":361229,"byte_end":361244,"line_start":673,"line_end":673,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":361607,"byte_end":361622,"line_start":688,"line_end":688,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":362950,"byte_end":362963,"line_start":723,"line_end":723,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":363715,"byte_end":363724,"line_start":744,"line_end":744,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":364002,"byte_end":364011,"line_start":754,"line_end":754,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":364133,"byte_end":364142,"line_start":760,"line_end":760,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":364449,"byte_end":364458,"line_start":770,"line_end":770,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":365118,"byte_end":365131,"line_start":790,"line_end":790,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":365547,"byte_end":365550,"line_start":803,"line_end":803,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":365764,"byte_end":365770,"line_start":812,"line_end":812,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":366174,"byte_end":366183,"line_start":832,"line_end":832,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":366401,"byte_end":366410,"line_start":840,"line_end":840,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":366723,"byte_end":366730,"line_start":850,"line_end":850,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":367140,"byte_end":367153,"line_start":863,"line_end":863,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":367430,"byte_end":367440,"line_start":872,"line_end":872,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":368196,"byte_end":368205,"line_start":892,"line_end":892,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":368350,"byte_end":368359,"line_start":898,"line_end":898,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":368576,"byte_end":368584,"line_start":906,"line_end":906,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":368748,"byte_end":368763,"line_start":912,"line_end":912,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":368950,"byte_end":368963,"line_start":919,"line_end":919,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":369151,"byte_end":369160,"line_start":926,"line_end":926,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":369376,"byte_end":369385,"line_start":934,"line_end":934,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":369601,"byte_end":369610,"line_start":942,"line_end":942,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":369761,"byte_end":369770,"line_start":948,"line_end":948,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":369908,"byte_end":369920,"line_start":954,"line_end":954,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":370058,"byte_end":370068,"line_start":960,"line_end":960,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":370410,"byte_end":370419,"line_start":972,"line_end":972,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":370712,"byte_end":370725,"line_start":982,"line_end":982,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":370998,"byte_end":371001,"line_start":991,"line_end":991,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":371568,"byte_end":371572,"line_start":15,"line_end":15,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":372148,"byte_end":372159,"line_start":40,"line_end":40,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":372993,"byte_end":373006,"line_start":74,"line_end":74,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":373078,"byte_end":373091,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":376969,"byte_end":376973,"line_start":212,"line_end":212,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":377112,"byte_end":377127,"line_start":218,"line_end":218,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":378207,"byte_end":378237,"line_start":249,"line_end":249,"column_start":20,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":379119,"byte_end":379148,"line_start":275,"line_end":275,"column_start":20,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":379519,"byte_end":379530,"line_start":286,"line_end":286,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":379659,"byte_end":379670,"line_start":292,"line_end":292,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":380679,"byte_end":380686,"line_start":322,"line_end":322,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":381818,"byte_end":381822,"line_start":358,"line_end":358,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":388143,"byte_end":388147,"line_start":529,"line_end":529,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":388340,"byte_end":388351,"line_start":536,"line_end":536,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":388537,"byte_end":388550,"line_start":543,"line_end":543,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":388995,"byte_end":389010,"line_start":557,"line_end":557,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":390217,"byte_end":390247,"line_start":584,"line_end":584,"column_start":23,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":392614,"byte_end":392621,"line_start":640,"line_end":640,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":392845,"byte_end":392855,"line_start":648,"line_end":648,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":393086,"byte_end":393115,"line_start":656,"line_end":656,"column_start":23,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":393363,"byte_end":393370,"line_start":665,"line_end":665,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":396454,"byte_end":396465,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":400655,"byte_end":400661,"line_start":150,"line_end":150,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":401248,"byte_end":401263,"line_start":161,"line_end":161,"column_start":30,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":408111,"byte_end":408118,"line_start":350,"line_end":350,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411877,"byte_end":411882,"line_start":96,"line_end":96,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1197},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412403,"byte_end":412409,"line_start":115,"line_end":115,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412522,"byte_end":412530,"line_start":120,"line_end":120,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412753,"byte_end":412759,"line_start":131,"line_end":131,"column_start":37,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412852,"byte_end":412857,"line_start":138,"line_end":138,"column_start":21,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":414800,"byte_end":414810,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":424607,"byte_end":424617,"line_start":363,"line_end":363,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":424818,"byte_end":424828,"line_start":374,"line_end":374,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":425033,"byte_end":425043,"line_start":385,"line_end":385,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":425240,"byte_end":425250,"line_start":393,"line_end":393,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":425832,"byte_end":425842,"line_start":412,"line_end":412,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":426666,"byte_end":426676,"line_start":446,"line_end":446,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427067,"byte_end":427072,"line_start":462,"line_end":462,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427370,"byte_end":427375,"line_start":473,"line_end":473,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427523,"byte_end":427528,"line_start":480,"line_end":480,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428028,"byte_end":428036,"line_start":499,"line_end":499,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428354,"byte_end":428362,"line_start":510,"line_end":510,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428770,"byte_end":428779,"line_start":527,"line_end":527,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429052,"byte_end":429061,"line_start":538,"line_end":538,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429514,"byte_end":429522,"line_start":557,"line_end":557,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1363},{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429666,"byte_end":429674,"line_start":565,"line_end":565,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":430530,"byte_end":430537,"line_start":593,"line_end":593,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":430723,"byte_end":430727,"line_start":602,"line_end":602,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":430869,"byte_end":430873,"line_start":610,"line_end":610,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431023,"byte_end":431027,"line_start":618,"line_end":618,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431128,"byte_end":431139,"line_start":624,"line_end":624,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431383,"byte_end":431394,"line_start":635,"line_end":635,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431542,"byte_end":431553,"line_start":642,"line_end":642,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431757,"byte_end":431758,"line_start":651,"line_end":651,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":432380,"byte_end":432387,"line_start":675,"line_end":675,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":432562,"byte_end":432569,"line_start":683,"line_end":683,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":432723,"byte_end":432730,"line_start":691,"line_end":691,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":432831,"byte_end":432845,"line_start":697,"line_end":697,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433097,"byte_end":433111,"line_start":708,"line_end":708,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433551,"byte_end":433555,"line_start":726,"line_end":726,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":435121,"byte_end":435131,"line_start":777,"line_end":777,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":435476,"byte_end":435486,"line_start":792,"line_end":792,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":435970,"byte_end":435980,"line_start":811,"line_end":811,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":436190,"byte_end":436194,"line_start":821,"line_end":821,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":439962,"byte_end":439963,"line_start":118,"line_end":118,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":440383,"byte_end":440392,"line_start":132,"line_end":132,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":440689,"byte_end":440699,"line_start":142,"line_end":142,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":442832,"byte_end":442833,"line_start":75,"line_end":75,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":443232,"byte_end":443245,"line_start":88,"line_end":88,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446845,"byte_end":446846,"line_start":96,"line_end":96,"column_start":34,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446873,"byte_end":446874,"line_start":99,"line_end":99,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471961,"byte_end":471971,"line_start":87,"line_end":87,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474299,"byte_end":474300,"line_start":152,"line_end":152,"column_start":61,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474376,"byte_end":474387,"line_start":158,"line_end":158,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474623,"byte_end":474624,"line_start":168,"line_end":168,"column_start":63,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520598,"byte_end":520609,"line_start":161,"line_end":161,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":483767,"byte_end":483778,"line_start":270,"line_end":270,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":483976,"byte_end":483987,"line_start":278,"line_end":278,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484136,"byte_end":484147,"line_start":284,"line_end":284,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":486381,"byte_end":486391,"line_start":352,"line_end":352,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":486515,"byte_end":486525,"line_start":360,"line_end":360,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":486858,"byte_end":486865,"line_start":370,"line_end":370,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":487744,"byte_end":487751,"line_start":395,"line_end":395,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488311,"byte_end":488322,"line_start":415,"line_end":415,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1752},{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":508938,"byte_end":508941,"line_start":986,"line_end":986,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":509076,"byte_end":509082,"line_start":992,"line_end":992,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":509285,"byte_end":509296,"line_start":1002,"line_end":1002,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":509448,"byte_end":509457,"line_start":1008,"line_end":1008,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":509712,"byte_end":509717,"line_start":1017,"line_end":1017,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":510255,"byte_end":510260,"line_start":1032,"line_end":1032,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":510523,"byte_end":510530,"line_start":1041,"line_end":1041,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512986,"byte_end":512987,"line_start":1109,"line_end":1109,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":513934,"byte_end":513941,"line_start":1143,"line_end":1143,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521091,"byte_end":521095,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521191,"byte_end":521195,"line_start":13,"line_end":13,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521297,"byte_end":521301,"line_start":19,"line_end":19,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\print.rs","byte_start":522350,"byte_end":522365,"line_start":6,"line_end":6,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1845}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":522926,"byte_end":522937,"line_start":13,"line_end":13,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":523052,"byte_end":523063,"line_start":16,"line_end":16,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":523079,"byte_end":523090,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":523439,"byte_end":523450,"line_start":35,"line_end":35,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526314,"byte_end":526319,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1902},{"krate":0,"index":1907},{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":531527,"byte_end":531532,"line_start":185,"line_end":185,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":531697,"byte_end":531702,"line_start":191,"line_end":191,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":531839,"byte_end":531844,"line_start":197,"line_end":197,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":532292,"byte_end":532297,"line_start":213,"line_end":213,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":532391,"byte_end":532396,"line_start":219,"line_end":219,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10778,"byte_end":10783,"line_start":296,"line_end":296,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":10807,"byte_end":10812,"line_start":299,"line_end":299,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":14974,"byte_end":14980,"line_start":410,"line_end":410,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1120}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15018,"byte_end":15021,"line_start":412,"line_end":412,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1183}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15031,"byte_end":15041,"line_start":413,"line_end":413,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1212}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15235,"byte_end":15246,"line_start":420,"line_end":420,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1491}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15482,"byte_end":15499,"line_start":429,"line_end":429,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":1517}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":15565,"byte_end":15572,"line_start":432,"line_end":432,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1535}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":19911,"byte_end":19917,"line_start":553,"line_end":553,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1555}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lib.rs","byte_start":20057,"byte_end":20062,"line_start":563,"line_end":563,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1648}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481077,"byte_end":481088,"line_start":192,"line_end":192,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1649}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\group.rs","byte_start":31419,"byte_end":31426,"line_start":65,"line_end":65,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":41791,"byte_end":41797,"line_start":131,"line_end":131,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":92},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":42294,"byte_end":42299,"line_start":156,"line_end":156,"column_start":26,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":14,"index":765},"to":{"krate":0,"index":92}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44301,"byte_end":44302,"line_start":220,"line_end":220,"column_start":42,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":104},"to":{"krate":0,"index":92}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":44366,"byte_end":44367,"line_start":223,"line_end":223,"column_start":32,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":106},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52477,"byte_end":52487,"line_start":504,"line_end":504,"column_start":19,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1981},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":52645,"byte_end":52655,"line_start":511,"line_end":511,"column_start":16,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53236,"byte_end":53246,"line_start":530,"line_end":530,"column_start":16,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53625,"byte_end":53635,"line_start":547,"line_end":547,"column_start":26,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":92}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53683,"byte_end":53688,"line_start":550,"line_end":550,"column_start":16,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4046},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":53909,"byte_end":53914,"line_start":561,"line_end":561,"column_start":16,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4036},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54130,"byte_end":54137,"line_start":572,"line_end":572,"column_start":16,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4041},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\token.rs","byte_start":54358,"byte_end":54363,"line_start":583,"line_end":583,"column_start":16,"column_end":21},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4051},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":71619,"byte_end":71624,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":14,"index":765},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72005,"byte_end":72010,"line_start":52,"line_end":52,"column_start":16,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":14,"index":765},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72663,"byte_end":72668,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":14,"index":765},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ident.rs","byte_start":72790,"byte_end":72797,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":77530,"byte_end":77539,"line_start":133,"line_end":133,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":87053,"byte_end":87057,"line_start":439,"line_end":439,"column_start":6,"column_end":10},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":89205,"byte_end":89206,"line_start":512,"line_end":512,"column_start":33,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":222},"to":{"krate":0,"index":215}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91182,"byte_end":91186,"line_start":581,"line_end":581,"column_start":20,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4090},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91384,"byte_end":91392,"line_start":588,"line_end":588,"column_start":20,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4102},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91595,"byte_end":91608,"line_start":595,"line_end":595,"column_start":20,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4108},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":91817,"byte_end":91827,"line_start":602,"line_end":602,"column_start":20,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4120},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":93352,"byte_end":93361,"line_start":651,"line_end":651,"column_start":23,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4067},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":93780,"byte_end":93788,"line_start":664,"line_end":664,"column_start":23,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4102},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\attr.rs","byte_start":94047,"byte_end":94060,"line_start":673,"line_end":673,"column_start":23,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4108},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":96109,"byte_end":96115,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":99800,"byte_end":99807,"line_start":185,"line_end":185,"column_start":20,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4131},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":100754,"byte_end":100765,"line_start":212,"line_end":212,"column_start":20,"column_end":31},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4153},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101054,"byte_end":101067,"line_start":222,"line_end":222,"column_start":20,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4158},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":101359,"byte_end":101364,"line_start":232,"line_end":232,"column_start":10,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":102150,"byte_end":102160,"line_start":256,"line_end":256,"column_start":20,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":4179},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":102492,"byte_end":102502,"line_start":268,"line_end":268,"column_start":10,"column_end":20},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":104400,"byte_end":104407,"line_start":324,"line_end":324,"column_start":23,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4131},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":104804,"byte_end":104815,"line_start":336,"line_end":336,"column_start":23,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4153},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105032,"byte_end":105045,"line_start":344,"line_end":344,"column_start":23,"column_end":36},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4158},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105264,"byte_end":105269,"line_start":352,"line_end":352,"column_start":23,"column_end":28},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4165},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105665,"byte_end":105674,"line_start":364,"line_end":364,"column_start":23,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4193},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105817,"byte_end":105825,"line_start":370,"line_end":370,"column_start":23,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4197},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\data.rs","byte_start":105971,"byte_end":105984,"line_start":376,"line_end":376,"column_start":23,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4201},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":124554,"byte_end":124558,"line_start":530,"line_end":530,"column_start":6,"column_end":10},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":127802,"byte_end":127807,"line_start":603,"line_end":603,"column_start":22,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4606},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":139843,"byte_end":139853,"line_start":1013,"line_end":1013,"column_start":10,"column_end":20},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":141031,"byte_end":141035,"line_start":1044,"line_end":1044,"column_start":20,"column_end":24},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4290},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":166132,"byte_end":166139,"line_start":1711,"line_end":1711,"column_start":20,"column_end":27},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4453},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":185929,"byte_end":185937,"line_start":2308,"line_end":2308,"column_start":20,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4531},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":201895,"byte_end":201901,"line_start":2772,"line_end":2772,"column_start":20,"column_end":26},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4597},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":204003,"byte_end":204008,"line_start":2832,"line_end":2832,"column_start":20,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4606},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":212162,"byte_end":212170,"line_start":3104,"line_end":3104,"column_start":23,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4425},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214297,"byte_end":214307,"line_start":3164,"line_end":3164,"column_start":23,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4440},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214583,"byte_end":214592,"line_start":3173,"line_end":3173,"column_start":23,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4447},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":214826,"byte_end":214833,"line_start":3181,"line_end":3181,"column_start":23,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4453},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":215027,"byte_end":215035,"line_start":3188,"line_end":3188,"column_start":23,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4458},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":222989,"byte_end":222998,"line_start":3412,"line_end":3412,"column_start":23,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4513},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223282,"byte_end":223288,"line_start":3421,"line_end":3421,"column_start":23,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4597},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223566,"byte_end":223571,"line_start":3430,"line_end":3430,"column_start":23,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4606},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":223812,"byte_end":223821,"line_start":3438,"line_end":3438,"column_start":23,"column_end":32},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4520},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":224591,"byte_end":224599,"line_start":3461,"line_end":3461,"column_start":23,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4531},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":227646,"byte_end":227655,"line_start":3553,"line_end":3553,"column_start":23,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4565},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\expr.rs","byte_start":228269,"byte_end":228281,"line_start":3572,"line_end":3572,"column_start":23,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4591},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":239140,"byte_end":239148,"line_start":75,"line_end":75,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242359,"byte_end":242369,"line_start":160,"line_end":160,"column_start":23,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":471},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":242801,"byte_end":242814,"line_start":178,"line_end":178,"column_start":23,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243247,"byte_end":243256,"line_start":196,"line_end":196,"column_start":23,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":243689,"byte_end":243701,"line_start":214,"line_end":214,"column_start":23,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244138,"byte_end":244149,"line_start":232,"line_end":232,"column_start":23,"column_end":34},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":503},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":244586,"byte_end":244600,"line_start":250,"line_end":250,"column_start":23,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":511},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":246095,"byte_end":246103,"line_start":294,"line_end":294,"column_start":6,"column_end":14},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247144,"byte_end":247156,"line_start":328,"line_end":328,"column_start":10,"column_end":22},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":247863,"byte_end":247874,"line_start":352,"line_end":352,"column_start":6,"column_end":17},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":248117,"byte_end":248126,"line_start":363,"line_end":363,"column_start":22,"column_end":31},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4679},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":251809,"byte_end":251817,"line_start":484,"line_end":484,"column_start":20,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":4652},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":253839,"byte_end":253851,"line_start":542,"line_end":542,"column_start":20,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4667},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":254702,"byte_end":254713,"line_start":568,"line_end":568,"column_start":20,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4688},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":256023,"byte_end":256037,"line_start":605,"line_end":605,"column_start":20,"column_end":34},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4728},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":256751,"byte_end":256757,"line_start":626,"line_end":626,"column_start":20,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":2,"index":34648},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":257008,"byte_end":257017,"line_start":636,"line_end":636,"column_start":20,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4679},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":258984,"byte_end":258998,"line_start":693,"line_end":693,"column_start":20,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4741},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":259594,"byte_end":259604,"line_start":711,"line_end":711,"column_start":20,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4752},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":260377,"byte_end":260395,"line_start":733,"line_end":733,"column_start":20,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4759},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":260669,"byte_end":260679,"line_start":743,"line_end":743,"column_start":20,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4695},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":261443,"byte_end":261454,"line_start":766,"line_end":766,"column_start":20,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4768},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":262577,"byte_end":262583,"line_start":796,"line_end":796,"column_start":20,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":2,"index":34648},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":262833,"byte_end":262847,"line_start":806,"line_end":806,"column_start":20,"column_end":34},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4779},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":265634,"byte_end":265642,"line_start":878,"line_end":878,"column_start":23,"column_end":31},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4652},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":267060,"byte_end":267072,"line_start":915,"line_end":915,"column_start":27,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4707},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":269429,"byte_end":269441,"line_start":970,"line_end":970,"column_start":27,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4714},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271407,"byte_end":271416,"line_start":1018,"line_end":1018,"column_start":27,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4721},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271690,"byte_end":271704,"line_start":1027,"line_end":1027,"column_start":23,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4728},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":271984,"byte_end":271995,"line_start":1036,"line_end":1036,"column_start":23,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4688},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":272361,"byte_end":272370,"line_start":1047,"line_end":1047,"column_start":23,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4679},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":272902,"byte_end":272912,"line_start":1062,"line_end":1062,"column_start":23,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4752},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":273390,"byte_end":273408,"line_start":1076,"line_end":1076,"column_start":23,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4759},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":273666,"byte_end":273676,"line_start":1085,"line_end":1085,"column_start":23,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4695},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274171,"byte_end":274182,"line_start":1099,"line_end":1099,"column_start":23,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4768},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274442,"byte_end":274455,"line_start":1108,"line_end":1108,"column_start":23,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4791},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274737,"byte_end":274754,"line_start":1117,"line_end":1117,"column_start":23,"column_end":40},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4798},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\generics.rs","byte_start":274988,"byte_end":274999,"line_start":1125,"line_end":1125,"column_start":23,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4804},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":276027,"byte_end":276035,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277379,"byte_end":277387,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4812},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277548,"byte_end":277556,"line_start":90,"line_end":90,"column_start":20,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4812},"to":{"krate":2,"index":1798}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277661,"byte_end":277669,"line_start":96,"line_end":96,"column_start":13,"column_end":21},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4812},"to":{"krate":2,"index":1803}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277694,"byte_end":277702,"line_start":98,"line_end":98,"column_start":21,"column_end":29},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4812},"to":{"krate":2,"index":1841}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277823,"byte_end":277831,"line_start":104,"line_end":104,"column_start":14,"column_end":22},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4812},"to":{"krate":2,"index":1830}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":277944,"byte_end":277952,"line_start":110,"line_end":110,"column_start":15,"column_end":23},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4812},"to":{"krate":2,"index":7148}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":278317,"byte_end":278325,"line_start":129,"line_end":129,"column_start":20,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4812},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lifetime.rs","byte_start":278757,"byte_end":278765,"line_start":147,"line_end":147,"column_start":23,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4812},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":282272,"byte_end":282278,"line_start":108,"line_end":108,"column_start":6,"column_end":12},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":285887,"byte_end":285897,"line_start":221,"line_end":221,"column_start":6,"column_end":16},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286339,"byte_end":286346,"line_start":241,"line_end":241,"column_start":6,"column_end":13},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":286773,"byte_end":286780,"line_start":261,"line_end":261,"column_start":6,"column_end":13},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4872},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":287209,"byte_end":287215,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":289256,"byte_end":289264,"line_start":338,"line_end":338,"column_start":6,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":291010,"byte_end":291021,"line_start":403,"line_end":403,"column_start":6,"column_end":17},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":292914,"byte_end":292917,"line_start":485,"line_end":485,"column_start":20,"column_end":23},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4833},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":293785,"byte_end":293791,"line_start":510,"line_end":510,"column_start":20,"column_end":26},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4860},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":294078,"byte_end":294088,"line_start":520,"line_end":520,"column_start":20,"column_end":30},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4864},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":294384,"byte_end":294391,"line_start":530,"line_end":530,"column_start":20,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4868},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":294677,"byte_end":294684,"line_start":540,"line_end":540,"column_start":20,"column_end":27},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4872},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":294975,"byte_end":294981,"line_start":550,"line_end":550,"column_start":20,"column_end":26},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4876},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":295269,"byte_end":295277,"line_start":560,"line_end":560,"column_start":20,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4880},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":295574,"byte_end":295581,"line_start":570,"line_end":570,"column_start":20,"column_end":27},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4884},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296015,"byte_end":296021,"line_start":587,"line_end":587,"column_start":23,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4860},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296161,"byte_end":296171,"line_start":593,"line_end":593,"column_start":23,"column_end":33},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4864},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296311,"byte_end":296318,"line_start":599,"line_end":599,"column_start":23,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4868},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296458,"byte_end":296465,"line_start":605,"line_end":605,"column_start":23,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4872},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296605,"byte_end":296611,"line_start":611,"line_end":611,"column_start":23,"column_end":29},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4876},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296751,"byte_end":296759,"line_start":617,"line_end":617,"column_start":23,"column_end":31},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4880},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":296899,"byte_end":296906,"line_start":623,"line_end":623,"column_start":23,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4884},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297120,"byte_end":297131,"line_start":630,"line_end":630,"column_start":23,"column_end":34},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4889},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lit.rs","byte_start":297382,"byte_end":297385,"line_start":643,"line_end":643,"column_start":10,"column_end":13},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":314443,"byte_end":314448,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":319223,"byte_end":319228,"line_start":199,"line_end":199,"column_start":20,"column_end":25},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4949},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\mac.rs","byte_start":319821,"byte_end":319826,"line_start":222,"line_end":222,"column_start":23,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4949},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":322788,"byte_end":322799,"line_start":79,"line_end":79,"column_start":20,"column_end":31},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4968},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\derive.rs","byte_start":327576,"byte_end":327587,"line_start":216,"line_end":216,"column_start":23,"column_end":34},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4968},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":333706,"byte_end":333711,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":5011},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":334996,"byte_end":335000,"line_start":165,"line_end":165,"column_start":20,"column_end":24},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":5099},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":335623,"byte_end":335628,"line_start":187,"line_end":187,"column_start":23,"column_end":28},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":5011},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\op.rs","byte_start":337419,"byte_end":337423,"line_start":222,"line_end":222,"column_start":23,"column_end":27},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":5099},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345530,"byte_end":345534,"line_start":251,"line_end":251,"column_start":20,"column_end":24},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5142},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":345652,"byte_end":345656,"line_start":257,"line_end":257,"column_start":10,"column_end":14},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":356051,"byte_end":356060,"line_start":508,"line_end":508,"column_start":20,"column_end":29},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":5190},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":356322,"byte_end":356331,"line_start":518,"line_end":518,"column_start":20,"column_end":29},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5195},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":356678,"byte_end":356685,"line_start":530,"line_end":530,"column_start":20,"column_end":27},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5202},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":357416,"byte_end":357429,"line_start":552,"line_end":552,"column_start":20,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5209},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":357832,"byte_end":357842,"line_start":564,"line_end":564,"column_start":20,"column_end":30},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5216},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":359066,"byte_end":359075,"line_start":598,"line_end":598,"column_start":20,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5227},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":359255,"byte_end":359264,"line_start":606,"line_end":606,"column_start":20,"column_end":29},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5261},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":359450,"byte_end":359459,"line_start":614,"line_end":614,"column_start":20,"column_end":29},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5231},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":359746,"byte_end":359755,"line_start":624,"line_end":624,"column_start":20,"column_end":29},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5265},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":359928,"byte_end":359936,"line_start":632,"line_end":632,"column_start":20,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5236},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":360575,"byte_end":360585,"line_start":651,"line_end":651,"column_start":10,"column_end":20},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":361088,"byte_end":361098,"line_start":667,"line_end":667,"column_start":20,"column_end":30},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5294},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":361229,"byte_end":361244,"line_start":673,"line_end":673,"column_start":20,"column_end":35},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5241},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":361607,"byte_end":361622,"line_start":688,"line_end":688,"column_start":10,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":362950,"byte_end":362963,"line_start":723,"line_end":723,"column_start":20,"column_end":33},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5246},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":363715,"byte_end":363724,"line_start":744,"line_end":744,"column_start":20,"column_end":29},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5256},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":364002,"byte_end":364011,"line_start":754,"line_end":754,"column_start":20,"column_end":29},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5251},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":364133,"byte_end":364142,"line_start":760,"line_end":760,"column_start":10,"column_end":19},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":5251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":364449,"byte_end":364458,"line_start":770,"line_end":770,"column_start":20,"column_end":29},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5280},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":365118,"byte_end":365131,"line_start":790,"line_end":790,"column_start":20,"column_end":33},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5285},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":365547,"byte_end":365550,"line_start":803,"line_end":803,"column_start":20,"column_end":23},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5275},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":365764,"byte_end":365770,"line_start":812,"line_end":812,"column_start":20,"column_end":26},"kind":{"Impl":{"id":163}},"from":{"krate":2,"index":34648},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":366174,"byte_end":366183,"line_start":832,"line_end":832,"column_start":23,"column_end":32},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":5190},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":366401,"byte_end":366410,"line_start":840,"line_end":840,"column_start":23,"column_end":32},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":5195},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":366723,"byte_end":366730,"line_start":850,"line_end":850,"column_start":23,"column_end":30},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":5202},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":367140,"byte_end":367153,"line_start":863,"line_end":863,"column_start":23,"column_end":36},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":5209},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":367430,"byte_end":367440,"line_start":872,"line_end":872,"column_start":23,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":5216},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":368196,"byte_end":368205,"line_start":892,"line_end":892,"column_start":23,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":5227},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":368350,"byte_end":368359,"line_start":898,"line_end":898,"column_start":23,"column_end":32},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":5231},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":368576,"byte_end":368584,"line_start":906,"line_end":906,"column_start":23,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":5236},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":368748,"byte_end":368763,"line_start":912,"line_end":912,"column_start":23,"column_end":38},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":5241},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":368950,"byte_end":368963,"line_start":919,"line_end":919,"column_start":23,"column_end":36},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":5246},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":369151,"byte_end":369160,"line_start":926,"line_end":926,"column_start":23,"column_end":32},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":5256},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":369376,"byte_end":369385,"line_start":934,"line_end":934,"column_start":23,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":5251},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":369601,"byte_end":369610,"line_start":942,"line_end":942,"column_start":23,"column_end":32},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":5261},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":369761,"byte_end":369770,"line_start":948,"line_end":948,"column_start":23,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5265},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":369908,"byte_end":369920,"line_start":954,"line_end":954,"column_start":23,"column_end":35},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5269},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":370058,"byte_end":370068,"line_start":960,"line_end":960,"column_start":23,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5294},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":370410,"byte_end":370419,"line_start":972,"line_end":972,"column_start":23,"column_end":32},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5280},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":370712,"byte_end":370725,"line_start":982,"line_end":982,"column_start":23,"column_end":36},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5285},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ty.rs","byte_start":370998,"byte_end":371001,"line_start":991,"line_end":991,"column_start":23,"column_end":26},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5275},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":371568,"byte_end":371572,"line_start":15,"line_end":15,"column_start":21,"column_end":25},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5303},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":372148,"byte_end":372159,"line_start":40,"line_end":40,"column_start":21,"column_end":32},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5308},"to":{"krate":2,"index":1997}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":372993,"byte_end":373006,"line_start":74,"line_end":74,"column_start":18,"column_end":31},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5313},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":373078,"byte_end":373091,"line_start":80,"line_end":80,"column_start":6,"column_end":19},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":376969,"byte_end":376973,"line_start":212,"line_end":212,"column_start":20,"column_end":24},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5303},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":377112,"byte_end":377127,"line_start":218,"line_end":218,"column_start":20,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5324},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":378207,"byte_end":378237,"line_start":249,"line_end":249,"column_start":20,"column_end":50},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":5342},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":379119,"byte_end":379148,"line_start":275,"line_end":275,"column_start":20,"column_end":49},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":5361},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":379519,"byte_end":379530,"line_start":286,"line_end":286,"column_start":20,"column_end":31},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5308},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":379659,"byte_end":379670,"line_start":292,"line_end":292,"column_start":10,"column_end":21},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":5308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":380679,"byte_end":380686,"line_start":322,"line_end":322,"column_start":20,"column_end":27},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5349},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":381818,"byte_end":381822,"line_start":358,"line_end":358,"column_start":10,"column_end":14},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":388143,"byte_end":388147,"line_start":529,"line_end":529,"column_start":23,"column_end":27},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5303},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":388340,"byte_end":388351,"line_start":536,"line_end":536,"column_start":23,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5308},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":388537,"byte_end":388550,"line_start":543,"line_end":543,"column_start":23,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5313},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":388995,"byte_end":389010,"line_start":557,"line_end":557,"column_start":23,"column_end":38},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5324},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":390217,"byte_end":390247,"line_start":584,"line_end":584,"column_start":23,"column_end":53},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5342},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":392614,"byte_end":392621,"line_start":640,"line_end":640,"column_start":23,"column_end":30},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5349},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":392845,"byte_end":392855,"line_start":648,"line_end":648,"column_start":23,"column_end":33},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5355},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":393086,"byte_end":393115,"line_start":656,"line_end":656,"column_start":23,"column_end":52},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5361},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\path.rs","byte_start":393363,"byte_end":393370,"line_start":665,"line_end":665,"column_start":10,"column_end":17},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":396454,"byte_end":396465,"line_start":48,"line_end":48,"column_start":6,"column_end":17},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":400655,"byte_end":400661,"line_start":150,"line_end":150,"column_start":10,"column_end":16},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":401248,"byte_end":401263,"line_start":161,"line_end":161,"column_start":30,"column_end":45},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1163},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\buffer.rs","byte_start":408111,"byte_end":408118,"line_start":350,"line_end":350,"column_start":6,"column_end":13},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409455,"byte_end":409460,"line_start":24,"line_end":24,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1192}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":409472,"byte_end":409478,"line_start":24,"line_end":24,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":1208},"to":{"krate":0,"index":1192}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":411877,"byte_end":411882,"line_start":96,"line_end":96,"column_start":19,"column_end":24},"kind":{"Impl":{"id":208}},"from":{"krate":14,"index":765},"to":{"krate":0,"index":1192}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412403,"byte_end":412409,"line_start":115,"line_end":115,"column_start":24,"column_end":30},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5396},"to":{"krate":0,"index":1634}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412522,"byte_end":412530,"line_start":120,"line_end":120,"column_start":31,"column_end":39},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1210},"to":{"krate":0,"index":100}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412753,"byte_end":412759,"line_start":131,"line_end":131,"column_start":37,"column_end":43},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5396},"to":{"krate":0,"index":1609}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\ext.rs","byte_start":412852,"byte_end":412857,"line_start":138,"line_end":138,"column_start":21,"column_end":26},"kind":{"Impl":{"id":212}},"from":{"krate":14,"index":765},"to":{"krate":0,"index":1208}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":414800,"byte_end":414810,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":5401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":424607,"byte_end":424617,"line_start":363,"line_end":363,"column_start":32,"column_end":42},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":5401},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":424818,"byte_end":424828,"line_start":374,"line_end":374,"column_start":26,"column_end":36},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":5401},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":425033,"byte_end":425043,"line_start":385,"line_end":385,"column_start":41,"column_end":51},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5401},"to":{"krate":2,"index":5532}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":425240,"byte_end":425250,"line_start":393,"line_end":393,"column_start":35,"column_end":45},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":5401},"to":{"krate":2,"index":5545}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":425832,"byte_end":425842,"line_start":412,"line_end":412,"column_start":29,"column_end":39},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5401},"to":{"krate":2,"index":5536}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":426666,"byte_end":426676,"line_start":446,"line_end":446,"column_start":24,"column_end":34},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5401},"to":{"krate":2,"index":2069}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427067,"byte_end":427072,"line_start":462,"line_end":462,"column_start":29,"column_end":34},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1306},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427370,"byte_end":427375,"line_start":473,"line_end":473,"column_start":38,"column_end":43},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1306},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":427523,"byte_end":427528,"line_start":480,"line_end":480,"column_start":26,"column_end":31},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1306},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428028,"byte_end":428036,"line_start":499,"line_end":499,"column_start":29,"column_end":37},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428354,"byte_end":428362,"line_start":510,"line_end":510,"column_start":38,"column_end":46},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":1330},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":428770,"byte_end":428779,"line_start":527,"line_end":527,"column_start":25,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429052,"byte_end":429061,"line_start":538,"line_end":538,"column_start":34,"column_end":43},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5410},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429514,"byte_end":429522,"line_start":557,"line_end":557,"column_start":25,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5419},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":429666,"byte_end":429674,"line_start":565,"line_end":565,"column_start":34,"column_end":42},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5419},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":430256,"byte_end":430273,"line_start":583,"line_end":583,"column_start":29,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":5584},"to":{"krate":0,"index":1373}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":430530,"byte_end":430537,"line_start":593,"line_end":593,"column_start":6,"column_end":13},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":430723,"byte_end":430727,"line_start":602,"line_end":602,"column_start":23,"column_end":27},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1369},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":430869,"byte_end":430873,"line_start":610,"line_end":610,"column_start":26,"column_end":30},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1369},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431023,"byte_end":431027,"line_start":618,"line_end":618,"column_start":35,"column_end":39},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1369},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431128,"byte_end":431139,"line_start":624,"line_end":624,"column_start":29,"column_end":40},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431383,"byte_end":431394,"line_start":635,"line_end":635,"column_start":38,"column_end":49},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431542,"byte_end":431553,"line_start":642,"line_end":642,"column_start":26,"column_end":37},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":1377},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":431757,"byte_end":431758,"line_start":651,"line_end":651,"column_start":45,"column_end":46},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":1421},"to":{"krate":0,"index":1373}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":432380,"byte_end":432387,"line_start":675,"line_end":675,"column_start":6,"column_end":13},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":432562,"byte_end":432569,"line_start":683,"line_end":683,"column_start":26,"column_end":33},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":1423},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":432723,"byte_end":432730,"line_start":691,"line_end":691,"column_start":35,"column_end":42},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":1423},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":432831,"byte_end":432845,"line_start":697,"line_end":697,"column_start":29,"column_end":43},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":1427},"to":{"krate":2,"index":5632}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433097,"byte_end":433111,"line_start":708,"line_end":708,"column_start":38,"column_end":52},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":1427},"to":{"krate":2,"index":5584}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":433551,"byte_end":433555,"line_start":726,"line_end":726,"column_start":12,"column_end":16},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":5428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":435121,"byte_end":435131,"line_start":777,"line_end":777,"column_start":29,"column_end":39},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":5401},"to":{"krate":2,"index":2362}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":435476,"byte_end":435486,"line_start":792,"line_end":792,"column_start":32,"column_end":42},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":5401},"to":{"krate":2,"index":2366}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":435970,"byte_end":435980,"line_start":811,"line_end":811,"column_start":29,"column_end":39},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":5401},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\punctuated.rs","byte_start":436190,"byte_end":436194,"line_start":821,"line_end":821,"column_start":29,"column_end":33},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5428},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":439871,"byte_end":439876,"line_start":114,"line_end":114,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1502}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":439962,"byte_end":439963,"line_start":118,"line_end":118,"column_start":31,"column_end":32},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":1505},"to":{"krate":0,"index":1502}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":440383,"byte_end":440392,"line_start":132,"line_end":132,"column_start":21,"column_end":30},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4067},"to":{"krate":0,"index":1502}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_quote.rs","byte_start":440689,"byte_end":440699,"line_start":142,"line_end":142,"column_start":41,"column_end":51},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":5401},"to":{"krate":0,"index":1502}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":442736,"byte_end":442741,"line_start":71,"line_end":71,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1527}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":442832,"byte_end":442833,"line_start":75,"line_end":75,"column_start":36,"column_end":37},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":1530},"to":{"krate":0,"index":1527}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse_macro_input.rs","byte_start":443232,"byte_end":443245,"line_start":88,"line_end":88,"column_start":26,"column_end":39},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":214},"to":{"krate":0,"index":1527}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446503,"byte_end":446509,"line_start":85,"line_end":85,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":1544},"to":{"krate":0,"index":1540}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446845,"byte_end":446846,"line_start":96,"line_end":96,"column_start":34,"column_end":35},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":1546},"to":{"krate":0,"index":1544}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\spanned.rs","byte_start":446873,"byte_end":446874,"line_start":99,"line_end":99,"column_start":21,"column_end":22},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":1548},"to":{"krate":0,"index":1540}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\sealed.rs","byte_start":469431,"byte_end":469435,"line_start":3,"line_end":3,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2091},"to":{"krate":0,"index":1609}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":471961,"byte_end":471971,"line_start":87,"line_end":87,"column_start":10,"column_end":20},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":1622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474162,"byte_end":474168,"line_start":146,"line_end":146,"column_start":17,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":1609},"to":{"krate":0,"index":1634}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474299,"byte_end":474300,"line_start":152,"line_end":152,"column_start":61,"column_end":62},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":1637},"to":{"krate":0,"index":1634}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474376,"byte_end":474387,"line_start":158,"line_end":158,"column_start":26,"column_end":37},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":1640},"to":{"krate":0,"index":1793}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\lookahead.rs","byte_start":474623,"byte_end":474624,"line_start":168,"line_end":168,"column_start":63,"column_end":64},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":1646},"to":{"krate":0,"index":1609}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\discouraged.rs","byte_start":520598,"byte_end":520609,"line_start":161,"line_end":161,"column_start":26,"column_end":37},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":1694},"to":{"krate":0,"index":1651}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":481808,"byte_end":481813,"line_start":221,"line_end":221,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":483767,"byte_end":483778,"line_start":270,"line_end":270,"column_start":19,"column_end":30},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":1694},"to":{"krate":2,"index":2305}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":483976,"byte_end":483987,"line_start":278,"line_end":278,"column_start":22,"column_end":33},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":1694},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":484136,"byte_end":484147,"line_start":284,"line_end":284,"column_start":20,"column_end":31},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":1694},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":486381,"byte_end":486391,"line_start":352,"line_end":352,"column_start":24,"column_end":34},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5442},"to":{"krate":2,"index":2281}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":486515,"byte_end":486525,"line_start":360,"line_end":360,"column_start":14,"column_end":24},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":486858,"byte_end":486865,"line_start":370,"line_end":370,"column_start":6,"column_end":13},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":487744,"byte_end":487751,"line_start":395,"line_end":395,"column_start":6,"column_end":13},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":488311,"byte_end":488322,"line_start":415,"line_end":415,"column_start":10,"column_end":21},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":1694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":508938,"byte_end":508941,"line_start":986,"line_end":986,"column_start":26,"column_end":29},"kind":{"Impl":{"id":267}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":509076,"byte_end":509082,"line_start":992,"line_end":992,"column_start":34,"column_end":40},"kind":{"Impl":{"id":268}},"from":{"krate":2,"index":34648},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":509285,"byte_end":509296,"line_start":1002,"line_end":1002,"column_start":16,"column_end":27},"kind":{"Impl":{"id":269}},"from":{"krate":14,"index":693},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":509448,"byte_end":509457,"line_start":1008,"line_end":1008,"column_start":16,"column_end":25},"kind":{"Impl":{"id":270}},"from":{"krate":14,"index":704},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":509712,"byte_end":509717,"line_start":1017,"line_end":1017,"column_start":16,"column_end":21},"kind":{"Impl":{"id":271}},"from":{"krate":14,"index":719},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":510255,"byte_end":510260,"line_start":1032,"line_end":1032,"column_start":16,"column_end":21},"kind":{"Impl":{"id":272}},"from":{"krate":14,"index":743},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":510523,"byte_end":510530,"line_start":1041,"line_end":1041,"column_start":16,"column_end":23},"kind":{"Impl":{"id":273}},"from":{"krate":14,"index":770},"to":{"krate":0,"index":1690}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":511067,"byte_end":511072,"line_start":1057,"line_end":1057,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1775}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":512986,"byte_end":512987,"line_start":1109,"line_end":1109,"column_start":23,"column_end":24},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":1783},"to":{"krate":0,"index":1775}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\parse.rs","byte_start":513934,"byte_end":513941,"line_start":1143,"line_end":1143,"column_start":6,"column_end":13},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521091,"byte_end":521095,"line_start":7,"line_end":7,"column_start":31,"column_end":35},"kind":{"Impl":{"id":276}},"from":{"krate":14,"index":698},"to":{"krate":0,"index":1793}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521191,"byte_end":521195,"line_start":13,"line_end":13,"column_start":31,"column_end":35},"kind":{"Impl":{"id":277}},"from":{"krate":14,"index":698},"to":{"krate":0,"index":1793}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521297,"byte_end":521301,"line_start":19,"line_end":19,"column_start":31,"column_end":35},"kind":{"Impl":{"id":278}},"from":{"krate":14,"index":698},"to":{"krate":0,"index":1793}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\span.rs","byte_start":521737,"byte_end":521742,"line_start":44,"line_end":44,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":1823}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\print.rs","byte_start":522350,"byte_end":522365,"line_start":6,"line_end":6,"column_start":26,"column_end":41},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":1837},"to":{"krate":16,"index":57}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":522926,"byte_end":522937,"line_start":13,"line_end":13,"column_start":25,"column_end":36},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":1851},"to":{"krate":2,"index":2093}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":523052,"byte_end":523063,"line_start":16,"line_end":16,"column_start":31,"column_end":42},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":1851},"to":{"krate":2,"index":2081}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":523079,"byte_end":523090,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":1851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\thread.rs","byte_start":523439,"byte_end":523450,"line_start":35,"line_end":35,"column_start":26,"column_end":37},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":1851},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":526314,"byte_end":526319,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":1895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":531527,"byte_end":531532,"line_start":185,"line_end":185,"column_start":16,"column_end":21},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":1895},"to":{"krate":2,"index":6960}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":531697,"byte_end":531702,"line_start":191,"line_end":191,"column_start":18,"column_end":23},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":1895},"to":{"krate":2,"index":6965}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":531839,"byte_end":531844,"line_start":197,"line_end":197,"column_start":16,"column_end":21},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":1895},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":532292,"byte_end":532297,"line_start":213,"line_end":213,"column_start":28,"column_end":33},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":1895},"to":{"krate":1,"index":1750}},{"span":{"file_name":"C:\\Users\\Jamison\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\syn-0.15.44\\src\\error.rs","byte_start":532391,"byte_end":532396,"line_start":219,"line_end":219,"column_start":25,"column_end":30},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":1895},"to":{"krate":2,"index":1997}}]}